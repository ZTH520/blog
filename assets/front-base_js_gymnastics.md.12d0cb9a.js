import{_ as s,o as n,c as a,S as l}from"./chunks/framework.a6b0411f.js";const h=JSON.parse('{"title":"类型体操","description":"","frontmatter":{},"headers":[],"relativePath":"front-base/js/gymnastics.md","filePath":"front-base/js/gymnastics.md","lastUpdated":1692687945000}'),p={name:"front-base/js/gymnastics.md"},o=l(`<h1 id="类型体操" tabindex="-1">类型体操 <a class="header-anchor" href="#类型体操" aria-label="Permalink to &quot;类型体操&quot;">​</a></h1><h2 id="object-工具类型" tabindex="-1">object 工具类型 <a class="header-anchor" href="#object-工具类型" aria-label="Permalink to &quot;object 工具类型&quot;">​</a></h2><h3 id="merge" tabindex="-1">Merge <a class="header-anchor" href="#merge" aria-label="Permalink to &quot;Merge&quot;">​</a></h3><p>合并两个已知类型，对于同名的key，合并类型，最后返回一个新类型</p><div class="language-ts vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki solarized-dark vp-code-dark"><code><span class="line"><span style="color:#586E75;font-style:italic;">/**</span></span>
<span class="line"><span style="color:#586E75;font-style:italic;"> * 1.in 遍历 T 或者 U 类型 keyof T | keyof U 也可以写成 keyof (T &amp; U)</span></span>
<span class="line"><span style="color:#586E75;font-style:italic;"> * 2.extends 关键字构建条件类型</span></span>
<span class="line"><span style="color:#586E75;font-style:italic;"> * 3.判断 K 子类型是不是在 T 或者 U 中，如果是生成联合类型</span></span>
<span class="line"><span style="color:#586E75;font-style:italic;">*/</span></span>
<span class="line"><span style="color:#93A1A1;font-weight:bold;">type</span><span style="color:#839496;"> </span><span style="color:#CB4B16;">Merge</span><span style="color:#839496;">&lt;</span><span style="color:#CB4B16;">T</span><span style="color:#839496;"> </span><span style="color:#93A1A1;font-weight:bold;">extends</span><span style="color:#839496;"> </span><span style="color:#CB4B16;">Record</span><span style="color:#839496;">&lt;</span><span style="color:#859900;">string</span><span style="color:#839496;">, </span><span style="color:#859900;">any</span><span style="color:#839496;">&gt;, </span><span style="color:#CB4B16;">U</span><span style="color:#839496;"> </span><span style="color:#93A1A1;font-weight:bold;">extends</span><span style="color:#839496;"> </span><span style="color:#CB4B16;">Record</span><span style="color:#839496;">&lt;</span><span style="color:#859900;">string</span><span style="color:#839496;">, </span><span style="color:#859900;">any</span><span style="color:#839496;">&gt;&gt; </span><span style="color:#859900;">=</span><span style="color:#839496;"> {</span></span>
<span class="line"><span style="color:#839496;">  [</span><span style="color:#CB4B16;">K</span><span style="color:#839496;"> </span><span style="color:#859900;">in</span><span style="color:#839496;"> </span><span style="color:#859900;">keyof</span><span style="color:#839496;"> </span><span style="color:#CB4B16;">T</span><span style="color:#839496;"> </span><span style="color:#859900;">|</span><span style="color:#839496;"> </span><span style="color:#859900;">keyof</span><span style="color:#839496;"> </span><span style="color:#CB4B16;">U</span><span style="color:#839496;">]</span><span style="color:#859900;">:</span><span style="color:#839496;"> </span><span style="color:#CB4B16;">K</span><span style="color:#839496;"> </span><span style="color:#93A1A1;font-weight:bold;">extends</span><span style="color:#839496;"> </span><span style="color:#859900;">keyof</span><span style="color:#839496;"> </span><span style="color:#CB4B16;">U</span></span>
<span class="line"><span style="color:#839496;">    </span><span style="color:#859900;">?</span><span style="color:#839496;"> </span><span style="color:#CB4B16;">K</span><span style="color:#839496;"> </span><span style="color:#93A1A1;font-weight:bold;">extends</span><span style="color:#839496;"> </span><span style="color:#859900;">keyof</span><span style="color:#839496;"> </span><span style="color:#CB4B16;">T</span></span>
<span class="line"><span style="color:#839496;">      </span><span style="color:#859900;">?</span><span style="color:#839496;"> </span><span style="color:#CB4B16;">U</span><span style="color:#839496;">[</span><span style="color:#CB4B16;">K</span><span style="color:#839496;">] </span><span style="color:#859900;">|</span><span style="color:#839496;"> </span><span style="color:#CB4B16;">T</span><span style="color:#839496;">[</span><span style="color:#CB4B16;">K</span><span style="color:#839496;">]</span></span>
<span class="line"><span style="color:#839496;">      </span><span style="color:#859900;">:</span><span style="color:#839496;"> </span><span style="color:#CB4B16;">U</span><span style="color:#839496;">[</span><span style="color:#CB4B16;">K</span><span style="color:#839496;">]</span></span>
<span class="line"><span style="color:#839496;">    </span><span style="color:#859900;">:</span><span style="color:#839496;"> </span><span style="color:#CB4B16;">K</span><span style="color:#839496;"> </span><span style="color:#93A1A1;font-weight:bold;">extends</span><span style="color:#839496;"> </span><span style="color:#859900;">keyof</span><span style="color:#839496;"> </span><span style="color:#CB4B16;">T</span></span>
<span class="line"><span style="color:#839496;">      </span><span style="color:#859900;">?</span><span style="color:#839496;"> </span><span style="color:#CB4B16;">T</span><span style="color:#839496;">[</span><span style="color:#CB4B16;">K</span><span style="color:#839496;">] </span><span style="color:#859900;">:</span><span style="color:#839496;"> </span><span style="color:#859900;">never</span></span>
<span class="line"><span style="color:#839496;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#93A1A1;font-weight:bold;">type</span><span style="color:#839496;"> </span><span style="color:#CB4B16;">X</span><span style="color:#839496;"> </span><span style="color:#859900;">=</span><span style="color:#839496;"> </span><span style="color:#CB4B16;">Merge</span><span style="color:#839496;">&lt;{ a</span><span style="color:#859900;">:</span><span style="color:#839496;"> </span><span style="color:#859900;">string</span><span style="color:#839496;">; c</span><span style="color:#859900;">:</span><span style="color:#839496;"> </span><span style="color:#859900;">string</span><span style="color:#839496;"> }, { a</span><span style="color:#859900;">:</span><span style="color:#839496;"> </span><span style="color:#859900;">number</span><span style="color:#839496;">; b</span><span style="color:#859900;">:</span><span style="color:#839496;"> </span><span style="color:#859900;">number</span><span style="color:#839496;"> }&gt;</span></span></code></pre><pre class="shiki solarized-light vp-code-light"><code><span class="line"><span style="color:#93A1A1;font-style:italic;">/**</span></span>
<span class="line"><span style="color:#93A1A1;font-style:italic;"> * 1.in 遍历 T 或者 U 类型 keyof T | keyof U 也可以写成 keyof (T &amp; U)</span></span>
<span class="line"><span style="color:#93A1A1;font-style:italic;"> * 2.extends 关键字构建条件类型</span></span>
<span class="line"><span style="color:#93A1A1;font-style:italic;"> * 3.判断 K 子类型是不是在 T 或者 U 中，如果是生成联合类型</span></span>
<span class="line"><span style="color:#93A1A1;font-style:italic;">*/</span></span>
<span class="line"><span style="color:#586E75;font-weight:bold;">type</span><span style="color:#657B83;"> </span><span style="color:#CB4B16;">Merge</span><span style="color:#657B83;">&lt;</span><span style="color:#CB4B16;">T</span><span style="color:#657B83;"> </span><span style="color:#586E75;font-weight:bold;">extends</span><span style="color:#657B83;"> </span><span style="color:#CB4B16;">Record</span><span style="color:#657B83;">&lt;</span><span style="color:#859900;">string</span><span style="color:#657B83;">, </span><span style="color:#859900;">any</span><span style="color:#657B83;">&gt;, </span><span style="color:#CB4B16;">U</span><span style="color:#657B83;"> </span><span style="color:#586E75;font-weight:bold;">extends</span><span style="color:#657B83;"> </span><span style="color:#CB4B16;">Record</span><span style="color:#657B83;">&lt;</span><span style="color:#859900;">string</span><span style="color:#657B83;">, </span><span style="color:#859900;">any</span><span style="color:#657B83;">&gt;&gt; </span><span style="color:#859900;">=</span><span style="color:#657B83;"> {</span></span>
<span class="line"><span style="color:#657B83;">  [</span><span style="color:#CB4B16;">K</span><span style="color:#657B83;"> </span><span style="color:#859900;">in</span><span style="color:#657B83;"> </span><span style="color:#859900;">keyof</span><span style="color:#657B83;"> </span><span style="color:#CB4B16;">T</span><span style="color:#657B83;"> </span><span style="color:#859900;">|</span><span style="color:#657B83;"> </span><span style="color:#859900;">keyof</span><span style="color:#657B83;"> </span><span style="color:#CB4B16;">U</span><span style="color:#657B83;">]</span><span style="color:#859900;">:</span><span style="color:#657B83;"> </span><span style="color:#CB4B16;">K</span><span style="color:#657B83;"> </span><span style="color:#586E75;font-weight:bold;">extends</span><span style="color:#657B83;"> </span><span style="color:#859900;">keyof</span><span style="color:#657B83;"> </span><span style="color:#CB4B16;">U</span></span>
<span class="line"><span style="color:#657B83;">    </span><span style="color:#859900;">?</span><span style="color:#657B83;"> </span><span style="color:#CB4B16;">K</span><span style="color:#657B83;"> </span><span style="color:#586E75;font-weight:bold;">extends</span><span style="color:#657B83;"> </span><span style="color:#859900;">keyof</span><span style="color:#657B83;"> </span><span style="color:#CB4B16;">T</span></span>
<span class="line"><span style="color:#657B83;">      </span><span style="color:#859900;">?</span><span style="color:#657B83;"> </span><span style="color:#CB4B16;">U</span><span style="color:#657B83;">[</span><span style="color:#CB4B16;">K</span><span style="color:#657B83;">] </span><span style="color:#859900;">|</span><span style="color:#657B83;"> </span><span style="color:#CB4B16;">T</span><span style="color:#657B83;">[</span><span style="color:#CB4B16;">K</span><span style="color:#657B83;">]</span></span>
<span class="line"><span style="color:#657B83;">      </span><span style="color:#859900;">:</span><span style="color:#657B83;"> </span><span style="color:#CB4B16;">U</span><span style="color:#657B83;">[</span><span style="color:#CB4B16;">K</span><span style="color:#657B83;">]</span></span>
<span class="line"><span style="color:#657B83;">    </span><span style="color:#859900;">:</span><span style="color:#657B83;"> </span><span style="color:#CB4B16;">K</span><span style="color:#657B83;"> </span><span style="color:#586E75;font-weight:bold;">extends</span><span style="color:#657B83;"> </span><span style="color:#859900;">keyof</span><span style="color:#657B83;"> </span><span style="color:#CB4B16;">T</span></span>
<span class="line"><span style="color:#657B83;">      </span><span style="color:#859900;">?</span><span style="color:#657B83;"> </span><span style="color:#CB4B16;">T</span><span style="color:#657B83;">[</span><span style="color:#CB4B16;">K</span><span style="color:#657B83;">] </span><span style="color:#859900;">:</span><span style="color:#657B83;"> </span><span style="color:#859900;">never</span></span>
<span class="line"><span style="color:#657B83;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#586E75;font-weight:bold;">type</span><span style="color:#657B83;"> </span><span style="color:#CB4B16;">X</span><span style="color:#657B83;"> </span><span style="color:#859900;">=</span><span style="color:#657B83;"> </span><span style="color:#CB4B16;">Merge</span><span style="color:#657B83;">&lt;{ a</span><span style="color:#859900;">:</span><span style="color:#657B83;"> </span><span style="color:#859900;">string</span><span style="color:#657B83;">; c</span><span style="color:#859900;">:</span><span style="color:#657B83;"> </span><span style="color:#859900;">string</span><span style="color:#657B83;"> }, { a</span><span style="color:#859900;">:</span><span style="color:#657B83;"> </span><span style="color:#859900;">number</span><span style="color:#657B83;">; b</span><span style="color:#859900;">:</span><span style="color:#657B83;"> </span><span style="color:#859900;">number</span><span style="color:#657B83;"> }&gt;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br></div></div><h3 id="diff" tabindex="-1">Diff <a class="header-anchor" href="#diff" aria-label="Permalink to &quot;Diff&quot;">​</a></h3><p>找出两个对象类型的差异，返回一个新的类型</p><div class="language-ts vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki solarized-dark vp-code-dark"><code><span class="line"><span style="color:#586E75;font-style:italic;">/**</span></span>
<span class="line"><span style="color:#586E75;font-style:italic;"> * 1.通过 keyof (T | U) 可以获取类型的公共部分</span></span>
<span class="line"><span style="color:#586E75;font-style:italic;"> * 2.in 遍历所有 keyof (T &amp; U) 枚举类型</span></span>
<span class="line"><span style="color:#586E75;font-style:italic;"> * 3.通过 Exclude 排除公共类型，as 断言为新的类型 Exclude</span></span>
<span class="line"><span style="color:#586E75;font-style:italic;">*/</span></span>
<span class="line"><span style="color:#93A1A1;font-weight:bold;">type</span><span style="color:#839496;"> </span><span style="color:#CB4B16;">Diff</span><span style="color:#839496;">&lt;</span><span style="color:#CB4B16;">T</span><span style="color:#839496;"> </span><span style="color:#93A1A1;font-weight:bold;">extends</span><span style="color:#839496;"> </span><span style="color:#859900;">object</span><span style="color:#839496;">, </span><span style="color:#CB4B16;">U</span><span style="color:#839496;"> </span><span style="color:#93A1A1;font-weight:bold;">extends</span><span style="color:#839496;"> </span><span style="color:#859900;">object</span><span style="color:#839496;">&gt; </span><span style="color:#859900;">=</span><span style="color:#839496;"> {</span></span>
<span class="line"><span style="color:#839496;">  [</span><span style="color:#CB4B16;">K</span><span style="color:#839496;"> </span><span style="color:#859900;">in</span><span style="color:#839496;"> </span><span style="color:#859900;">keyof</span><span style="color:#839496;"> (</span><span style="color:#CB4B16;">T</span><span style="color:#839496;"> </span><span style="color:#859900;">&amp;</span><span style="color:#839496;"> </span><span style="color:#CB4B16;">U</span><span style="color:#839496;">) </span><span style="color:#859900;">as</span><span style="color:#839496;"> </span><span style="color:#CB4B16;">Exclude</span><span style="color:#839496;">&lt;</span><span style="color:#CB4B16;">K</span><span style="color:#839496;">, </span><span style="color:#859900;">keyof</span><span style="color:#839496;"> (</span><span style="color:#CB4B16;">T</span><span style="color:#839496;"> </span><span style="color:#859900;">|</span><span style="color:#839496;"> </span><span style="color:#CB4B16;">U</span><span style="color:#839496;">)&gt;]</span><span style="color:#859900;">:</span><span style="color:#839496;"> (</span><span style="color:#CB4B16;">T</span><span style="color:#839496;"> </span><span style="color:#859900;">&amp;</span><span style="color:#839496;"> </span><span style="color:#CB4B16;">U</span><span style="color:#839496;">)[</span><span style="color:#CB4B16;">K</span><span style="color:#839496;">]</span></span>
<span class="line"><span style="color:#839496;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#93A1A1;font-weight:bold;">type</span><span style="color:#839496;"> </span><span style="color:#CB4B16;">X</span><span style="color:#839496;"> </span><span style="color:#859900;">=</span><span style="color:#839496;"> </span><span style="color:#CB4B16;">Diff</span><span style="color:#839496;">&lt;{ a</span><span style="color:#859900;">:</span><span style="color:#839496;"> </span><span style="color:#859900;">string</span><span style="color:#839496;">; c</span><span style="color:#859900;">:</span><span style="color:#839496;"> </span><span style="color:#859900;">string</span><span style="color:#839496;"> }, { a</span><span style="color:#859900;">:</span><span style="color:#839496;"> </span><span style="color:#859900;">number</span><span style="color:#839496;">; b</span><span style="color:#859900;">:</span><span style="color:#839496;"> </span><span style="color:#859900;">number</span><span style="color:#839496;"> }&gt;</span></span></code></pre><pre class="shiki solarized-light vp-code-light"><code><span class="line"><span style="color:#93A1A1;font-style:italic;">/**</span></span>
<span class="line"><span style="color:#93A1A1;font-style:italic;"> * 1.通过 keyof (T | U) 可以获取类型的公共部分</span></span>
<span class="line"><span style="color:#93A1A1;font-style:italic;"> * 2.in 遍历所有 keyof (T &amp; U) 枚举类型</span></span>
<span class="line"><span style="color:#93A1A1;font-style:italic;"> * 3.通过 Exclude 排除公共类型，as 断言为新的类型 Exclude</span></span>
<span class="line"><span style="color:#93A1A1;font-style:italic;">*/</span></span>
<span class="line"><span style="color:#586E75;font-weight:bold;">type</span><span style="color:#657B83;"> </span><span style="color:#CB4B16;">Diff</span><span style="color:#657B83;">&lt;</span><span style="color:#CB4B16;">T</span><span style="color:#657B83;"> </span><span style="color:#586E75;font-weight:bold;">extends</span><span style="color:#657B83;"> </span><span style="color:#859900;">object</span><span style="color:#657B83;">, </span><span style="color:#CB4B16;">U</span><span style="color:#657B83;"> </span><span style="color:#586E75;font-weight:bold;">extends</span><span style="color:#657B83;"> </span><span style="color:#859900;">object</span><span style="color:#657B83;">&gt; </span><span style="color:#859900;">=</span><span style="color:#657B83;"> {</span></span>
<span class="line"><span style="color:#657B83;">  [</span><span style="color:#CB4B16;">K</span><span style="color:#657B83;"> </span><span style="color:#859900;">in</span><span style="color:#657B83;"> </span><span style="color:#859900;">keyof</span><span style="color:#657B83;"> (</span><span style="color:#CB4B16;">T</span><span style="color:#657B83;"> </span><span style="color:#859900;">&amp;</span><span style="color:#657B83;"> </span><span style="color:#CB4B16;">U</span><span style="color:#657B83;">) </span><span style="color:#859900;">as</span><span style="color:#657B83;"> </span><span style="color:#CB4B16;">Exclude</span><span style="color:#657B83;">&lt;</span><span style="color:#CB4B16;">K</span><span style="color:#657B83;">, </span><span style="color:#859900;">keyof</span><span style="color:#657B83;"> (</span><span style="color:#CB4B16;">T</span><span style="color:#657B83;"> </span><span style="color:#859900;">|</span><span style="color:#657B83;"> </span><span style="color:#CB4B16;">U</span><span style="color:#657B83;">)&gt;]</span><span style="color:#859900;">:</span><span style="color:#657B83;"> (</span><span style="color:#CB4B16;">T</span><span style="color:#657B83;"> </span><span style="color:#859900;">&amp;</span><span style="color:#657B83;"> </span><span style="color:#CB4B16;">U</span><span style="color:#657B83;">)[</span><span style="color:#CB4B16;">K</span><span style="color:#657B83;">]</span></span>
<span class="line"><span style="color:#657B83;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#586E75;font-weight:bold;">type</span><span style="color:#657B83;"> </span><span style="color:#CB4B16;">X</span><span style="color:#657B83;"> </span><span style="color:#859900;">=</span><span style="color:#657B83;"> </span><span style="color:#CB4B16;">Diff</span><span style="color:#657B83;">&lt;{ a</span><span style="color:#859900;">:</span><span style="color:#657B83;"> </span><span style="color:#859900;">string</span><span style="color:#657B83;">; c</span><span style="color:#859900;">:</span><span style="color:#657B83;"> </span><span style="color:#859900;">string</span><span style="color:#657B83;"> }, { a</span><span style="color:#859900;">:</span><span style="color:#657B83;"> </span><span style="color:#859900;">number</span><span style="color:#657B83;">; b</span><span style="color:#859900;">:</span><span style="color:#657B83;"> </span><span style="color:#859900;">number</span><span style="color:#657B83;"> }&gt;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br></div></div><h3 id="flip" tabindex="-1">Flip <a class="header-anchor" href="#flip" aria-label="Permalink to &quot;Flip&quot;">​</a></h3><p>交换对象类型的 key 和 value</p><blockquote><p>由于对象类型的key只能是基本类型，但是其value却可以是任意类型，那就意味着，当我们使用索引类型T[K]来取value作为新的key时，将会有报错风险，因此，我们对key进行下约束</p></blockquote><div class="language-ts vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki solarized-dark vp-code-dark"><code><span class="line"><span style="color:#93A1A1;font-weight:bold;">type</span><span style="color:#839496;"> </span><span style="color:#CB4B16;">Flip</span><span style="color:#839496;">&lt;</span><span style="color:#CB4B16;">T</span><span style="color:#839496;"> </span><span style="color:#93A1A1;font-weight:bold;">extends</span><span style="color:#839496;"> </span><span style="color:#CB4B16;">Record</span><span style="color:#839496;">&lt;</span><span style="color:#859900;">string</span><span style="color:#839496;"> </span><span style="color:#859900;">|</span><span style="color:#839496;"> </span><span style="color:#859900;">number</span><span style="color:#839496;"> </span><span style="color:#859900;">|</span><span style="color:#839496;"> </span><span style="color:#859900;">symbol</span><span style="color:#839496;">, </span><span style="color:#859900;">any</span><span style="color:#839496;">&gt;&gt; </span><span style="color:#859900;">=</span><span style="color:#839496;"> {</span></span>
<span class="line"><span style="color:#839496;">  [</span><span style="color:#CB4B16;">K</span><span style="color:#839496;"> </span><span style="color:#859900;">in</span><span style="color:#839496;"> </span><span style="color:#859900;">keyof</span><span style="color:#839496;"> </span><span style="color:#CB4B16;">T</span><span style="color:#839496;"> </span><span style="color:#859900;">as</span><span style="color:#839496;"> </span><span style="color:#CB4B16;">T</span><span style="color:#839496;">[</span><span style="color:#CB4B16;">K</span><span style="color:#839496;">]]</span><span style="color:#859900;">:</span><span style="color:#839496;"> </span><span style="color:#CB4B16;">K</span></span>
<span class="line"><span style="color:#839496;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#93A1A1;font-weight:bold;">type</span><span style="color:#839496;"> </span><span style="color:#CB4B16;">X</span><span style="color:#839496;"> </span><span style="color:#859900;">=</span><span style="color:#839496;"> </span><span style="color:#CB4B16;">Flip</span><span style="color:#839496;">&lt;{ x</span><span style="color:#859900;">:</span><span style="color:#839496;"> </span><span style="color:#859900;">string</span><span style="color:#839496;"> }&gt;</span></span></code></pre><pre class="shiki solarized-light vp-code-light"><code><span class="line"><span style="color:#586E75;font-weight:bold;">type</span><span style="color:#657B83;"> </span><span style="color:#CB4B16;">Flip</span><span style="color:#657B83;">&lt;</span><span style="color:#CB4B16;">T</span><span style="color:#657B83;"> </span><span style="color:#586E75;font-weight:bold;">extends</span><span style="color:#657B83;"> </span><span style="color:#CB4B16;">Record</span><span style="color:#657B83;">&lt;</span><span style="color:#859900;">string</span><span style="color:#657B83;"> </span><span style="color:#859900;">|</span><span style="color:#657B83;"> </span><span style="color:#859900;">number</span><span style="color:#657B83;"> </span><span style="color:#859900;">|</span><span style="color:#657B83;"> </span><span style="color:#859900;">symbol</span><span style="color:#657B83;">, </span><span style="color:#859900;">any</span><span style="color:#657B83;">&gt;&gt; </span><span style="color:#859900;">=</span><span style="color:#657B83;"> {</span></span>
<span class="line"><span style="color:#657B83;">  [</span><span style="color:#CB4B16;">K</span><span style="color:#657B83;"> </span><span style="color:#859900;">in</span><span style="color:#657B83;"> </span><span style="color:#859900;">keyof</span><span style="color:#657B83;"> </span><span style="color:#CB4B16;">T</span><span style="color:#657B83;"> </span><span style="color:#859900;">as</span><span style="color:#657B83;"> </span><span style="color:#CB4B16;">T</span><span style="color:#657B83;">[</span><span style="color:#CB4B16;">K</span><span style="color:#657B83;">]]</span><span style="color:#859900;">:</span><span style="color:#657B83;"> </span><span style="color:#CB4B16;">K</span></span>
<span class="line"><span style="color:#657B83;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#586E75;font-weight:bold;">type</span><span style="color:#657B83;"> </span><span style="color:#CB4B16;">X</span><span style="color:#657B83;"> </span><span style="color:#859900;">=</span><span style="color:#657B83;"> </span><span style="color:#CB4B16;">Flip</span><span style="color:#657B83;">&lt;{ x</span><span style="color:#859900;">:</span><span style="color:#657B83;"> </span><span style="color:#859900;">string</span><span style="color:#657B83;"> }&gt;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><h2 id="array-工具类型" tabindex="-1">array 工具类型 <a class="header-anchor" href="#array-工具类型" aria-label="Permalink to &quot;array 工具类型&quot;">​</a></h2><h3 id="push" tabindex="-1">Push <a class="header-anchor" href="#push" aria-label="Permalink to &quot;Push&quot;">​</a></h3><p>在元组后面插入一位</p><div class="language-ts vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki solarized-dark vp-code-dark"><code><span class="line"><span style="color:#93A1A1;font-weight:bold;">type</span><span style="color:#839496;"> </span><span style="color:#CB4B16;">Push</span><span style="color:#839496;">&lt;</span><span style="color:#CB4B16;">T</span><span style="color:#839496;"> </span><span style="color:#93A1A1;font-weight:bold;">extends</span><span style="color:#839496;"> </span><span style="color:#859900;">unknown</span><span style="color:#839496;">[], </span><span style="color:#CB4B16;">U</span><span style="color:#839496;">&gt; </span><span style="color:#859900;">=</span><span style="color:#839496;"> [</span><span style="color:#859900;">...</span><span style="color:#CB4B16;">T</span><span style="color:#839496;">, </span><span style="color:#CB4B16;">U</span><span style="color:#839496;">]</span></span>
<span class="line"></span>
<span class="line"><span style="color:#93A1A1;font-weight:bold;">type</span><span style="color:#839496;"> </span><span style="color:#CB4B16;">X</span><span style="color:#839496;"> </span><span style="color:#859900;">=</span><span style="color:#839496;"> </span><span style="color:#CB4B16;">Push</span><span style="color:#839496;">&lt;[</span><span style="color:#2AA198;">&#39;ts&#39;</span><span style="color:#839496;">], </span><span style="color:#D33682;">123</span><span style="color:#839496;">&gt;</span></span></code></pre><pre class="shiki solarized-light vp-code-light"><code><span class="line"><span style="color:#586E75;font-weight:bold;">type</span><span style="color:#657B83;"> </span><span style="color:#CB4B16;">Push</span><span style="color:#657B83;">&lt;</span><span style="color:#CB4B16;">T</span><span style="color:#657B83;"> </span><span style="color:#586E75;font-weight:bold;">extends</span><span style="color:#657B83;"> </span><span style="color:#859900;">unknown</span><span style="color:#657B83;">[], </span><span style="color:#CB4B16;">U</span><span style="color:#657B83;">&gt; </span><span style="color:#859900;">=</span><span style="color:#657B83;"> [</span><span style="color:#859900;">...</span><span style="color:#CB4B16;">T</span><span style="color:#657B83;">, </span><span style="color:#CB4B16;">U</span><span style="color:#657B83;">]</span></span>
<span class="line"></span>
<span class="line"><span style="color:#586E75;font-weight:bold;">type</span><span style="color:#657B83;"> </span><span style="color:#CB4B16;">X</span><span style="color:#657B83;"> </span><span style="color:#859900;">=</span><span style="color:#657B83;"> </span><span style="color:#CB4B16;">Push</span><span style="color:#657B83;">&lt;[</span><span style="color:#2AA198;">&#39;ts&#39;</span><span style="color:#657B83;">], </span><span style="color:#D33682;">123</span><span style="color:#657B83;">&gt;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><h3 id="unshift" tabindex="-1">Unshift <a class="header-anchor" href="#unshift" aria-label="Permalink to &quot;Unshift&quot;">​</a></h3><p>在元组前面插入一位</p><div class="language-ts vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki solarized-dark vp-code-dark"><code><span class="line"><span style="color:#93A1A1;font-weight:bold;">type</span><span style="color:#839496;"> </span><span style="color:#CB4B16;">Unshift</span><span style="color:#839496;">&lt;</span><span style="color:#CB4B16;">T</span><span style="color:#839496;"> </span><span style="color:#93A1A1;font-weight:bold;">extends</span><span style="color:#839496;"> </span><span style="color:#859900;">unknown</span><span style="color:#839496;">[], </span><span style="color:#CB4B16;">U</span><span style="color:#839496;">&gt; </span><span style="color:#859900;">=</span><span style="color:#839496;"> [</span><span style="color:#CB4B16;">U</span><span style="color:#839496;">, </span><span style="color:#859900;">...</span><span style="color:#CB4B16;">T</span><span style="color:#839496;">]</span></span>
<span class="line"></span>
<span class="line"><span style="color:#93A1A1;font-weight:bold;">type</span><span style="color:#839496;"> </span><span style="color:#CB4B16;">X</span><span style="color:#839496;"> </span><span style="color:#859900;">=</span><span style="color:#839496;"> </span><span style="color:#CB4B16;">Unshift</span><span style="color:#839496;">&lt;[</span><span style="color:#2AA198;">&#39;ts&#39;</span><span style="color:#839496;">], </span><span style="color:#D33682;">123</span><span style="color:#839496;">&gt;</span></span></code></pre><pre class="shiki solarized-light vp-code-light"><code><span class="line"><span style="color:#586E75;font-weight:bold;">type</span><span style="color:#657B83;"> </span><span style="color:#CB4B16;">Unshift</span><span style="color:#657B83;">&lt;</span><span style="color:#CB4B16;">T</span><span style="color:#657B83;"> </span><span style="color:#586E75;font-weight:bold;">extends</span><span style="color:#657B83;"> </span><span style="color:#859900;">unknown</span><span style="color:#657B83;">[], </span><span style="color:#CB4B16;">U</span><span style="color:#657B83;">&gt; </span><span style="color:#859900;">=</span><span style="color:#657B83;"> [</span><span style="color:#CB4B16;">U</span><span style="color:#657B83;">, </span><span style="color:#859900;">...</span><span style="color:#CB4B16;">T</span><span style="color:#657B83;">]</span></span>
<span class="line"></span>
<span class="line"><span style="color:#586E75;font-weight:bold;">type</span><span style="color:#657B83;"> </span><span style="color:#CB4B16;">X</span><span style="color:#657B83;"> </span><span style="color:#859900;">=</span><span style="color:#657B83;"> </span><span style="color:#CB4B16;">Unshift</span><span style="color:#657B83;">&lt;[</span><span style="color:#2AA198;">&#39;ts&#39;</span><span style="color:#657B83;">], </span><span style="color:#D33682;">123</span><span style="color:#657B83;">&gt;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><h3 id="first" tabindex="-1">First <a class="header-anchor" href="#first" aria-label="Permalink to &quot;First&quot;">​</a></h3><p>获取元组第一个元素</p><div class="language-ts vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki solarized-dark vp-code-dark"><code><span class="line"><span style="color:#93A1A1;font-weight:bold;">type</span><span style="color:#839496;"> </span><span style="color:#CB4B16;">First</span><span style="color:#839496;">&lt;</span><span style="color:#CB4B16;">T</span><span style="color:#839496;"> </span><span style="color:#93A1A1;font-weight:bold;">extends</span><span style="color:#839496;"> </span><span style="color:#859900;">unknown</span><span style="color:#839496;">[]&gt; </span><span style="color:#859900;">=</span><span style="color:#839496;"> </span><span style="color:#CB4B16;">T</span><span style="color:#839496;"> </span><span style="color:#93A1A1;font-weight:bold;">extends</span><span style="color:#839496;"> [] </span><span style="color:#859900;">?</span><span style="color:#839496;"> </span><span style="color:#859900;">never</span><span style="color:#839496;"> </span><span style="color:#859900;">:</span><span style="color:#839496;"> </span><span style="color:#CB4B16;">T</span><span style="color:#839496;">[</span><span style="color:#D33682;">0</span><span style="color:#839496;">]</span></span>
<span class="line"></span>
<span class="line"><span style="color:#93A1A1;font-weight:bold;">type</span><span style="color:#839496;"> </span><span style="color:#CB4B16;">X</span><span style="color:#839496;"> </span><span style="color:#859900;">=</span><span style="color:#839496;"> </span><span style="color:#CB4B16;">First</span><span style="color:#839496;">&lt;[</span><span style="color:#2AA198;">&#39;ts&#39;</span><span style="color:#839496;">, </span><span style="color:#D33682;">123</span><span style="color:#839496;">]&gt;</span></span></code></pre><pre class="shiki solarized-light vp-code-light"><code><span class="line"><span style="color:#586E75;font-weight:bold;">type</span><span style="color:#657B83;"> </span><span style="color:#CB4B16;">First</span><span style="color:#657B83;">&lt;</span><span style="color:#CB4B16;">T</span><span style="color:#657B83;"> </span><span style="color:#586E75;font-weight:bold;">extends</span><span style="color:#657B83;"> </span><span style="color:#859900;">unknown</span><span style="color:#657B83;">[]&gt; </span><span style="color:#859900;">=</span><span style="color:#657B83;"> </span><span style="color:#CB4B16;">T</span><span style="color:#657B83;"> </span><span style="color:#586E75;font-weight:bold;">extends</span><span style="color:#657B83;"> [] </span><span style="color:#859900;">?</span><span style="color:#657B83;"> </span><span style="color:#859900;">never</span><span style="color:#657B83;"> </span><span style="color:#859900;">:</span><span style="color:#657B83;"> </span><span style="color:#CB4B16;">T</span><span style="color:#657B83;">[</span><span style="color:#D33682;">0</span><span style="color:#657B83;">]</span></span>
<span class="line"></span>
<span class="line"><span style="color:#586E75;font-weight:bold;">type</span><span style="color:#657B83;"> </span><span style="color:#CB4B16;">X</span><span style="color:#657B83;"> </span><span style="color:#859900;">=</span><span style="color:#657B83;"> </span><span style="color:#CB4B16;">First</span><span style="color:#657B83;">&lt;[</span><span style="color:#2AA198;">&#39;ts&#39;</span><span style="color:#657B83;">, </span><span style="color:#D33682;">123</span><span style="color:#657B83;">]&gt;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><h3 id="last" tabindex="-1">Last <a class="header-anchor" href="#last" aria-label="Permalink to &quot;Last&quot;">​</a></h3><p>获取元组第一个元素</p><blockquote><p>我们知道 <code>T[number]</code> 能够拿到指定索引位置的成员，而 <code>T[&#39;length&#39;]</code> 是元组的个数，这刚好比索引位置多一位。 因此我们可以来构造一个与 <code>T[&#39;length&#39;]</code> 的取值相等的元组</p></blockquote><div class="language-ts vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki solarized-dark vp-code-dark"><code><span class="line"><span style="color:#93A1A1;font-weight:bold;">type</span><span style="color:#839496;"> </span><span style="color:#CB4B16;">Last</span><span style="color:#839496;">&lt;</span><span style="color:#CB4B16;">T</span><span style="color:#839496;"> </span><span style="color:#93A1A1;font-weight:bold;">extends</span><span style="color:#839496;"> </span><span style="color:#859900;">unknown</span><span style="color:#839496;">[]&gt; </span><span style="color:#859900;">=</span><span style="color:#839496;"> [</span><span style="color:#859900;">never</span><span style="color:#839496;">, </span><span style="color:#859900;">...</span><span style="color:#CB4B16;">T</span><span style="color:#839496;">][</span><span style="color:#CB4B16;">T</span><span style="color:#839496;">[</span><span style="color:#2AA198;">&#39;length&#39;</span><span style="color:#839496;">]]</span></span>
<span class="line"></span>
<span class="line"><span style="color:#93A1A1;font-weight:bold;">type</span><span style="color:#839496;"> </span><span style="color:#CB4B16;">X</span><span style="color:#839496;"> </span><span style="color:#859900;">=</span><span style="color:#839496;"> </span><span style="color:#CB4B16;">Last</span><span style="color:#839496;">&lt;[</span><span style="color:#2AA198;">&#39;ts&#39;</span><span style="color:#839496;">, </span><span style="color:#D33682;">123</span><span style="color:#839496;">]&gt;</span></span></code></pre><pre class="shiki solarized-light vp-code-light"><code><span class="line"><span style="color:#586E75;font-weight:bold;">type</span><span style="color:#657B83;"> </span><span style="color:#CB4B16;">Last</span><span style="color:#657B83;">&lt;</span><span style="color:#CB4B16;">T</span><span style="color:#657B83;"> </span><span style="color:#586E75;font-weight:bold;">extends</span><span style="color:#657B83;"> </span><span style="color:#859900;">unknown</span><span style="color:#657B83;">[]&gt; </span><span style="color:#859900;">=</span><span style="color:#657B83;"> [</span><span style="color:#859900;">never</span><span style="color:#657B83;">, </span><span style="color:#859900;">...</span><span style="color:#CB4B16;">T</span><span style="color:#657B83;">][</span><span style="color:#CB4B16;">T</span><span style="color:#657B83;">[</span><span style="color:#2AA198;">&#39;length&#39;</span><span style="color:#657B83;">]]</span></span>
<span class="line"></span>
<span class="line"><span style="color:#586E75;font-weight:bold;">type</span><span style="color:#657B83;"> </span><span style="color:#CB4B16;">X</span><span style="color:#657B83;"> </span><span style="color:#859900;">=</span><span style="color:#657B83;"> </span><span style="color:#CB4B16;">Last</span><span style="color:#657B83;">&lt;[</span><span style="color:#2AA198;">&#39;ts&#39;</span><span style="color:#657B83;">, </span><span style="color:#D33682;">123</span><span style="color:#657B83;">]&gt;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><h3 id="concat" tabindex="-1">Concat <a class="header-anchor" href="#concat" aria-label="Permalink to &quot;Concat&quot;">​</a></h3><p>将两个类型合并为元组类型</p><div class="language-ts vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki solarized-dark vp-code-dark"><code><span class="line"><span style="color:#586E75;font-style:italic;">/**</span></span>
<span class="line"><span style="color:#586E75;font-style:italic;"> * 1. 首先判断 T U 是不是元祖类型，如果是可以直接用扩展运算符</span></span>
<span class="line"><span style="color:#586E75;font-style:italic;"> * 2. U[number] 可以获取元祖所有集合 key</span></span>
<span class="line"><span style="color:#586E75;font-style:italic;">*/</span></span>
<span class="line"><span style="color:#93A1A1;font-weight:bold;">type</span><span style="color:#839496;"> </span><span style="color:#CB4B16;">Concat</span><span style="color:#839496;">&lt;</span><span style="color:#CB4B16;">T</span><span style="color:#839496;">, </span><span style="color:#CB4B16;">U</span><span style="color:#839496;">&gt; </span><span style="color:#859900;">=</span><span style="color:#839496;"> </span><span style="color:#CB4B16;">T</span><span style="color:#839496;"> </span><span style="color:#93A1A1;font-weight:bold;">extends</span><span style="color:#839496;"> </span><span style="color:#859900;">unknown</span><span style="color:#839496;">[]</span></span>
<span class="line"><span style="color:#839496;">  </span><span style="color:#859900;">?</span><span style="color:#839496;"> </span><span style="color:#CB4B16;">U</span><span style="color:#839496;"> </span><span style="color:#93A1A1;font-weight:bold;">extends</span><span style="color:#839496;"> </span><span style="color:#859900;">unknown</span><span style="color:#839496;">[]</span></span>
<span class="line"><span style="color:#839496;">    </span><span style="color:#859900;">?</span><span style="color:#839496;"> [</span><span style="color:#859900;">...</span><span style="color:#CB4B16;">T</span><span style="color:#839496;">, </span><span style="color:#859900;">...</span><span style="color:#CB4B16;">U</span><span style="color:#839496;">]</span></span>
<span class="line"><span style="color:#839496;">    </span><span style="color:#859900;">:</span><span style="color:#839496;"> [</span><span style="color:#859900;">...</span><span style="color:#CB4B16;">T</span><span style="color:#839496;">, </span><span style="color:#CB4B16;">U</span><span style="color:#839496;">]</span></span>
<span class="line"><span style="color:#839496;">  </span><span style="color:#859900;">:</span><span style="color:#839496;"> [</span><span style="color:#CB4B16;">T</span><span style="color:#839496;">, </span><span style="color:#CB4B16;">U</span><span style="color:#839496;"> </span><span style="color:#93A1A1;font-weight:bold;">extends</span><span style="color:#839496;"> </span><span style="color:#859900;">unknown</span><span style="color:#839496;">[] </span><span style="color:#859900;">?</span><span style="color:#839496;"> </span><span style="color:#CB4B16;">U</span><span style="color:#839496;">[</span><span style="color:#859900;">number</span><span style="color:#839496;">] </span><span style="color:#859900;">:</span><span style="color:#839496;"> </span><span style="color:#CB4B16;">U</span><span style="color:#839496;">]</span></span>
<span class="line"></span>
<span class="line"><span style="color:#93A1A1;font-weight:bold;">type</span><span style="color:#839496;"> </span><span style="color:#CB4B16;">X</span><span style="color:#839496;"> </span><span style="color:#859900;">=</span><span style="color:#839496;"> </span><span style="color:#CB4B16;">Concat</span><span style="color:#839496;">&lt;</span><span style="color:#2AA198;">&#39;ts&#39;</span><span style="color:#839496;">, </span><span style="color:#D33682;">123</span><span style="color:#839496;">&gt;</span></span></code></pre><pre class="shiki solarized-light vp-code-light"><code><span class="line"><span style="color:#93A1A1;font-style:italic;">/**</span></span>
<span class="line"><span style="color:#93A1A1;font-style:italic;"> * 1. 首先判断 T U 是不是元祖类型，如果是可以直接用扩展运算符</span></span>
<span class="line"><span style="color:#93A1A1;font-style:italic;"> * 2. U[number] 可以获取元祖所有集合 key</span></span>
<span class="line"><span style="color:#93A1A1;font-style:italic;">*/</span></span>
<span class="line"><span style="color:#586E75;font-weight:bold;">type</span><span style="color:#657B83;"> </span><span style="color:#CB4B16;">Concat</span><span style="color:#657B83;">&lt;</span><span style="color:#CB4B16;">T</span><span style="color:#657B83;">, </span><span style="color:#CB4B16;">U</span><span style="color:#657B83;">&gt; </span><span style="color:#859900;">=</span><span style="color:#657B83;"> </span><span style="color:#CB4B16;">T</span><span style="color:#657B83;"> </span><span style="color:#586E75;font-weight:bold;">extends</span><span style="color:#657B83;"> </span><span style="color:#859900;">unknown</span><span style="color:#657B83;">[]</span></span>
<span class="line"><span style="color:#657B83;">  </span><span style="color:#859900;">?</span><span style="color:#657B83;"> </span><span style="color:#CB4B16;">U</span><span style="color:#657B83;"> </span><span style="color:#586E75;font-weight:bold;">extends</span><span style="color:#657B83;"> </span><span style="color:#859900;">unknown</span><span style="color:#657B83;">[]</span></span>
<span class="line"><span style="color:#657B83;">    </span><span style="color:#859900;">?</span><span style="color:#657B83;"> [</span><span style="color:#859900;">...</span><span style="color:#CB4B16;">T</span><span style="color:#657B83;">, </span><span style="color:#859900;">...</span><span style="color:#CB4B16;">U</span><span style="color:#657B83;">]</span></span>
<span class="line"><span style="color:#657B83;">    </span><span style="color:#859900;">:</span><span style="color:#657B83;"> [</span><span style="color:#859900;">...</span><span style="color:#CB4B16;">T</span><span style="color:#657B83;">, </span><span style="color:#CB4B16;">U</span><span style="color:#657B83;">]</span></span>
<span class="line"><span style="color:#657B83;">  </span><span style="color:#859900;">:</span><span style="color:#657B83;"> [</span><span style="color:#CB4B16;">T</span><span style="color:#657B83;">, </span><span style="color:#CB4B16;">U</span><span style="color:#657B83;"> </span><span style="color:#586E75;font-weight:bold;">extends</span><span style="color:#657B83;"> </span><span style="color:#859900;">unknown</span><span style="color:#657B83;">[] </span><span style="color:#859900;">?</span><span style="color:#657B83;"> </span><span style="color:#CB4B16;">U</span><span style="color:#657B83;">[</span><span style="color:#859900;">number</span><span style="color:#657B83;">] </span><span style="color:#859900;">:</span><span style="color:#657B83;"> </span><span style="color:#CB4B16;">U</span><span style="color:#657B83;">]</span></span>
<span class="line"></span>
<span class="line"><span style="color:#586E75;font-weight:bold;">type</span><span style="color:#657B83;"> </span><span style="color:#CB4B16;">X</span><span style="color:#657B83;"> </span><span style="color:#859900;">=</span><span style="color:#657B83;"> </span><span style="color:#CB4B16;">Concat</span><span style="color:#657B83;">&lt;</span><span style="color:#2AA198;">&#39;ts&#39;</span><span style="color:#657B83;">, </span><span style="color:#D33682;">123</span><span style="color:#657B83;">&gt;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br></div></div><h3 id="tupletoobject" tabindex="-1">TupleToObject <a class="header-anchor" href="#tupletoobject" aria-label="Permalink to &quot;TupleToObject&quot;">​</a></h3><p>元祖类型构造对象类型</p><blockquote><p>在TypeScript，元组类型的集合key通过 <code>T[number]</code> 获取。有了集合key之后我们只需要遍历这个集合，拿到每一个key重新进行映射即可</p></blockquote><div class="language-ts vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki solarized-dark vp-code-dark"><code><span class="line"><span style="color:#93A1A1;font-weight:bold;">type</span><span style="color:#839496;"> </span><span style="color:#CB4B16;">TupleToObject</span><span style="color:#839496;">&lt;</span><span style="color:#CB4B16;">T</span><span style="color:#839496;"> </span><span style="color:#93A1A1;font-weight:bold;">extends</span><span style="color:#839496;"> </span><span style="color:#93A1A1;font-weight:bold;">readonly</span><span style="color:#839496;">(</span><span style="color:#859900;">string</span><span style="color:#839496;"> </span><span style="color:#859900;">|</span><span style="color:#839496;"> </span><span style="color:#859900;">number</span><span style="color:#839496;"> </span><span style="color:#859900;">|</span><span style="color:#839496;"> </span><span style="color:#859900;">symbol</span><span style="color:#839496;">)[]&gt; </span><span style="color:#859900;">=</span><span style="color:#839496;"> {</span></span>
<span class="line"><span style="color:#839496;">  [</span><span style="color:#CB4B16;">K</span><span style="color:#839496;"> </span><span style="color:#859900;">in</span><span style="color:#839496;"> </span><span style="color:#CB4B16;">T</span><span style="color:#839496;">[</span><span style="color:#859900;">number</span><span style="color:#839496;">]]</span><span style="color:#859900;">:</span><span style="color:#839496;"> </span><span style="color:#CB4B16;">K</span></span>
<span class="line"><span style="color:#839496;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#93A1A1;font-weight:bold;">type</span><span style="color:#839496;"> </span><span style="color:#CB4B16;">X</span><span style="color:#839496;"> </span><span style="color:#859900;">=</span><span style="color:#839496;"> </span><span style="color:#CB4B16;">TupleToObject</span><span style="color:#839496;">&lt;[</span><span style="color:#2AA198;">&#39;ts&#39;</span><span style="color:#839496;">]&gt;</span></span></code></pre><pre class="shiki solarized-light vp-code-light"><code><span class="line"><span style="color:#586E75;font-weight:bold;">type</span><span style="color:#657B83;"> </span><span style="color:#CB4B16;">TupleToObject</span><span style="color:#657B83;">&lt;</span><span style="color:#CB4B16;">T</span><span style="color:#657B83;"> </span><span style="color:#586E75;font-weight:bold;">extends</span><span style="color:#657B83;"> </span><span style="color:#586E75;font-weight:bold;">readonly</span><span style="color:#657B83;">(</span><span style="color:#859900;">string</span><span style="color:#657B83;"> </span><span style="color:#859900;">|</span><span style="color:#657B83;"> </span><span style="color:#859900;">number</span><span style="color:#657B83;"> </span><span style="color:#859900;">|</span><span style="color:#657B83;"> </span><span style="color:#859900;">symbol</span><span style="color:#657B83;">)[]&gt; </span><span style="color:#859900;">=</span><span style="color:#657B83;"> {</span></span>
<span class="line"><span style="color:#657B83;">  [</span><span style="color:#CB4B16;">K</span><span style="color:#657B83;"> </span><span style="color:#859900;">in</span><span style="color:#657B83;"> </span><span style="color:#CB4B16;">T</span><span style="color:#657B83;">[</span><span style="color:#859900;">number</span><span style="color:#657B83;">]]</span><span style="color:#859900;">:</span><span style="color:#657B83;"> </span><span style="color:#CB4B16;">K</span></span>
<span class="line"><span style="color:#657B83;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#586E75;font-weight:bold;">type</span><span style="color:#657B83;"> </span><span style="color:#CB4B16;">X</span><span style="color:#657B83;"> </span><span style="color:#859900;">=</span><span style="color:#657B83;"> </span><span style="color:#CB4B16;">TupleToObject</span><span style="color:#657B83;">&lt;[</span><span style="color:#2AA198;">&#39;ts&#39;</span><span style="color:#657B83;">]&gt;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><h3 id="tupletounion" tabindex="-1">TupleToUnion <a class="header-anchor" href="#tupletounion" aria-label="Permalink to &quot;TupleToUnion&quot;">​</a></h3><p>元祖类型构造联合类型</p><blockquote><p>元组类型的集合key通过 <code>T[number]</code> 获取</p></blockquote><div class="language-ts vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki solarized-dark vp-code-dark"><code><span class="line"><span style="color:#93A1A1;font-weight:bold;">type</span><span style="color:#839496;"> </span><span style="color:#CB4B16;">TupleToUnion</span><span style="color:#839496;">&lt;</span><span style="color:#CB4B16;">T</span><span style="color:#839496;"> </span><span style="color:#93A1A1;font-weight:bold;">extends</span><span style="color:#839496;"> </span><span style="color:#859900;">unknown</span><span style="color:#839496;">[]&gt; </span><span style="color:#859900;">=</span><span style="color:#839496;"> </span><span style="color:#CB4B16;">T</span><span style="color:#839496;">[</span><span style="color:#859900;">number</span><span style="color:#839496;">]</span></span>
<span class="line"></span>
<span class="line"><span style="color:#93A1A1;font-weight:bold;">type</span><span style="color:#839496;"> </span><span style="color:#CB4B16;">X</span><span style="color:#839496;"> </span><span style="color:#859900;">=</span><span style="color:#839496;"> </span><span style="color:#CB4B16;">TupleToObject</span><span style="color:#839496;">&lt;[</span><span style="color:#2AA198;">&#39;ts&#39;</span><span style="color:#839496;">, </span><span style="color:#D33682;">123</span><span style="color:#839496;">]&gt;</span></span></code></pre><pre class="shiki solarized-light vp-code-light"><code><span class="line"><span style="color:#586E75;font-weight:bold;">type</span><span style="color:#657B83;"> </span><span style="color:#CB4B16;">TupleToUnion</span><span style="color:#657B83;">&lt;</span><span style="color:#CB4B16;">T</span><span style="color:#657B83;"> </span><span style="color:#586E75;font-weight:bold;">extends</span><span style="color:#657B83;"> </span><span style="color:#859900;">unknown</span><span style="color:#657B83;">[]&gt; </span><span style="color:#859900;">=</span><span style="color:#657B83;"> </span><span style="color:#CB4B16;">T</span><span style="color:#657B83;">[</span><span style="color:#859900;">number</span><span style="color:#657B83;">]</span></span>
<span class="line"></span>
<span class="line"><span style="color:#586E75;font-weight:bold;">type</span><span style="color:#657B83;"> </span><span style="color:#CB4B16;">X</span><span style="color:#657B83;"> </span><span style="color:#859900;">=</span><span style="color:#657B83;"> </span><span style="color:#CB4B16;">TupleToObject</span><span style="color:#657B83;">&lt;[</span><span style="color:#2AA198;">&#39;ts&#39;</span><span style="color:#657B83;">, </span><span style="color:#D33682;">123</span><span style="color:#657B83;">]&gt;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><h2 id="string-工具类型" tabindex="-1">string 工具类型 <a class="header-anchor" href="#string-工具类型" aria-label="Permalink to &quot;string 工具类型&quot;">​</a></h2><h3 id="startswith" tabindex="-1">StartsWith <a class="header-anchor" href="#startswith" aria-label="Permalink to &quot;StartsWith&quot;">​</a></h3><p>判断字符串是否以子串为起始</p><blockquote><p>TS模板字符类型</p></blockquote><div class="language-ts vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki solarized-dark vp-code-dark"><code><span class="line"><span style="color:#93A1A1;font-weight:bold;">type</span><span style="color:#839496;"> </span><span style="color:#CB4B16;">StartsWith</span><span style="color:#839496;">&lt;</span><span style="color:#CB4B16;">T</span><span style="color:#839496;"> </span><span style="color:#93A1A1;font-weight:bold;">extends</span><span style="color:#839496;"> </span><span style="color:#859900;">string</span><span style="color:#839496;">, </span><span style="color:#CB4B16;">U</span><span style="color:#839496;"> </span><span style="color:#93A1A1;font-weight:bold;">extends</span><span style="color:#839496;"> </span><span style="color:#859900;">string</span><span style="color:#839496;">&gt; </span><span style="color:#859900;">=</span><span style="color:#839496;"> </span><span style="color:#CB4B16;">T</span><span style="color:#839496;"> </span><span style="color:#93A1A1;font-weight:bold;">extends</span><span style="color:#839496;"> </span><span style="color:#2AA198;">\`\${</span><span style="color:#CB4B16;">U</span><span style="color:#2AA198;">}\${</span><span style="color:#859900;">string</span><span style="color:#2AA198;">}\`</span><span style="color:#839496;"> </span><span style="color:#859900;">?</span><span style="color:#839496;"> </span><span style="color:#859900;">true</span><span style="color:#839496;"> </span><span style="color:#859900;">:</span><span style="color:#839496;"> </span><span style="color:#859900;">false</span></span>
<span class="line"></span>
<span class="line"><span style="color:#93A1A1;font-weight:bold;">type</span><span style="color:#839496;"> </span><span style="color:#CB4B16;">X</span><span style="color:#839496;"> </span><span style="color:#859900;">=</span><span style="color:#839496;"> </span><span style="color:#CB4B16;">StartsWith</span><span style="color:#839496;">&lt;</span><span style="color:#2AA198;">&#39;typescript&#39;</span><span style="color:#839496;">, </span><span style="color:#2AA198;">&#39;type&#39;</span><span style="color:#839496;">&gt;</span></span></code></pre><pre class="shiki solarized-light vp-code-light"><code><span class="line"><span style="color:#586E75;font-weight:bold;">type</span><span style="color:#657B83;"> </span><span style="color:#CB4B16;">StartsWith</span><span style="color:#657B83;">&lt;</span><span style="color:#CB4B16;">T</span><span style="color:#657B83;"> </span><span style="color:#586E75;font-weight:bold;">extends</span><span style="color:#657B83;"> </span><span style="color:#859900;">string</span><span style="color:#657B83;">, </span><span style="color:#CB4B16;">U</span><span style="color:#657B83;"> </span><span style="color:#586E75;font-weight:bold;">extends</span><span style="color:#657B83;"> </span><span style="color:#859900;">string</span><span style="color:#657B83;">&gt; </span><span style="color:#859900;">=</span><span style="color:#657B83;"> </span><span style="color:#CB4B16;">T</span><span style="color:#657B83;"> </span><span style="color:#586E75;font-weight:bold;">extends</span><span style="color:#657B83;"> </span><span style="color:#2AA198;">\`\${</span><span style="color:#CB4B16;">U</span><span style="color:#2AA198;">}\${</span><span style="color:#859900;">string</span><span style="color:#2AA198;">}\`</span><span style="color:#657B83;"> </span><span style="color:#859900;">?</span><span style="color:#657B83;"> </span><span style="color:#859900;">true</span><span style="color:#657B83;"> </span><span style="color:#859900;">:</span><span style="color:#657B83;"> </span><span style="color:#859900;">false</span></span>
<span class="line"></span>
<span class="line"><span style="color:#586E75;font-weight:bold;">type</span><span style="color:#657B83;"> </span><span style="color:#CB4B16;">X</span><span style="color:#657B83;"> </span><span style="color:#859900;">=</span><span style="color:#657B83;"> </span><span style="color:#CB4B16;">StartsWith</span><span style="color:#657B83;">&lt;</span><span style="color:#2AA198;">&#39;typescript&#39;</span><span style="color:#657B83;">, </span><span style="color:#2AA198;">&#39;type&#39;</span><span style="color:#657B83;">&gt;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><h3 id="endswith" tabindex="-1">EndsWith <a class="header-anchor" href="#endswith" aria-label="Permalink to &quot;EndsWith&quot;">​</a></h3><p>判断字符串是否以子串为结尾</p><div class="language-ts vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki solarized-dark vp-code-dark"><code><span class="line"><span style="color:#93A1A1;font-weight:bold;">type</span><span style="color:#839496;"> </span><span style="color:#CB4B16;">EndsWith</span><span style="color:#839496;">&lt;</span><span style="color:#CB4B16;">T</span><span style="color:#839496;"> </span><span style="color:#93A1A1;font-weight:bold;">extends</span><span style="color:#839496;"> </span><span style="color:#859900;">string</span><span style="color:#839496;">, </span><span style="color:#CB4B16;">U</span><span style="color:#839496;"> </span><span style="color:#93A1A1;font-weight:bold;">extends</span><span style="color:#839496;"> </span><span style="color:#859900;">string</span><span style="color:#839496;">&gt; </span><span style="color:#859900;">=</span><span style="color:#839496;"> </span><span style="color:#CB4B16;">T</span><span style="color:#839496;"> </span><span style="color:#93A1A1;font-weight:bold;">extends</span><span style="color:#839496;"> </span><span style="color:#2AA198;">\`\${</span><span style="color:#859900;">string</span><span style="color:#2AA198;">}\${</span><span style="color:#CB4B16;">U</span><span style="color:#2AA198;">}\`</span><span style="color:#839496;"> </span><span style="color:#859900;">?</span><span style="color:#839496;"> </span><span style="color:#859900;">true</span><span style="color:#839496;"> </span><span style="color:#859900;">:</span><span style="color:#839496;"> </span><span style="color:#859900;">false</span></span>
<span class="line"></span>
<span class="line"><span style="color:#93A1A1;font-weight:bold;">type</span><span style="color:#839496;"> </span><span style="color:#CB4B16;">X</span><span style="color:#839496;"> </span><span style="color:#859900;">=</span><span style="color:#839496;"> </span><span style="color:#CB4B16;">EndsWith</span><span style="color:#839496;">&lt;</span><span style="color:#2AA198;">&#39;typescript&#39;</span><span style="color:#839496;">, </span><span style="color:#2AA198;">&#39;script&#39;</span><span style="color:#839496;">&gt;</span></span></code></pre><pre class="shiki solarized-light vp-code-light"><code><span class="line"><span style="color:#586E75;font-weight:bold;">type</span><span style="color:#657B83;"> </span><span style="color:#CB4B16;">EndsWith</span><span style="color:#657B83;">&lt;</span><span style="color:#CB4B16;">T</span><span style="color:#657B83;"> </span><span style="color:#586E75;font-weight:bold;">extends</span><span style="color:#657B83;"> </span><span style="color:#859900;">string</span><span style="color:#657B83;">, </span><span style="color:#CB4B16;">U</span><span style="color:#657B83;"> </span><span style="color:#586E75;font-weight:bold;">extends</span><span style="color:#657B83;"> </span><span style="color:#859900;">string</span><span style="color:#657B83;">&gt; </span><span style="color:#859900;">=</span><span style="color:#657B83;"> </span><span style="color:#CB4B16;">T</span><span style="color:#657B83;"> </span><span style="color:#586E75;font-weight:bold;">extends</span><span style="color:#657B83;"> </span><span style="color:#2AA198;">\`\${</span><span style="color:#859900;">string</span><span style="color:#2AA198;">}\${</span><span style="color:#CB4B16;">U</span><span style="color:#2AA198;">}\`</span><span style="color:#657B83;"> </span><span style="color:#859900;">?</span><span style="color:#657B83;"> </span><span style="color:#859900;">true</span><span style="color:#657B83;"> </span><span style="color:#859900;">:</span><span style="color:#657B83;"> </span><span style="color:#859900;">false</span></span>
<span class="line"></span>
<span class="line"><span style="color:#586E75;font-weight:bold;">type</span><span style="color:#657B83;"> </span><span style="color:#CB4B16;">X</span><span style="color:#657B83;"> </span><span style="color:#859900;">=</span><span style="color:#657B83;"> </span><span style="color:#CB4B16;">EndsWith</span><span style="color:#657B83;">&lt;</span><span style="color:#2AA198;">&#39;typescript&#39;</span><span style="color:#657B83;">, </span><span style="color:#2AA198;">&#39;script&#39;</span><span style="color:#657B83;">&gt;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><h3 id="trimleft" tabindex="-1">TrimLeft <a class="header-anchor" href="#trimleft" aria-label="Permalink to &quot;TrimLeft&quot;">​</a></h3><p>除去字符串类型前置空白字符</p><div class="language-ts vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki solarized-dark vp-code-dark"><code><span class="line"><span style="color:#586E75;font-style:italic;">/**</span></span>
<span class="line"><span style="color:#586E75;font-style:italic;"> * 1.空格有多种形式，构建一个辅助类型 Space</span></span>
<span class="line"><span style="color:#586E75;font-style:italic;"> * 2.空格数量可能有多个，需要递归的去掉</span></span>
<span class="line"><span style="color:#586E75;font-style:italic;">*/</span></span>
<span class="line"><span style="color:#93A1A1;font-weight:bold;">type</span><span style="color:#839496;"> </span><span style="color:#CB4B16;">Space</span><span style="color:#839496;"> </span><span style="color:#859900;">=</span><span style="color:#839496;"> </span><span style="color:#2AA198;">&#39; &#39;</span><span style="color:#839496;"> </span><span style="color:#859900;">|</span><span style="color:#839496;"> </span><span style="color:#2AA198;">&#39;</span><span style="color:#CB4B16;">\\n</span><span style="color:#2AA198;">&#39;</span><span style="color:#839496;"> </span><span style="color:#859900;">|</span><span style="color:#839496;"> </span><span style="color:#2AA198;">&#39;</span><span style="color:#CB4B16;">\\t</span><span style="color:#2AA198;">&#39;</span></span>
<span class="line"><span style="color:#93A1A1;font-weight:bold;">type</span><span style="color:#839496;"> </span><span style="color:#CB4B16;">TrimLeft</span><span style="color:#839496;">&lt;</span><span style="color:#CB4B16;">T</span><span style="color:#839496;"> </span><span style="color:#93A1A1;font-weight:bold;">extends</span><span style="color:#839496;"> </span><span style="color:#859900;">string</span><span style="color:#839496;">&gt; </span><span style="color:#859900;">=</span><span style="color:#839496;"> </span><span style="color:#CB4B16;">T</span><span style="color:#839496;"> </span><span style="color:#93A1A1;font-weight:bold;">extends</span><span style="color:#839496;"> </span><span style="color:#2AA198;">\`\${</span><span style="color:#CB4B16;">Space</span><span style="color:#2AA198;">}\${</span><span style="color:#859900;">infer</span><span style="color:#839496;"> </span><span style="color:#CB4B16;">R</span><span style="color:#2AA198;">}\`</span><span style="color:#839496;"> </span><span style="color:#859900;">?</span><span style="color:#839496;"> </span><span style="color:#CB4B16;">TrimLeft</span><span style="color:#839496;">&lt;</span><span style="color:#CB4B16;">R</span><span style="color:#839496;">&gt; </span><span style="color:#859900;">:</span><span style="color:#839496;"> </span><span style="color:#CB4B16;">T</span></span>
<span class="line"></span>
<span class="line"><span style="color:#93A1A1;font-weight:bold;">type</span><span style="color:#839496;"> </span><span style="color:#CB4B16;">X</span><span style="color:#839496;"> </span><span style="color:#859900;">=</span><span style="color:#839496;"> </span><span style="color:#CB4B16;">TrimLeft</span><span style="color:#839496;">&lt;</span><span style="color:#2AA198;">&#39; ts&#39;</span><span style="color:#839496;">&gt;</span></span></code></pre><pre class="shiki solarized-light vp-code-light"><code><span class="line"><span style="color:#93A1A1;font-style:italic;">/**</span></span>
<span class="line"><span style="color:#93A1A1;font-style:italic;"> * 1.空格有多种形式，构建一个辅助类型 Space</span></span>
<span class="line"><span style="color:#93A1A1;font-style:italic;"> * 2.空格数量可能有多个，需要递归的去掉</span></span>
<span class="line"><span style="color:#93A1A1;font-style:italic;">*/</span></span>
<span class="line"><span style="color:#586E75;font-weight:bold;">type</span><span style="color:#657B83;"> </span><span style="color:#CB4B16;">Space</span><span style="color:#657B83;"> </span><span style="color:#859900;">=</span><span style="color:#657B83;"> </span><span style="color:#2AA198;">&#39; &#39;</span><span style="color:#657B83;"> </span><span style="color:#859900;">|</span><span style="color:#657B83;"> </span><span style="color:#2AA198;">&#39;</span><span style="color:#CB4B16;">\\n</span><span style="color:#2AA198;">&#39;</span><span style="color:#657B83;"> </span><span style="color:#859900;">|</span><span style="color:#657B83;"> </span><span style="color:#2AA198;">&#39;</span><span style="color:#CB4B16;">\\t</span><span style="color:#2AA198;">&#39;</span></span>
<span class="line"><span style="color:#586E75;font-weight:bold;">type</span><span style="color:#657B83;"> </span><span style="color:#CB4B16;">TrimLeft</span><span style="color:#657B83;">&lt;</span><span style="color:#CB4B16;">T</span><span style="color:#657B83;"> </span><span style="color:#586E75;font-weight:bold;">extends</span><span style="color:#657B83;"> </span><span style="color:#859900;">string</span><span style="color:#657B83;">&gt; </span><span style="color:#859900;">=</span><span style="color:#657B83;"> </span><span style="color:#CB4B16;">T</span><span style="color:#657B83;"> </span><span style="color:#586E75;font-weight:bold;">extends</span><span style="color:#657B83;"> </span><span style="color:#2AA198;">\`\${</span><span style="color:#CB4B16;">Space</span><span style="color:#2AA198;">}\${</span><span style="color:#859900;">infer</span><span style="color:#657B83;"> </span><span style="color:#CB4B16;">R</span><span style="color:#2AA198;">}\`</span><span style="color:#657B83;"> </span><span style="color:#859900;">?</span><span style="color:#657B83;"> </span><span style="color:#CB4B16;">TrimLeft</span><span style="color:#657B83;">&lt;</span><span style="color:#CB4B16;">R</span><span style="color:#657B83;">&gt; </span><span style="color:#859900;">:</span><span style="color:#657B83;"> </span><span style="color:#CB4B16;">T</span></span>
<span class="line"></span>
<span class="line"><span style="color:#586E75;font-weight:bold;">type</span><span style="color:#657B83;"> </span><span style="color:#CB4B16;">X</span><span style="color:#657B83;"> </span><span style="color:#859900;">=</span><span style="color:#657B83;"> </span><span style="color:#CB4B16;">TrimLeft</span><span style="color:#657B83;">&lt;</span><span style="color:#2AA198;">&#39; ts&#39;</span><span style="color:#657B83;">&gt;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div>`,48),e=[o];function t(r,c,y,B,i,d){return n(),a("div",null,e)}const C=s(p,[["render",t]]);export{h as __pageData,C as default};
