import{_ as a,o as e,c as i,O as l}from"./chunks/framework.b9480850.js";const p=JSON.parse('{"title":"JavaScript 核心","description":"","frontmatter":{},"headers":[],"relativePath":"front-base/js/core.md","filePath":"front-base/js/core.md","lastUpdated":1683179032000}'),t={name:"front-base/js/core.md"},r=l('<h1 id="javascript-核心" tabindex="-1">JavaScript 核心 <a class="header-anchor" href="#javascript-核心" aria-label="Permalink to &quot;JavaScript 核心&quot;">​</a></h1><h2 id="作用域" tabindex="-1">作用域 <a class="header-anchor" href="#作用域" aria-label="Permalink to &quot;作用域&quot;">​</a></h2><ul><li>全局作用域</li><li>函数作用域 <ul><li>执行上下文</li><li>词法作用域</li></ul></li><li>块级作用域</li><li>闭包 <ul><li>有权访问另一个函数作用域中变量的函数。</li><li>通常用于保存函数内部状态，创建私有变量。</li><li>实现一些高级编程技巧，比如函数科里化、事件委托、惰性求值。</li></ul></li><li>作用域链 <ul><li>作用域链是一个变量查找机制。</li><li>js 引擎需要查找一个变量时，它会先在当前执行上下文中查找，如果找不到，则向上遍历作用域链，直到全局执行上下文为止。</li></ul></li></ul><h2 id="原型链" tabindex="-1">原型链 <a class="header-anchor" href="#原型链" aria-label="Permalink to &quot;原型链&quot;">​</a></h2><h2 id="事件循环" tabindex="-1">事件循环 <a class="header-anchor" href="#事件循环" aria-label="Permalink to &quot;事件循环&quot;">​</a></h2><h2 id="垃圾回收" tabindex="-1">垃圾回收 <a class="header-anchor" href="#垃圾回收" aria-label="Permalink to &quot;垃圾回收&quot;">​</a></h2><h2 id="事件" tabindex="-1">事件 <a class="header-anchor" href="#事件" aria-label="Permalink to &quot;事件&quot;">​</a></h2>',7),o=[r];function s(c,n,h,d,_,u){return e(),i("div",null,o)}const b=a(t,[["render",s]]);export{p as __pageData,b as default};
