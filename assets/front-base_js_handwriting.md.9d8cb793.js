import{_ as s,o as n,c as a,S as l}from"./chunks/framework.a6b0411f.js";const u=JSON.parse('{"title":"工具方法","description":"","frontmatter":{},"headers":[],"relativePath":"front-base/js/handwriting.md","filePath":"front-base/js/handwriting.md","lastUpdated":1692873620000}'),p={name:"front-base/js/handwriting.md"},o=l(`<h1 id="工具方法" tabindex="-1">工具方法 <a class="header-anchor" href="#工具方法" aria-label="Permalink to &quot;工具方法&quot;">​</a></h1><h2 id="虚拟-dom-转真实-dom" tabindex="-1">虚拟 dom 转真实 dom <a class="header-anchor" href="#虚拟-dom-转真实-dom" aria-label="Permalink to &quot;虚拟 dom 转真实 dom&quot;">​</a></h2><div class="language-js vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki solarized-dark vp-code-dark"><code><span class="line"><span style="color:#93A1A1;font-weight:bold;">const</span><span style="color:#839496;"> </span><span style="color:#268BD2;">vnode</span><span style="color:#839496;"> </span><span style="color:#859900;">=</span><span style="color:#839496;"> {</span></span>
<span class="line"><span style="color:#839496;">  tag: </span><span style="color:#2AA198;">&#39;div&#39;</span><span style="color:#839496;">,</span></span>
<span class="line"><span style="color:#839496;">  attrs: {</span></span>
<span class="line"><span style="color:#839496;">    id: </span><span style="color:#2AA198;">&#39;app&#39;</span><span style="color:#839496;">,</span></span>
<span class="line"><span style="color:#839496;">  },</span></span>
<span class="line"><span style="color:#839496;">  children: [</span></span>
<span class="line"><span style="color:#839496;">    {</span></span>
<span class="line"><span style="color:#839496;">      tag: </span><span style="color:#2AA198;">&#39;span&#39;</span><span style="color:#839496;">,</span></span>
<span class="line"><span style="color:#839496;">      children: [],</span></span>
<span class="line"><span style="color:#839496;">    },</span></span>
<span class="line"><span style="color:#839496;">  ],</span></span>
<span class="line"><span style="color:#839496;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#93A1A1;font-weight:bold;">function</span><span style="color:#839496;"> </span><span style="color:#268BD2;">render</span><span style="color:#839496;">(vnode, container) {</span></span>
<span class="line"><span style="color:#839496;">  </span><span style="color:#93A1A1;font-weight:bold;">const</span><span style="color:#839496;"> </span><span style="color:#268BD2;">el</span><span style="color:#839496;"> </span><span style="color:#859900;">=</span><span style="color:#839496;"> </span><span style="color:#268BD2;">document</span><span style="color:#839496;">.</span><span style="color:#268BD2;">createElement</span><span style="color:#839496;">(</span><span style="color:#268BD2;">vnode</span><span style="color:#839496;">.</span><span style="color:#268BD2;">tag</span><span style="color:#839496;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#839496;">  </span><span style="color:#859900;">if</span><span style="color:#839496;"> (</span><span style="color:#268BD2;">vnode</span><span style="color:#839496;">.</span><span style="color:#268BD2;">attrs</span><span style="color:#839496;">) {</span></span>
<span class="line"><span style="color:#839496;">    </span><span style="color:#859900;">for</span><span style="color:#839496;"> (</span><span style="color:#93A1A1;font-weight:bold;">const</span><span style="color:#839496;"> </span><span style="color:#268BD2;">key</span><span style="color:#839496;"> </span><span style="color:#859900;">in</span><span style="color:#839496;"> </span><span style="color:#268BD2;">vnode</span><span style="color:#839496;">.</span><span style="color:#268BD2;">attrs</span><span style="color:#839496;">)</span></span>
<span class="line"><span style="color:#839496;">      </span><span style="color:#268BD2;">el</span><span style="color:#839496;">.</span><span style="color:#268BD2;">setAttribute</span><span style="color:#839496;">(</span><span style="color:#268BD2;">key</span><span style="color:#839496;">, </span><span style="color:#268BD2;">vnode</span><span style="color:#839496;">.</span><span style="color:#268BD2;">attrs</span><span style="color:#839496;">[</span><span style="color:#268BD2;">key</span><span style="color:#839496;">])</span></span>
<span class="line"></span>
<span class="line"><span style="color:#839496;">  }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#839496;">  </span><span style="color:#859900;">if</span><span style="color:#839496;"> (</span><span style="color:#268BD2;">vnode</span><span style="color:#839496;">.</span><span style="color:#268BD2;">children</span><span style="color:#839496;">) {</span></span>
<span class="line"><span style="color:#839496;">    </span><span style="color:#268BD2;">vnode</span><span style="color:#839496;">.</span><span style="color:#268BD2;">children</span><span style="color:#839496;">.</span><span style="color:#268BD2;">forEach</span><span style="color:#839496;">((item) </span><span style="color:#93A1A1;font-weight:bold;">=&gt;</span><span style="color:#839496;"> {</span></span>
<span class="line"><span style="color:#839496;">      </span><span style="color:#268BD2;">render</span><span style="color:#839496;">(</span><span style="color:#268BD2;">item</span><span style="color:#839496;">, </span><span style="color:#268BD2;">el</span><span style="color:#839496;">)</span></span>
<span class="line"><span style="color:#839496;">    })</span></span>
<span class="line"><span style="color:#839496;">  }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#839496;">  </span><span style="color:#268BD2;">container</span><span style="color:#839496;">.</span><span style="color:#268BD2;">appendChild</span><span style="color:#839496;">(</span><span style="color:#268BD2;">el</span><span style="color:#839496;">)</span></span>
<span class="line"><span style="color:#839496;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#93A1A1;font-weight:bold;">const</span><span style="color:#839496;"> </span><span style="color:#268BD2;">container</span><span style="color:#839496;"> </span><span style="color:#859900;">=</span><span style="color:#839496;"> </span><span style="color:#268BD2;">document</span><span style="color:#839496;">.</span><span style="color:#268BD2;">createElement</span><span style="color:#839496;">(</span><span style="color:#2AA198;">&#39;div&#39;</span><span style="color:#839496;">)</span></span>
<span class="line"><span style="color:#268BD2;">console</span><span style="color:#839496;">.</span><span style="color:#268BD2;">log</span><span style="color:#839496;">(</span><span style="color:#268BD2;">render</span><span style="color:#839496;">(</span><span style="color:#268BD2;">vnode</span><span style="color:#839496;">, </span><span style="color:#268BD2;">container</span><span style="color:#839496;">))</span></span></code></pre><pre class="shiki solarized-light vp-code-light"><code><span class="line"><span style="color:#586E75;font-weight:bold;">const</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">vnode</span><span style="color:#657B83;"> </span><span style="color:#859900;">=</span><span style="color:#657B83;"> {</span></span>
<span class="line"><span style="color:#657B83;">  tag: </span><span style="color:#2AA198;">&#39;div&#39;</span><span style="color:#657B83;">,</span></span>
<span class="line"><span style="color:#657B83;">  attrs: {</span></span>
<span class="line"><span style="color:#657B83;">    id: </span><span style="color:#2AA198;">&#39;app&#39;</span><span style="color:#657B83;">,</span></span>
<span class="line"><span style="color:#657B83;">  },</span></span>
<span class="line"><span style="color:#657B83;">  children: [</span></span>
<span class="line"><span style="color:#657B83;">    {</span></span>
<span class="line"><span style="color:#657B83;">      tag: </span><span style="color:#2AA198;">&#39;span&#39;</span><span style="color:#657B83;">,</span></span>
<span class="line"><span style="color:#657B83;">      children: [],</span></span>
<span class="line"><span style="color:#657B83;">    },</span></span>
<span class="line"><span style="color:#657B83;">  ],</span></span>
<span class="line"><span style="color:#657B83;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#586E75;font-weight:bold;">function</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">render</span><span style="color:#657B83;">(vnode, container) {</span></span>
<span class="line"><span style="color:#657B83;">  </span><span style="color:#586E75;font-weight:bold;">const</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">el</span><span style="color:#657B83;"> </span><span style="color:#859900;">=</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">document</span><span style="color:#657B83;">.</span><span style="color:#268BD2;">createElement</span><span style="color:#657B83;">(</span><span style="color:#268BD2;">vnode</span><span style="color:#657B83;">.</span><span style="color:#268BD2;">tag</span><span style="color:#657B83;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#657B83;">  </span><span style="color:#859900;">if</span><span style="color:#657B83;"> (</span><span style="color:#268BD2;">vnode</span><span style="color:#657B83;">.</span><span style="color:#268BD2;">attrs</span><span style="color:#657B83;">) {</span></span>
<span class="line"><span style="color:#657B83;">    </span><span style="color:#859900;">for</span><span style="color:#657B83;"> (</span><span style="color:#586E75;font-weight:bold;">const</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">key</span><span style="color:#657B83;"> </span><span style="color:#859900;">in</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">vnode</span><span style="color:#657B83;">.</span><span style="color:#268BD2;">attrs</span><span style="color:#657B83;">)</span></span>
<span class="line"><span style="color:#657B83;">      </span><span style="color:#268BD2;">el</span><span style="color:#657B83;">.</span><span style="color:#268BD2;">setAttribute</span><span style="color:#657B83;">(</span><span style="color:#268BD2;">key</span><span style="color:#657B83;">, </span><span style="color:#268BD2;">vnode</span><span style="color:#657B83;">.</span><span style="color:#268BD2;">attrs</span><span style="color:#657B83;">[</span><span style="color:#268BD2;">key</span><span style="color:#657B83;">])</span></span>
<span class="line"></span>
<span class="line"><span style="color:#657B83;">  }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#657B83;">  </span><span style="color:#859900;">if</span><span style="color:#657B83;"> (</span><span style="color:#268BD2;">vnode</span><span style="color:#657B83;">.</span><span style="color:#268BD2;">children</span><span style="color:#657B83;">) {</span></span>
<span class="line"><span style="color:#657B83;">    </span><span style="color:#268BD2;">vnode</span><span style="color:#657B83;">.</span><span style="color:#268BD2;">children</span><span style="color:#657B83;">.</span><span style="color:#268BD2;">forEach</span><span style="color:#657B83;">((item) </span><span style="color:#586E75;font-weight:bold;">=&gt;</span><span style="color:#657B83;"> {</span></span>
<span class="line"><span style="color:#657B83;">      </span><span style="color:#268BD2;">render</span><span style="color:#657B83;">(</span><span style="color:#268BD2;">item</span><span style="color:#657B83;">, </span><span style="color:#268BD2;">el</span><span style="color:#657B83;">)</span></span>
<span class="line"><span style="color:#657B83;">    })</span></span>
<span class="line"><span style="color:#657B83;">  }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#657B83;">  </span><span style="color:#268BD2;">container</span><span style="color:#657B83;">.</span><span style="color:#268BD2;">appendChild</span><span style="color:#657B83;">(</span><span style="color:#268BD2;">el</span><span style="color:#657B83;">)</span></span>
<span class="line"><span style="color:#657B83;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#586E75;font-weight:bold;">const</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">container</span><span style="color:#657B83;"> </span><span style="color:#859900;">=</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">document</span><span style="color:#657B83;">.</span><span style="color:#268BD2;">createElement</span><span style="color:#657B83;">(</span><span style="color:#2AA198;">&#39;div&#39;</span><span style="color:#657B83;">)</span></span>
<span class="line"><span style="color:#268BD2;">console</span><span style="color:#657B83;">.</span><span style="color:#268BD2;">log</span><span style="color:#657B83;">(</span><span style="color:#268BD2;">render</span><span style="color:#657B83;">(</span><span style="color:#268BD2;">vnode</span><span style="color:#657B83;">, </span><span style="color:#268BD2;">container</span><span style="color:#657B83;">))</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br></div></div><h2 id="fetchwithretry" tabindex="-1">fetchWithRetry <a class="header-anchor" href="#fetchwithretry" aria-label="Permalink to &quot;fetchWithRetry&quot;">​</a></h2><p>实现一个函数, fetchWithRetry 会自动重试3次，任意一次成功直接返回</p><div class="language-js vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki solarized-dark vp-code-dark"><code><span class="line"><span style="color:#93A1A1;font-weight:bold;">async</span><span style="color:#839496;"> </span><span style="color:#93A1A1;font-weight:bold;">function</span><span style="color:#839496;"> </span><span style="color:#268BD2;">fetchWithRetry</span><span style="color:#839496;">(url, options, retryCount </span><span style="color:#859900;">=</span><span style="color:#839496;"> </span><span style="color:#D33682;">0</span><span style="color:#839496;">) {</span></span>
<span class="line"><span style="color:#839496;">  </span><span style="color:#93A1A1;font-weight:bold;">const</span><span style="color:#839496;"> { </span><span style="color:#268BD2;">maxRetry</span><span style="color:#839496;"> </span><span style="color:#859900;">=</span><span style="color:#839496;"> </span><span style="color:#D33682;">3</span><span style="color:#839496;">, </span><span style="color:#859900;">...</span><span style="color:#268BD2;">remainOption</span><span style="color:#839496;"> } </span><span style="color:#859900;">=</span><span style="color:#839496;"> </span><span style="color:#268BD2;">options</span></span>
<span class="line"></span>
<span class="line"><span style="color:#839496;">  </span><span style="color:#859900;">try</span><span style="color:#839496;"> {</span></span>
<span class="line"><span style="color:#839496;">    </span><span style="color:#859900;">return</span><span style="color:#839496;"> </span><span style="color:#859900;">await</span><span style="color:#839496;"> </span><span style="color:#268BD2;">fetch</span><span style="color:#839496;">(</span><span style="color:#268BD2;">url</span><span style="color:#839496;">, </span><span style="color:#268BD2;">remainOption</span><span style="color:#839496;">)</span></span>
<span class="line"><span style="color:#839496;">  }</span></span>
<span class="line"><span style="color:#839496;">  </span><span style="color:#859900;">catch</span><span style="color:#839496;"> (</span><span style="color:#268BD2;">error</span><span style="color:#839496;">) {</span></span>
<span class="line"><span style="color:#839496;">    </span><span style="color:#859900;">if</span><span style="color:#839496;"> (</span><span style="color:#268BD2;">retryCount</span><span style="color:#839496;"> </span><span style="color:#859900;">&lt;</span><span style="color:#839496;"> </span><span style="color:#268BD2;">maxRetry</span><span style="color:#839496;">)</span></span>
<span class="line"><span style="color:#839496;">      </span><span style="color:#859900;">return</span><span style="color:#839496;"> </span><span style="color:#268BD2;">fetchWithRetry</span><span style="color:#839496;">(</span><span style="color:#268BD2;">url</span><span style="color:#839496;">, </span><span style="color:#268BD2;">options</span><span style="color:#839496;">, </span><span style="color:#268BD2;">retryCount</span><span style="color:#839496;"> </span><span style="color:#859900;">+</span><span style="color:#839496;"> </span><span style="color:#D33682;">1</span><span style="color:#839496;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#839496;">    </span><span style="color:#859900;">throw</span><span style="color:#839496;"> </span><span style="color:#268BD2;">error</span></span>
<span class="line"><span style="color:#839496;">  }</span></span>
<span class="line"><span style="color:#839496;">}</span></span></code></pre><pre class="shiki solarized-light vp-code-light"><code><span class="line"><span style="color:#586E75;font-weight:bold;">async</span><span style="color:#657B83;"> </span><span style="color:#586E75;font-weight:bold;">function</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">fetchWithRetry</span><span style="color:#657B83;">(url, options, retryCount </span><span style="color:#859900;">=</span><span style="color:#657B83;"> </span><span style="color:#D33682;">0</span><span style="color:#657B83;">) {</span></span>
<span class="line"><span style="color:#657B83;">  </span><span style="color:#586E75;font-weight:bold;">const</span><span style="color:#657B83;"> { </span><span style="color:#268BD2;">maxRetry</span><span style="color:#657B83;"> </span><span style="color:#859900;">=</span><span style="color:#657B83;"> </span><span style="color:#D33682;">3</span><span style="color:#657B83;">, </span><span style="color:#859900;">...</span><span style="color:#268BD2;">remainOption</span><span style="color:#657B83;"> } </span><span style="color:#859900;">=</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">options</span></span>
<span class="line"></span>
<span class="line"><span style="color:#657B83;">  </span><span style="color:#859900;">try</span><span style="color:#657B83;"> {</span></span>
<span class="line"><span style="color:#657B83;">    </span><span style="color:#859900;">return</span><span style="color:#657B83;"> </span><span style="color:#859900;">await</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">fetch</span><span style="color:#657B83;">(</span><span style="color:#268BD2;">url</span><span style="color:#657B83;">, </span><span style="color:#268BD2;">remainOption</span><span style="color:#657B83;">)</span></span>
<span class="line"><span style="color:#657B83;">  }</span></span>
<span class="line"><span style="color:#657B83;">  </span><span style="color:#859900;">catch</span><span style="color:#657B83;"> (</span><span style="color:#268BD2;">error</span><span style="color:#657B83;">) {</span></span>
<span class="line"><span style="color:#657B83;">    </span><span style="color:#859900;">if</span><span style="color:#657B83;"> (</span><span style="color:#268BD2;">retryCount</span><span style="color:#657B83;"> </span><span style="color:#859900;">&lt;</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">maxRetry</span><span style="color:#657B83;">)</span></span>
<span class="line"><span style="color:#657B83;">      </span><span style="color:#859900;">return</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">fetchWithRetry</span><span style="color:#657B83;">(</span><span style="color:#268BD2;">url</span><span style="color:#657B83;">, </span><span style="color:#268BD2;">options</span><span style="color:#657B83;">, </span><span style="color:#268BD2;">retryCount</span><span style="color:#657B83;"> </span><span style="color:#859900;">+</span><span style="color:#657B83;"> </span><span style="color:#D33682;">1</span><span style="color:#657B83;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#657B83;">    </span><span style="color:#859900;">throw</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">error</span></span>
<span class="line"><span style="color:#657B83;">  }</span></span>
<span class="line"><span style="color:#657B83;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br></div></div><h2 id="compose" tabindex="-1">compose <a class="header-anchor" href="#compose" aria-label="Permalink to &quot;compose&quot;">​</a></h2><p>实现compose函数, 类似于koa的中间件洋葱模型</p><div class="language-js vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki solarized-dark vp-code-dark"><code><span class="line"><span style="color:#93A1A1;font-weight:bold;">const</span><span style="color:#839496;"> </span><span style="color:#268BD2;">middleware</span><span style="color:#839496;"> </span><span style="color:#859900;">=</span><span style="color:#839496;"> []</span></span>
<span class="line"><span style="color:#268BD2;">middleware</span><span style="color:#839496;">.</span><span style="color:#268BD2;">push</span><span style="color:#839496;">((next) </span><span style="color:#93A1A1;font-weight:bold;">=&gt;</span><span style="color:#839496;"> {</span></span>
<span class="line"><span style="color:#839496;">  </span><span style="color:#268BD2;">console</span><span style="color:#839496;">.</span><span style="color:#268BD2;">log</span><span style="color:#839496;">(</span><span style="color:#D33682;">1</span><span style="color:#839496;">)</span></span>
<span class="line"><span style="color:#839496;">  </span><span style="color:#268BD2;">next</span><span style="color:#839496;">()</span></span>
<span class="line"><span style="color:#839496;">  </span><span style="color:#268BD2;">console</span><span style="color:#839496;">.</span><span style="color:#268BD2;">log</span><span style="color:#839496;">(</span><span style="color:#D33682;">1.1</span><span style="color:#839496;">)</span></span>
<span class="line"><span style="color:#839496;">})</span></span>
<span class="line"><span style="color:#268BD2;">middleware</span><span style="color:#839496;">.</span><span style="color:#268BD2;">push</span><span style="color:#839496;">((next) </span><span style="color:#93A1A1;font-weight:bold;">=&gt;</span><span style="color:#839496;"> {</span></span>
<span class="line"><span style="color:#839496;">  </span><span style="color:#268BD2;">console</span><span style="color:#839496;">.</span><span style="color:#268BD2;">log</span><span style="color:#839496;">(</span><span style="color:#D33682;">2</span><span style="color:#839496;">)</span></span>
<span class="line"><span style="color:#839496;">  </span><span style="color:#268BD2;">next</span><span style="color:#839496;">()</span></span>
<span class="line"><span style="color:#839496;">  </span><span style="color:#268BD2;">console</span><span style="color:#839496;">.</span><span style="color:#268BD2;">log</span><span style="color:#839496;">(</span><span style="color:#D33682;">2.1</span><span style="color:#839496;">)</span></span>
<span class="line"><span style="color:#839496;">})</span></span>
<span class="line"><span style="color:#268BD2;">middleware</span><span style="color:#839496;">.</span><span style="color:#268BD2;">push</span><span style="color:#839496;">((next) </span><span style="color:#93A1A1;font-weight:bold;">=&gt;</span><span style="color:#839496;"> {</span></span>
<span class="line"><span style="color:#839496;">  </span><span style="color:#268BD2;">console</span><span style="color:#839496;">.</span><span style="color:#268BD2;">log</span><span style="color:#839496;">(</span><span style="color:#D33682;">3</span><span style="color:#839496;">)</span></span>
<span class="line"><span style="color:#839496;">  </span><span style="color:#268BD2;">next</span><span style="color:#839496;">()</span></span>
<span class="line"><span style="color:#839496;">  </span><span style="color:#268BD2;">console</span><span style="color:#839496;">.</span><span style="color:#268BD2;">log</span><span style="color:#839496;">(</span><span style="color:#D33682;">3.1</span><span style="color:#839496;">)</span></span>
<span class="line"><span style="color:#839496;">})</span></span>
<span class="line"></span>
<span class="line"><span style="color:#93A1A1;font-weight:bold;">function</span><span style="color:#839496;"> </span><span style="color:#268BD2;">compose</span><span style="color:#839496;">(middleware) {</span></span>
<span class="line"><span style="color:#839496;">  </span><span style="color:#859900;">return</span><span style="color:#839496;"> (next) </span><span style="color:#93A1A1;font-weight:bold;">=&gt;</span><span style="color:#839496;"> {</span></span>
<span class="line"><span style="color:#839496;">    </span><span style="color:#859900;">return</span><span style="color:#839496;"> </span><span style="color:#268BD2;">dispatch</span><span style="color:#839496;">(</span><span style="color:#D33682;">0</span><span style="color:#839496;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#839496;">    </span><span style="color:#93A1A1;font-weight:bold;">function</span><span style="color:#839496;"> </span><span style="color:#268BD2;">dispatch</span><span style="color:#839496;">(i) {</span></span>
<span class="line"><span style="color:#839496;">      </span><span style="color:#93A1A1;font-weight:bold;">const</span><span style="color:#839496;"> </span><span style="color:#268BD2;">fn</span><span style="color:#839496;"> </span><span style="color:#859900;">=</span><span style="color:#839496;"> </span><span style="color:#268BD2;">middleware</span><span style="color:#839496;">[</span><span style="color:#268BD2;">i</span><span style="color:#839496;">]</span></span>
<span class="line"><span style="color:#839496;">      </span><span style="color:#859900;">if</span><span style="color:#839496;"> (</span><span style="color:#859900;">!</span><span style="color:#268BD2;">fn</span><span style="color:#839496;">)</span></span>
<span class="line"><span style="color:#839496;">        </span><span style="color:#859900;">return</span><span style="color:#839496;"> </span><span style="color:#859900;">Promise</span><span style="color:#839496;">.</span><span style="color:#268BD2;">resolve</span><span style="color:#839496;">()</span></span>
<span class="line"></span>
<span class="line"><span style="color:#839496;">      </span><span style="color:#859900;">try</span><span style="color:#839496;"> {</span></span>
<span class="line"><span style="color:#839496;">        </span><span style="color:#859900;">return</span><span style="color:#839496;"> </span><span style="color:#859900;">Promise</span><span style="color:#839496;">.</span><span style="color:#268BD2;">resolve</span><span style="color:#839496;">(</span><span style="color:#268BD2;">fn</span><span style="color:#839496;">(() </span><span style="color:#93A1A1;font-weight:bold;">=&gt;</span><span style="color:#839496;"> </span><span style="color:#268BD2;">dispatch</span><span style="color:#839496;">(</span><span style="color:#268BD2;">i</span><span style="color:#839496;"> </span><span style="color:#859900;">+</span><span style="color:#839496;"> </span><span style="color:#D33682;">1</span><span style="color:#839496;">)))</span></span>
<span class="line"><span style="color:#839496;">      }</span></span>
<span class="line"><span style="color:#839496;">      </span><span style="color:#859900;">catch</span><span style="color:#839496;"> (</span><span style="color:#268BD2;">error</span><span style="color:#839496;">) {</span></span>
<span class="line"><span style="color:#839496;">        </span><span style="color:#859900;">return</span><span style="color:#839496;"> </span><span style="color:#859900;">Promise</span><span style="color:#839496;">.</span><span style="color:#268BD2;">reject</span><span style="color:#839496;">(</span><span style="color:#268BD2;">error</span><span style="color:#839496;">)</span></span>
<span class="line"><span style="color:#839496;">      }</span></span>
<span class="line"><span style="color:#839496;">    }</span></span>
<span class="line"><span style="color:#839496;">  }</span></span>
<span class="line"><span style="color:#839496;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#93A1A1;font-weight:bold;">const</span><span style="color:#839496;"> </span><span style="color:#268BD2;">fn</span><span style="color:#839496;"> </span><span style="color:#859900;">=</span><span style="color:#839496;"> </span><span style="color:#268BD2;">compose</span><span style="color:#839496;">(</span><span style="color:#268BD2;">middleware</span><span style="color:#839496;">)</span></span>
<span class="line"><span style="color:#268BD2;">fn</span><span style="color:#839496;">()</span></span>
<span class="line"><span style="color:#93A1A1;font-weight:bold;">function</span><span style="color:#839496;"> </span><span style="color:#268BD2;">compose</span><span style="color:#839496;">(middleware) {</span></span>
<span class="line"><span style="color:#839496;">  </span><span style="color:#93A1A1;font-weight:bold;">let</span><span style="color:#839496;"> </span><span style="color:#268BD2;">middlewareData</span><span style="color:#839496;"> </span><span style="color:#859900;">=</span><span style="color:#839496;"> {}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#839496;">  </span><span style="color:#93A1A1;font-weight:bold;">async</span><span style="color:#839496;"> </span><span style="color:#93A1A1;font-weight:bold;">function</span><span style="color:#839496;"> </span><span style="color:#268BD2;">dispatch</span><span style="color:#839496;">(index) {</span></span>
<span class="line"><span style="color:#839496;">    </span><span style="color:#859900;">if</span><span style="color:#839496;"> (</span><span style="color:#268BD2;">index</span><span style="color:#839496;"> </span><span style="color:#859900;">===</span><span style="color:#839496;"> </span><span style="color:#268BD2;">middleware</span><span style="color:#839496;">.length)</span></span>
<span class="line"><span style="color:#839496;">      </span><span style="color:#859900;">return</span></span>
<span class="line"></span>
<span class="line"><span style="color:#839496;">    </span><span style="color:#93A1A1;font-weight:bold;">const</span><span style="color:#839496;"> { </span><span style="color:#268BD2;">name</span><span style="color:#839496;">, </span><span style="color:#268BD2;">fn</span><span style="color:#839496;"> } </span><span style="color:#859900;">=</span><span style="color:#839496;"> </span><span style="color:#268BD2;">middleware</span><span style="color:#839496;">[</span><span style="color:#268BD2;">index</span><span style="color:#839496;">]</span></span>
<span class="line"></span>
<span class="line"><span style="color:#839496;">    </span><span style="color:#93A1A1;font-weight:bold;">const</span><span style="color:#839496;"> { </span><span style="color:#268BD2;">data</span><span style="color:#839496;"> } </span><span style="color:#859900;">=</span><span style="color:#839496;"> </span><span style="color:#859900;">await</span><span style="color:#839496;"> </span><span style="color:#268BD2;">fn</span><span style="color:#839496;">({</span></span>
<span class="line"><span style="color:#839496;">      </span><span style="color:#268BD2;">middlewareData</span><span style="color:#839496;">,</span></span>
<span class="line"><span style="color:#839496;">      </span><span style="color:#268BD2;">next</span><span style="color:#839496;">: () </span><span style="color:#93A1A1;font-weight:bold;">=&gt;</span><span style="color:#839496;"> {</span></span>
<span class="line"><span style="color:#839496;">        </span><span style="color:#268BD2;">dispatch</span><span style="color:#839496;">(</span><span style="color:#859900;">++</span><span style="color:#268BD2;">index</span><span style="color:#839496;">)</span></span>
<span class="line"><span style="color:#839496;">      },</span></span>
<span class="line"><span style="color:#839496;">    })</span></span>
<span class="line"></span>
<span class="line"><span style="color:#839496;">    </span><span style="color:#268BD2;">middlewareData</span><span style="color:#839496;"> </span><span style="color:#859900;">=</span><span style="color:#839496;"> {</span></span>
<span class="line"><span style="color:#839496;">      </span><span style="color:#859900;">...</span><span style="color:#268BD2;">middlewareData</span><span style="color:#839496;">,</span></span>
<span class="line"><span style="color:#839496;">      [</span><span style="color:#268BD2;">name</span><span style="color:#839496;">]: {</span></span>
<span class="line"><span style="color:#839496;">        </span><span style="color:#859900;">...</span><span style="color:#268BD2;">middlewareData</span><span style="color:#839496;">[</span><span style="color:#268BD2;">name</span><span style="color:#839496;">],</span></span>
<span class="line"><span style="color:#839496;">        </span><span style="color:#859900;">...</span><span style="color:#268BD2;">data</span><span style="color:#839496;">,</span></span>
<span class="line"><span style="color:#839496;">      },</span></span>
<span class="line"><span style="color:#839496;">    }</span></span>
<span class="line"><span style="color:#839496;">  }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#839496;">  </span><span style="color:#268BD2;">dispatch</span><span style="color:#839496;">(</span><span style="color:#D33682;">0</span><span style="color:#839496;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#839496;">  </span><span style="color:#859900;">return</span><span style="color:#839496;"> </span><span style="color:#268BD2;">middlewareData</span></span>
<span class="line"><span style="color:#839496;">}</span></span></code></pre><pre class="shiki solarized-light vp-code-light"><code><span class="line"><span style="color:#586E75;font-weight:bold;">const</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">middleware</span><span style="color:#657B83;"> </span><span style="color:#859900;">=</span><span style="color:#657B83;"> []</span></span>
<span class="line"><span style="color:#268BD2;">middleware</span><span style="color:#657B83;">.</span><span style="color:#268BD2;">push</span><span style="color:#657B83;">((next) </span><span style="color:#586E75;font-weight:bold;">=&gt;</span><span style="color:#657B83;"> {</span></span>
<span class="line"><span style="color:#657B83;">  </span><span style="color:#268BD2;">console</span><span style="color:#657B83;">.</span><span style="color:#268BD2;">log</span><span style="color:#657B83;">(</span><span style="color:#D33682;">1</span><span style="color:#657B83;">)</span></span>
<span class="line"><span style="color:#657B83;">  </span><span style="color:#268BD2;">next</span><span style="color:#657B83;">()</span></span>
<span class="line"><span style="color:#657B83;">  </span><span style="color:#268BD2;">console</span><span style="color:#657B83;">.</span><span style="color:#268BD2;">log</span><span style="color:#657B83;">(</span><span style="color:#D33682;">1.1</span><span style="color:#657B83;">)</span></span>
<span class="line"><span style="color:#657B83;">})</span></span>
<span class="line"><span style="color:#268BD2;">middleware</span><span style="color:#657B83;">.</span><span style="color:#268BD2;">push</span><span style="color:#657B83;">((next) </span><span style="color:#586E75;font-weight:bold;">=&gt;</span><span style="color:#657B83;"> {</span></span>
<span class="line"><span style="color:#657B83;">  </span><span style="color:#268BD2;">console</span><span style="color:#657B83;">.</span><span style="color:#268BD2;">log</span><span style="color:#657B83;">(</span><span style="color:#D33682;">2</span><span style="color:#657B83;">)</span></span>
<span class="line"><span style="color:#657B83;">  </span><span style="color:#268BD2;">next</span><span style="color:#657B83;">()</span></span>
<span class="line"><span style="color:#657B83;">  </span><span style="color:#268BD2;">console</span><span style="color:#657B83;">.</span><span style="color:#268BD2;">log</span><span style="color:#657B83;">(</span><span style="color:#D33682;">2.1</span><span style="color:#657B83;">)</span></span>
<span class="line"><span style="color:#657B83;">})</span></span>
<span class="line"><span style="color:#268BD2;">middleware</span><span style="color:#657B83;">.</span><span style="color:#268BD2;">push</span><span style="color:#657B83;">((next) </span><span style="color:#586E75;font-weight:bold;">=&gt;</span><span style="color:#657B83;"> {</span></span>
<span class="line"><span style="color:#657B83;">  </span><span style="color:#268BD2;">console</span><span style="color:#657B83;">.</span><span style="color:#268BD2;">log</span><span style="color:#657B83;">(</span><span style="color:#D33682;">3</span><span style="color:#657B83;">)</span></span>
<span class="line"><span style="color:#657B83;">  </span><span style="color:#268BD2;">next</span><span style="color:#657B83;">()</span></span>
<span class="line"><span style="color:#657B83;">  </span><span style="color:#268BD2;">console</span><span style="color:#657B83;">.</span><span style="color:#268BD2;">log</span><span style="color:#657B83;">(</span><span style="color:#D33682;">3.1</span><span style="color:#657B83;">)</span></span>
<span class="line"><span style="color:#657B83;">})</span></span>
<span class="line"></span>
<span class="line"><span style="color:#586E75;font-weight:bold;">function</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">compose</span><span style="color:#657B83;">(middleware) {</span></span>
<span class="line"><span style="color:#657B83;">  </span><span style="color:#859900;">return</span><span style="color:#657B83;"> (next) </span><span style="color:#586E75;font-weight:bold;">=&gt;</span><span style="color:#657B83;"> {</span></span>
<span class="line"><span style="color:#657B83;">    </span><span style="color:#859900;">return</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">dispatch</span><span style="color:#657B83;">(</span><span style="color:#D33682;">0</span><span style="color:#657B83;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#657B83;">    </span><span style="color:#586E75;font-weight:bold;">function</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">dispatch</span><span style="color:#657B83;">(i) {</span></span>
<span class="line"><span style="color:#657B83;">      </span><span style="color:#586E75;font-weight:bold;">const</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">fn</span><span style="color:#657B83;"> </span><span style="color:#859900;">=</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">middleware</span><span style="color:#657B83;">[</span><span style="color:#268BD2;">i</span><span style="color:#657B83;">]</span></span>
<span class="line"><span style="color:#657B83;">      </span><span style="color:#859900;">if</span><span style="color:#657B83;"> (</span><span style="color:#859900;">!</span><span style="color:#268BD2;">fn</span><span style="color:#657B83;">)</span></span>
<span class="line"><span style="color:#657B83;">        </span><span style="color:#859900;">return</span><span style="color:#657B83;"> </span><span style="color:#859900;">Promise</span><span style="color:#657B83;">.</span><span style="color:#268BD2;">resolve</span><span style="color:#657B83;">()</span></span>
<span class="line"></span>
<span class="line"><span style="color:#657B83;">      </span><span style="color:#859900;">try</span><span style="color:#657B83;"> {</span></span>
<span class="line"><span style="color:#657B83;">        </span><span style="color:#859900;">return</span><span style="color:#657B83;"> </span><span style="color:#859900;">Promise</span><span style="color:#657B83;">.</span><span style="color:#268BD2;">resolve</span><span style="color:#657B83;">(</span><span style="color:#268BD2;">fn</span><span style="color:#657B83;">(() </span><span style="color:#586E75;font-weight:bold;">=&gt;</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">dispatch</span><span style="color:#657B83;">(</span><span style="color:#268BD2;">i</span><span style="color:#657B83;"> </span><span style="color:#859900;">+</span><span style="color:#657B83;"> </span><span style="color:#D33682;">1</span><span style="color:#657B83;">)))</span></span>
<span class="line"><span style="color:#657B83;">      }</span></span>
<span class="line"><span style="color:#657B83;">      </span><span style="color:#859900;">catch</span><span style="color:#657B83;"> (</span><span style="color:#268BD2;">error</span><span style="color:#657B83;">) {</span></span>
<span class="line"><span style="color:#657B83;">        </span><span style="color:#859900;">return</span><span style="color:#657B83;"> </span><span style="color:#859900;">Promise</span><span style="color:#657B83;">.</span><span style="color:#268BD2;">reject</span><span style="color:#657B83;">(</span><span style="color:#268BD2;">error</span><span style="color:#657B83;">)</span></span>
<span class="line"><span style="color:#657B83;">      }</span></span>
<span class="line"><span style="color:#657B83;">    }</span></span>
<span class="line"><span style="color:#657B83;">  }</span></span>
<span class="line"><span style="color:#657B83;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#586E75;font-weight:bold;">const</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">fn</span><span style="color:#657B83;"> </span><span style="color:#859900;">=</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">compose</span><span style="color:#657B83;">(</span><span style="color:#268BD2;">middleware</span><span style="color:#657B83;">)</span></span>
<span class="line"><span style="color:#268BD2;">fn</span><span style="color:#657B83;">()</span></span>
<span class="line"><span style="color:#586E75;font-weight:bold;">function</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">compose</span><span style="color:#657B83;">(middleware) {</span></span>
<span class="line"><span style="color:#657B83;">  </span><span style="color:#586E75;font-weight:bold;">let</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">middlewareData</span><span style="color:#657B83;"> </span><span style="color:#859900;">=</span><span style="color:#657B83;"> {}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#657B83;">  </span><span style="color:#586E75;font-weight:bold;">async</span><span style="color:#657B83;"> </span><span style="color:#586E75;font-weight:bold;">function</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">dispatch</span><span style="color:#657B83;">(index) {</span></span>
<span class="line"><span style="color:#657B83;">    </span><span style="color:#859900;">if</span><span style="color:#657B83;"> (</span><span style="color:#268BD2;">index</span><span style="color:#657B83;"> </span><span style="color:#859900;">===</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">middleware</span><span style="color:#657B83;">.length)</span></span>
<span class="line"><span style="color:#657B83;">      </span><span style="color:#859900;">return</span></span>
<span class="line"></span>
<span class="line"><span style="color:#657B83;">    </span><span style="color:#586E75;font-weight:bold;">const</span><span style="color:#657B83;"> { </span><span style="color:#268BD2;">name</span><span style="color:#657B83;">, </span><span style="color:#268BD2;">fn</span><span style="color:#657B83;"> } </span><span style="color:#859900;">=</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">middleware</span><span style="color:#657B83;">[</span><span style="color:#268BD2;">index</span><span style="color:#657B83;">]</span></span>
<span class="line"></span>
<span class="line"><span style="color:#657B83;">    </span><span style="color:#586E75;font-weight:bold;">const</span><span style="color:#657B83;"> { </span><span style="color:#268BD2;">data</span><span style="color:#657B83;"> } </span><span style="color:#859900;">=</span><span style="color:#657B83;"> </span><span style="color:#859900;">await</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">fn</span><span style="color:#657B83;">({</span></span>
<span class="line"><span style="color:#657B83;">      </span><span style="color:#268BD2;">middlewareData</span><span style="color:#657B83;">,</span></span>
<span class="line"><span style="color:#657B83;">      </span><span style="color:#268BD2;">next</span><span style="color:#657B83;">: () </span><span style="color:#586E75;font-weight:bold;">=&gt;</span><span style="color:#657B83;"> {</span></span>
<span class="line"><span style="color:#657B83;">        </span><span style="color:#268BD2;">dispatch</span><span style="color:#657B83;">(</span><span style="color:#859900;">++</span><span style="color:#268BD2;">index</span><span style="color:#657B83;">)</span></span>
<span class="line"><span style="color:#657B83;">      },</span></span>
<span class="line"><span style="color:#657B83;">    })</span></span>
<span class="line"></span>
<span class="line"><span style="color:#657B83;">    </span><span style="color:#268BD2;">middlewareData</span><span style="color:#657B83;"> </span><span style="color:#859900;">=</span><span style="color:#657B83;"> {</span></span>
<span class="line"><span style="color:#657B83;">      </span><span style="color:#859900;">...</span><span style="color:#268BD2;">middlewareData</span><span style="color:#657B83;">,</span></span>
<span class="line"><span style="color:#657B83;">      [</span><span style="color:#268BD2;">name</span><span style="color:#657B83;">]: {</span></span>
<span class="line"><span style="color:#657B83;">        </span><span style="color:#859900;">...</span><span style="color:#268BD2;">middlewareData</span><span style="color:#657B83;">[</span><span style="color:#268BD2;">name</span><span style="color:#657B83;">],</span></span>
<span class="line"><span style="color:#657B83;">        </span><span style="color:#859900;">...</span><span style="color:#268BD2;">data</span><span style="color:#657B83;">,</span></span>
<span class="line"><span style="color:#657B83;">      },</span></span>
<span class="line"><span style="color:#657B83;">    }</span></span>
<span class="line"><span style="color:#657B83;">  }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#657B83;">  </span><span style="color:#268BD2;">dispatch</span><span style="color:#657B83;">(</span><span style="color:#D33682;">0</span><span style="color:#657B83;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#657B83;">  </span><span style="color:#859900;">return</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">middlewareData</span></span>
<span class="line"><span style="color:#657B83;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br><span class="line-number">48</span><br><span class="line-number">49</span><br><span class="line-number">50</span><br><span class="line-number">51</span><br><span class="line-number">52</span><br><span class="line-number">53</span><br><span class="line-number">54</span><br><span class="line-number">55</span><br><span class="line-number">56</span><br><span class="line-number">57</span><br><span class="line-number">58</span><br><span class="line-number">59</span><br><span class="line-number">60</span><br><span class="line-number">61</span><br><span class="line-number">62</span><br><span class="line-number">63</span><br><span class="line-number">64</span><br><span class="line-number">65</span><br><span class="line-number">66</span><br><span class="line-number">67</span><br></div></div><h2 id="实现发布-订阅者模式" tabindex="-1">实现发布-订阅者模式 <a class="header-anchor" href="#实现发布-订阅者模式" aria-label="Permalink to &quot;实现发布-订阅者模式&quot;">​</a></h2><div class="language-js vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki solarized-dark vp-code-dark"><code><span class="line"><span style="color:#93A1A1;font-weight:bold;">class</span><span style="color:#839496;"> </span><span style="color:#CB4B16;">EventEmitter</span><span style="color:#839496;"> {</span></span>
<span class="line"><span style="color:#839496;">  </span><span style="color:#93A1A1;font-weight:bold;">constructor</span><span style="color:#839496;">() {</span></span>
<span class="line"><span style="color:#839496;">    </span><span style="color:#268BD2;">this</span><span style="color:#839496;">.</span><span style="color:#268BD2;">event</span><span style="color:#839496;"> </span><span style="color:#859900;">=</span><span style="color:#839496;"> {}</span></span>
<span class="line"><span style="color:#839496;">  }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#839496;">  </span><span style="color:#268BD2;">on</span><span style="color:#839496;">(type, fn) {</span></span>
<span class="line"><span style="color:#839496;">    </span><span style="color:#859900;">if</span><span style="color:#839496;"> (</span><span style="color:#859900;">!</span><span style="color:#268BD2;">this</span><span style="color:#839496;">.</span><span style="color:#268BD2;">event</span><span style="color:#839496;">[</span><span style="color:#268BD2;">type</span><span style="color:#839496;">])</span></span>
<span class="line"><span style="color:#839496;">      </span><span style="color:#268BD2;">this</span><span style="color:#839496;">.</span><span style="color:#268BD2;">event</span><span style="color:#839496;">[</span><span style="color:#268BD2;">type</span><span style="color:#839496;">] </span><span style="color:#859900;">=</span><span style="color:#839496;"> [</span><span style="color:#268BD2;">fn</span><span style="color:#839496;">]</span></span>
<span class="line"><span style="color:#839496;">    </span><span style="color:#859900;">else</span></span>
<span class="line"><span style="color:#839496;">      </span><span style="color:#268BD2;">this</span><span style="color:#839496;">.</span><span style="color:#268BD2;">event</span><span style="color:#839496;">[</span><span style="color:#268BD2;">type</span><span style="color:#839496;">].</span><span style="color:#268BD2;">push</span><span style="color:#839496;">(</span><span style="color:#268BD2;">fn</span><span style="color:#839496;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#839496;">  }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#839496;">  </span><span style="color:#268BD2;">off</span><span style="color:#839496;">(type, fn) {</span></span>
<span class="line"><span style="color:#839496;">    </span><span style="color:#859900;">if</span><span style="color:#839496;"> (</span><span style="color:#859900;">!</span><span style="color:#268BD2;">this</span><span style="color:#839496;">.</span><span style="color:#268BD2;">event</span><span style="color:#839496;">[</span><span style="color:#268BD2;">type</span><span style="color:#839496;">])</span></span>
<span class="line"><span style="color:#839496;">      </span><span style="color:#859900;">return</span></span>
<span class="line"><span style="color:#839496;">    </span><span style="color:#268BD2;">this</span><span style="color:#839496;">.</span><span style="color:#268BD2;">event</span><span style="color:#839496;">[</span><span style="color:#268BD2;">type</span><span style="color:#839496;">] </span><span style="color:#859900;">=</span><span style="color:#839496;"> </span><span style="color:#268BD2;">this</span><span style="color:#839496;">.</span><span style="color:#268BD2;">event</span><span style="color:#839496;">[</span><span style="color:#268BD2;">type</span><span style="color:#839496;">].</span><span style="color:#268BD2;">filter</span><span style="color:#839496;">(item </span><span style="color:#93A1A1;font-weight:bold;">=&gt;</span><span style="color:#839496;"> </span><span style="color:#268BD2;">item</span><span style="color:#839496;"> </span><span style="color:#859900;">!==</span><span style="color:#839496;"> </span><span style="color:#268BD2;">fn</span><span style="color:#839496;">)</span></span>
<span class="line"><span style="color:#839496;">  }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#839496;">  </span><span style="color:#268BD2;">emit</span><span style="color:#839496;">(type, </span><span style="color:#859900;">...</span><span style="color:#839496;">args) {</span></span>
<span class="line"><span style="color:#839496;">    </span><span style="color:#859900;">if</span><span style="color:#839496;"> (</span><span style="color:#859900;">!</span><span style="color:#268BD2;">this</span><span style="color:#839496;">.</span><span style="color:#268BD2;">event</span><span style="color:#839496;">[</span><span style="color:#268BD2;">type</span><span style="color:#839496;">])</span></span>
<span class="line"><span style="color:#839496;">      </span><span style="color:#859900;">return</span></span>
<span class="line"><span style="color:#839496;">    </span><span style="color:#268BD2;">this</span><span style="color:#839496;">.</span><span style="color:#268BD2;">event</span><span style="color:#839496;">[</span><span style="color:#268BD2;">type</span><span style="color:#839496;">].</span><span style="color:#268BD2;">forEach</span><span style="color:#839496;">((fn) </span><span style="color:#93A1A1;font-weight:bold;">=&gt;</span><span style="color:#839496;"> {</span></span>
<span class="line"><span style="color:#839496;">      </span><span style="color:#268BD2;">fn</span><span style="color:#839496;">(</span><span style="color:#859900;">...</span><span style="color:#268BD2;">args</span><span style="color:#839496;">)</span></span>
<span class="line"><span style="color:#839496;">    })</span></span>
<span class="line"><span style="color:#839496;">  }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#839496;">  </span><span style="color:#268BD2;">once</span><span style="color:#839496;">(type, cb) {</span></span>
<span class="line"><span style="color:#839496;">    </span><span style="color:#93A1A1;font-weight:bold;">const</span><span style="color:#839496;"> </span><span style="color:#268BD2;">fn</span><span style="color:#839496;"> </span><span style="color:#859900;">=</span><span style="color:#839496;"> () </span><span style="color:#93A1A1;font-weight:bold;">=&gt;</span><span style="color:#839496;"> {</span></span>
<span class="line"><span style="color:#839496;">      </span><span style="color:#268BD2;">cb</span><span style="color:#839496;">()</span></span>
<span class="line"><span style="color:#839496;">      </span><span style="color:#268BD2;">this</span><span style="color:#839496;">.</span><span style="color:#268BD2;">off</span><span style="color:#839496;">(</span><span style="color:#268BD2;">type</span><span style="color:#839496;">, </span><span style="color:#268BD2;">fn</span><span style="color:#839496;">)</span></span>
<span class="line"><span style="color:#839496;">    }</span></span>
<span class="line"><span style="color:#839496;">    </span><span style="color:#268BD2;">this</span><span style="color:#839496;">.</span><span style="color:#268BD2;">on</span><span style="color:#839496;">(</span><span style="color:#268BD2;">type</span><span style="color:#839496;">, </span><span style="color:#268BD2;">fn</span><span style="color:#839496;">)</span></span>
<span class="line"><span style="color:#839496;">  }</span></span>
<span class="line"><span style="color:#839496;">}</span></span></code></pre><pre class="shiki solarized-light vp-code-light"><code><span class="line"><span style="color:#586E75;font-weight:bold;">class</span><span style="color:#657B83;"> </span><span style="color:#CB4B16;">EventEmitter</span><span style="color:#657B83;"> {</span></span>
<span class="line"><span style="color:#657B83;">  </span><span style="color:#586E75;font-weight:bold;">constructor</span><span style="color:#657B83;">() {</span></span>
<span class="line"><span style="color:#657B83;">    </span><span style="color:#268BD2;">this</span><span style="color:#657B83;">.</span><span style="color:#268BD2;">event</span><span style="color:#657B83;"> </span><span style="color:#859900;">=</span><span style="color:#657B83;"> {}</span></span>
<span class="line"><span style="color:#657B83;">  }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#657B83;">  </span><span style="color:#268BD2;">on</span><span style="color:#657B83;">(type, fn) {</span></span>
<span class="line"><span style="color:#657B83;">    </span><span style="color:#859900;">if</span><span style="color:#657B83;"> (</span><span style="color:#859900;">!</span><span style="color:#268BD2;">this</span><span style="color:#657B83;">.</span><span style="color:#268BD2;">event</span><span style="color:#657B83;">[</span><span style="color:#268BD2;">type</span><span style="color:#657B83;">])</span></span>
<span class="line"><span style="color:#657B83;">      </span><span style="color:#268BD2;">this</span><span style="color:#657B83;">.</span><span style="color:#268BD2;">event</span><span style="color:#657B83;">[</span><span style="color:#268BD2;">type</span><span style="color:#657B83;">] </span><span style="color:#859900;">=</span><span style="color:#657B83;"> [</span><span style="color:#268BD2;">fn</span><span style="color:#657B83;">]</span></span>
<span class="line"><span style="color:#657B83;">    </span><span style="color:#859900;">else</span></span>
<span class="line"><span style="color:#657B83;">      </span><span style="color:#268BD2;">this</span><span style="color:#657B83;">.</span><span style="color:#268BD2;">event</span><span style="color:#657B83;">[</span><span style="color:#268BD2;">type</span><span style="color:#657B83;">].</span><span style="color:#268BD2;">push</span><span style="color:#657B83;">(</span><span style="color:#268BD2;">fn</span><span style="color:#657B83;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#657B83;">  }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#657B83;">  </span><span style="color:#268BD2;">off</span><span style="color:#657B83;">(type, fn) {</span></span>
<span class="line"><span style="color:#657B83;">    </span><span style="color:#859900;">if</span><span style="color:#657B83;"> (</span><span style="color:#859900;">!</span><span style="color:#268BD2;">this</span><span style="color:#657B83;">.</span><span style="color:#268BD2;">event</span><span style="color:#657B83;">[</span><span style="color:#268BD2;">type</span><span style="color:#657B83;">])</span></span>
<span class="line"><span style="color:#657B83;">      </span><span style="color:#859900;">return</span></span>
<span class="line"><span style="color:#657B83;">    </span><span style="color:#268BD2;">this</span><span style="color:#657B83;">.</span><span style="color:#268BD2;">event</span><span style="color:#657B83;">[</span><span style="color:#268BD2;">type</span><span style="color:#657B83;">] </span><span style="color:#859900;">=</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">this</span><span style="color:#657B83;">.</span><span style="color:#268BD2;">event</span><span style="color:#657B83;">[</span><span style="color:#268BD2;">type</span><span style="color:#657B83;">].</span><span style="color:#268BD2;">filter</span><span style="color:#657B83;">(item </span><span style="color:#586E75;font-weight:bold;">=&gt;</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">item</span><span style="color:#657B83;"> </span><span style="color:#859900;">!==</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">fn</span><span style="color:#657B83;">)</span></span>
<span class="line"><span style="color:#657B83;">  }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#657B83;">  </span><span style="color:#268BD2;">emit</span><span style="color:#657B83;">(type, </span><span style="color:#859900;">...</span><span style="color:#657B83;">args) {</span></span>
<span class="line"><span style="color:#657B83;">    </span><span style="color:#859900;">if</span><span style="color:#657B83;"> (</span><span style="color:#859900;">!</span><span style="color:#268BD2;">this</span><span style="color:#657B83;">.</span><span style="color:#268BD2;">event</span><span style="color:#657B83;">[</span><span style="color:#268BD2;">type</span><span style="color:#657B83;">])</span></span>
<span class="line"><span style="color:#657B83;">      </span><span style="color:#859900;">return</span></span>
<span class="line"><span style="color:#657B83;">    </span><span style="color:#268BD2;">this</span><span style="color:#657B83;">.</span><span style="color:#268BD2;">event</span><span style="color:#657B83;">[</span><span style="color:#268BD2;">type</span><span style="color:#657B83;">].</span><span style="color:#268BD2;">forEach</span><span style="color:#657B83;">((fn) </span><span style="color:#586E75;font-weight:bold;">=&gt;</span><span style="color:#657B83;"> {</span></span>
<span class="line"><span style="color:#657B83;">      </span><span style="color:#268BD2;">fn</span><span style="color:#657B83;">(</span><span style="color:#859900;">...</span><span style="color:#268BD2;">args</span><span style="color:#657B83;">)</span></span>
<span class="line"><span style="color:#657B83;">    })</span></span>
<span class="line"><span style="color:#657B83;">  }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#657B83;">  </span><span style="color:#268BD2;">once</span><span style="color:#657B83;">(type, cb) {</span></span>
<span class="line"><span style="color:#657B83;">    </span><span style="color:#586E75;font-weight:bold;">const</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">fn</span><span style="color:#657B83;"> </span><span style="color:#859900;">=</span><span style="color:#657B83;"> () </span><span style="color:#586E75;font-weight:bold;">=&gt;</span><span style="color:#657B83;"> {</span></span>
<span class="line"><span style="color:#657B83;">      </span><span style="color:#268BD2;">cb</span><span style="color:#657B83;">()</span></span>
<span class="line"><span style="color:#657B83;">      </span><span style="color:#268BD2;">this</span><span style="color:#657B83;">.</span><span style="color:#268BD2;">off</span><span style="color:#657B83;">(</span><span style="color:#268BD2;">type</span><span style="color:#657B83;">, </span><span style="color:#268BD2;">fn</span><span style="color:#657B83;">)</span></span>
<span class="line"><span style="color:#657B83;">    }</span></span>
<span class="line"><span style="color:#657B83;">    </span><span style="color:#268BD2;">this</span><span style="color:#657B83;">.</span><span style="color:#268BD2;">on</span><span style="color:#657B83;">(</span><span style="color:#268BD2;">type</span><span style="color:#657B83;">, </span><span style="color:#268BD2;">fn</span><span style="color:#657B83;">)</span></span>
<span class="line"><span style="color:#657B83;">  }</span></span>
<span class="line"><span style="color:#657B83;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br></div></div><h2 id="获取两个对象的差异" tabindex="-1">获取两个对象的差异 <a class="header-anchor" href="#获取两个对象的差异" aria-label="Permalink to &quot;获取两个对象的差异&quot;">​</a></h2><div class="language-js vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki solarized-dark vp-code-dark"><code><span class="line"><span style="color:#93A1A1;font-weight:bold;">function</span><span style="color:#839496;"> </span><span style="color:#268BD2;">getObjDiff</span><span style="color:#839496;">(before, after) {</span></span>
<span class="line"><span style="color:#839496;">  </span><span style="color:#93A1A1;font-weight:bold;">const</span><span style="color:#839496;"> </span><span style="color:#268BD2;">result</span><span style="color:#839496;"> </span><span style="color:#859900;">=</span><span style="color:#839496;"> </span><span style="color:#268BD2;">Array</span><span style="color:#839496;">.</span><span style="color:#268BD2;">isArray</span><span style="color:#839496;">(</span><span style="color:#268BD2;">after</span><span style="color:#839496;">) </span><span style="color:#859900;">?</span><span style="color:#839496;"> [] </span><span style="color:#859900;">:</span><span style="color:#839496;"> {}</span></span>
<span class="line"><span style="color:#839496;">  </span><span style="color:#93A1A1;font-weight:bold;">const</span><span style="color:#839496;"> </span><span style="color:#268BD2;">allKeys</span><span style="color:#839496;"> </span><span style="color:#859900;">=</span><span style="color:#839496;"> [</span><span style="color:#859900;">...new</span><span style="color:#839496;"> </span><span style="color:#268BD2;">Set</span><span style="color:#839496;">([</span><span style="color:#859900;">...</span><span style="color:#268BD2;">Object</span><span style="color:#839496;">.</span><span style="color:#268BD2;">keys</span><span style="color:#839496;">(</span><span style="color:#268BD2;">before</span><span style="color:#839496;">), </span><span style="color:#859900;">...</span><span style="color:#268BD2;">Object</span><span style="color:#839496;">.</span><span style="color:#268BD2;">keys</span><span style="color:#839496;">(</span><span style="color:#268BD2;">after</span><span style="color:#839496;">)])]</span></span>
<span class="line"></span>
<span class="line"><span style="color:#839496;">  </span><span style="color:#859900;">for</span><span style="color:#839496;"> (</span><span style="color:#93A1A1;font-weight:bold;">const</span><span style="color:#839496;"> </span><span style="color:#268BD2;">key</span><span style="color:#839496;"> </span><span style="color:#859900;">of</span><span style="color:#839496;"> </span><span style="color:#268BD2;">allKeys</span><span style="color:#839496;">) {</span></span>
<span class="line"><span style="color:#839496;">    </span><span style="color:#93A1A1;font-weight:bold;">const</span><span style="color:#839496;"> </span><span style="color:#268BD2;">hasBefore</span><span style="color:#839496;"> </span><span style="color:#859900;">=</span><span style="color:#839496;"> </span><span style="color:#859900;">Object</span><span style="color:#839496;">.prototype.</span><span style="color:#268BD2;">hasOwnProperty</span><span style="color:#839496;">.</span><span style="color:#268BD2;">call</span><span style="color:#839496;">(</span><span style="color:#268BD2;">before</span><span style="color:#839496;">, </span><span style="color:#268BD2;">key</span><span style="color:#839496;">)</span></span>
<span class="line"><span style="color:#839496;">    </span><span style="color:#93A1A1;font-weight:bold;">const</span><span style="color:#839496;"> </span><span style="color:#268BD2;">hasAfter</span><span style="color:#839496;"> </span><span style="color:#859900;">=</span><span style="color:#839496;"> </span><span style="color:#859900;">Object</span><span style="color:#839496;">.prototype.</span><span style="color:#268BD2;">hasOwnProperty</span><span style="color:#839496;">.</span><span style="color:#268BD2;">call</span><span style="color:#839496;">(</span><span style="color:#268BD2;">after</span><span style="color:#839496;">, </span><span style="color:#268BD2;">key</span><span style="color:#839496;">)</span></span>
<span class="line"><span style="color:#839496;">    </span><span style="color:#93A1A1;font-weight:bold;">const</span><span style="color:#839496;"> </span><span style="color:#268BD2;">beforeVal</span><span style="color:#839496;"> </span><span style="color:#859900;">=</span><span style="color:#839496;"> </span><span style="color:#268BD2;">before</span><span style="color:#839496;">[</span><span style="color:#268BD2;">key</span><span style="color:#839496;">]</span></span>
<span class="line"><span style="color:#839496;">    </span><span style="color:#93A1A1;font-weight:bold;">const</span><span style="color:#839496;"> </span><span style="color:#268BD2;">afterVal</span><span style="color:#839496;"> </span><span style="color:#859900;">=</span><span style="color:#839496;"> </span><span style="color:#268BD2;">after</span><span style="color:#839496;">[</span><span style="color:#268BD2;">key</span><span style="color:#839496;">]</span></span>
<span class="line"></span>
<span class="line"><span style="color:#839496;">    </span><span style="color:#859900;">if</span><span style="color:#839496;"> (</span><span style="color:#859900;">typeof</span><span style="color:#839496;"> </span><span style="color:#268BD2;">beforeVal</span><span style="color:#839496;"> </span><span style="color:#859900;">===</span><span style="color:#839496;"> </span><span style="color:#2AA198;">&#39;object&#39;</span><span style="color:#839496;"> </span><span style="color:#859900;">&amp;&amp;</span><span style="color:#839496;"> </span><span style="color:#859900;">typeof</span><span style="color:#839496;"> </span><span style="color:#268BD2;">afterVal</span><span style="color:#839496;"> </span><span style="color:#859900;">===</span><span style="color:#839496;"> </span><span style="color:#2AA198;">&#39;object&#39;</span><span style="color:#839496;"> </span><span style="color:#859900;">&amp;&amp;</span><span style="color:#839496;"> </span><span style="color:#268BD2;">beforeVal</span><span style="color:#839496;"> </span><span style="color:#859900;">&amp;&amp;</span><span style="color:#839496;"> </span><span style="color:#268BD2;">afterVal</span><span style="color:#839496;">) {</span></span>
<span class="line"><span style="color:#839496;">      </span><span style="color:#93A1A1;font-weight:bold;">const</span><span style="color:#839496;"> </span><span style="color:#268BD2;">subDiff</span><span style="color:#839496;"> </span><span style="color:#859900;">=</span><span style="color:#839496;"> </span><span style="color:#268BD2;">getObjDiff</span><span style="color:#839496;">(</span><span style="color:#268BD2;">beforeVal</span><span style="color:#839496;">, </span><span style="color:#268BD2;">afterVal</span><span style="color:#839496;">)</span></span>
<span class="line"><span style="color:#839496;">      </span><span style="color:#859900;">if</span><span style="color:#839496;"> (</span><span style="color:#268BD2;">Object</span><span style="color:#839496;">.</span><span style="color:#268BD2;">keys</span><span style="color:#839496;">(</span><span style="color:#268BD2;">subDiff</span><span style="color:#839496;">).length) {</span></span>
<span class="line"><span style="color:#839496;">        </span><span style="color:#268BD2;">result</span><span style="color:#839496;">[</span><span style="color:#268BD2;">key</span><span style="color:#839496;">] </span><span style="color:#859900;">=</span><span style="color:#839496;"> {</span></span>
<span class="line"><span style="color:#839496;">          _type: </span><span style="color:#2AA198;">&#39;change&#39;</span><span style="color:#839496;">,</span></span>
<span class="line"><span style="color:#839496;">          _value: </span><span style="color:#268BD2;">subDiff</span><span style="color:#839496;">,</span></span>
<span class="line"><span style="color:#839496;">        }</span></span>
<span class="line"><span style="color:#839496;">      }</span></span>
<span class="line"><span style="color:#839496;">    }</span></span>
<span class="line"><span style="color:#839496;">    </span><span style="color:#859900;">else</span><span style="color:#839496;"> {</span></span>
<span class="line"><span style="color:#839496;">      </span><span style="color:#268BD2;">result</span><span style="color:#839496;">[</span><span style="color:#268BD2;">key</span><span style="color:#839496;">]</span></span>
<span class="line"><span style="color:#839496;">        </span><span style="color:#859900;">=</span><span style="color:#839496;"> </span><span style="color:#268BD2;">hasBefore</span><span style="color:#839496;"> </span><span style="color:#859900;">&amp;&amp;</span><span style="color:#839496;"> </span><span style="color:#268BD2;">hasAfter</span></span>
<span class="line"><span style="color:#839496;">          </span><span style="color:#859900;">?</span><span style="color:#839496;"> </span><span style="color:#268BD2;">beforeVal</span><span style="color:#839496;"> </span><span style="color:#859900;">!==</span><span style="color:#839496;"> </span><span style="color:#268BD2;">afterVal</span></span>
<span class="line"><span style="color:#839496;">            </span><span style="color:#859900;">?</span><span style="color:#839496;"> { _type: </span><span style="color:#2AA198;">&#39;change&#39;</span><span style="color:#839496;">, _value: </span><span style="color:#268BD2;">afterVal</span><span style="color:#839496;"> }</span></span>
<span class="line"><span style="color:#839496;">            </span><span style="color:#859900;">:</span><span style="color:#839496;"> </span><span style="color:#B58900;">undefined</span></span>
<span class="line"><span style="color:#839496;">          </span><span style="color:#859900;">:</span><span style="color:#839496;"> </span><span style="color:#268BD2;">hasBefore</span></span>
<span class="line"><span style="color:#839496;">            </span><span style="color:#859900;">?</span><span style="color:#839496;"> { _type: </span><span style="color:#2AA198;">&#39;delete&#39;</span><span style="color:#839496;">, _value: </span><span style="color:#268BD2;">beforeVal</span><span style="color:#839496;"> }</span></span>
<span class="line"><span style="color:#839496;">            </span><span style="color:#859900;">:</span><span style="color:#839496;"> { _type: </span><span style="color:#2AA198;">&#39;add&#39;</span><span style="color:#839496;">, _value: </span><span style="color:#268BD2;">afterVal</span><span style="color:#839496;"> }</span></span>
<span class="line"><span style="color:#839496;">    }</span></span>
<span class="line"><span style="color:#839496;">  }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#839496;">  </span><span style="color:#859900;">return</span><span style="color:#839496;"> </span><span style="color:#268BD2;">result</span></span>
<span class="line"><span style="color:#839496;">}</span></span></code></pre><pre class="shiki solarized-light vp-code-light"><code><span class="line"><span style="color:#586E75;font-weight:bold;">function</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">getObjDiff</span><span style="color:#657B83;">(before, after) {</span></span>
<span class="line"><span style="color:#657B83;">  </span><span style="color:#586E75;font-weight:bold;">const</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">result</span><span style="color:#657B83;"> </span><span style="color:#859900;">=</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">Array</span><span style="color:#657B83;">.</span><span style="color:#268BD2;">isArray</span><span style="color:#657B83;">(</span><span style="color:#268BD2;">after</span><span style="color:#657B83;">) </span><span style="color:#859900;">?</span><span style="color:#657B83;"> [] </span><span style="color:#859900;">:</span><span style="color:#657B83;"> {}</span></span>
<span class="line"><span style="color:#657B83;">  </span><span style="color:#586E75;font-weight:bold;">const</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">allKeys</span><span style="color:#657B83;"> </span><span style="color:#859900;">=</span><span style="color:#657B83;"> [</span><span style="color:#859900;">...new</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">Set</span><span style="color:#657B83;">([</span><span style="color:#859900;">...</span><span style="color:#268BD2;">Object</span><span style="color:#657B83;">.</span><span style="color:#268BD2;">keys</span><span style="color:#657B83;">(</span><span style="color:#268BD2;">before</span><span style="color:#657B83;">), </span><span style="color:#859900;">...</span><span style="color:#268BD2;">Object</span><span style="color:#657B83;">.</span><span style="color:#268BD2;">keys</span><span style="color:#657B83;">(</span><span style="color:#268BD2;">after</span><span style="color:#657B83;">)])]</span></span>
<span class="line"></span>
<span class="line"><span style="color:#657B83;">  </span><span style="color:#859900;">for</span><span style="color:#657B83;"> (</span><span style="color:#586E75;font-weight:bold;">const</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">key</span><span style="color:#657B83;"> </span><span style="color:#859900;">of</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">allKeys</span><span style="color:#657B83;">) {</span></span>
<span class="line"><span style="color:#657B83;">    </span><span style="color:#586E75;font-weight:bold;">const</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">hasBefore</span><span style="color:#657B83;"> </span><span style="color:#859900;">=</span><span style="color:#657B83;"> </span><span style="color:#859900;">Object</span><span style="color:#657B83;">.prototype.</span><span style="color:#268BD2;">hasOwnProperty</span><span style="color:#657B83;">.</span><span style="color:#268BD2;">call</span><span style="color:#657B83;">(</span><span style="color:#268BD2;">before</span><span style="color:#657B83;">, </span><span style="color:#268BD2;">key</span><span style="color:#657B83;">)</span></span>
<span class="line"><span style="color:#657B83;">    </span><span style="color:#586E75;font-weight:bold;">const</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">hasAfter</span><span style="color:#657B83;"> </span><span style="color:#859900;">=</span><span style="color:#657B83;"> </span><span style="color:#859900;">Object</span><span style="color:#657B83;">.prototype.</span><span style="color:#268BD2;">hasOwnProperty</span><span style="color:#657B83;">.</span><span style="color:#268BD2;">call</span><span style="color:#657B83;">(</span><span style="color:#268BD2;">after</span><span style="color:#657B83;">, </span><span style="color:#268BD2;">key</span><span style="color:#657B83;">)</span></span>
<span class="line"><span style="color:#657B83;">    </span><span style="color:#586E75;font-weight:bold;">const</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">beforeVal</span><span style="color:#657B83;"> </span><span style="color:#859900;">=</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">before</span><span style="color:#657B83;">[</span><span style="color:#268BD2;">key</span><span style="color:#657B83;">]</span></span>
<span class="line"><span style="color:#657B83;">    </span><span style="color:#586E75;font-weight:bold;">const</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">afterVal</span><span style="color:#657B83;"> </span><span style="color:#859900;">=</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">after</span><span style="color:#657B83;">[</span><span style="color:#268BD2;">key</span><span style="color:#657B83;">]</span></span>
<span class="line"></span>
<span class="line"><span style="color:#657B83;">    </span><span style="color:#859900;">if</span><span style="color:#657B83;"> (</span><span style="color:#859900;">typeof</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">beforeVal</span><span style="color:#657B83;"> </span><span style="color:#859900;">===</span><span style="color:#657B83;"> </span><span style="color:#2AA198;">&#39;object&#39;</span><span style="color:#657B83;"> </span><span style="color:#859900;">&amp;&amp;</span><span style="color:#657B83;"> </span><span style="color:#859900;">typeof</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">afterVal</span><span style="color:#657B83;"> </span><span style="color:#859900;">===</span><span style="color:#657B83;"> </span><span style="color:#2AA198;">&#39;object&#39;</span><span style="color:#657B83;"> </span><span style="color:#859900;">&amp;&amp;</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">beforeVal</span><span style="color:#657B83;"> </span><span style="color:#859900;">&amp;&amp;</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">afterVal</span><span style="color:#657B83;">) {</span></span>
<span class="line"><span style="color:#657B83;">      </span><span style="color:#586E75;font-weight:bold;">const</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">subDiff</span><span style="color:#657B83;"> </span><span style="color:#859900;">=</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">getObjDiff</span><span style="color:#657B83;">(</span><span style="color:#268BD2;">beforeVal</span><span style="color:#657B83;">, </span><span style="color:#268BD2;">afterVal</span><span style="color:#657B83;">)</span></span>
<span class="line"><span style="color:#657B83;">      </span><span style="color:#859900;">if</span><span style="color:#657B83;"> (</span><span style="color:#268BD2;">Object</span><span style="color:#657B83;">.</span><span style="color:#268BD2;">keys</span><span style="color:#657B83;">(</span><span style="color:#268BD2;">subDiff</span><span style="color:#657B83;">).length) {</span></span>
<span class="line"><span style="color:#657B83;">        </span><span style="color:#268BD2;">result</span><span style="color:#657B83;">[</span><span style="color:#268BD2;">key</span><span style="color:#657B83;">] </span><span style="color:#859900;">=</span><span style="color:#657B83;"> {</span></span>
<span class="line"><span style="color:#657B83;">          _type: </span><span style="color:#2AA198;">&#39;change&#39;</span><span style="color:#657B83;">,</span></span>
<span class="line"><span style="color:#657B83;">          _value: </span><span style="color:#268BD2;">subDiff</span><span style="color:#657B83;">,</span></span>
<span class="line"><span style="color:#657B83;">        }</span></span>
<span class="line"><span style="color:#657B83;">      }</span></span>
<span class="line"><span style="color:#657B83;">    }</span></span>
<span class="line"><span style="color:#657B83;">    </span><span style="color:#859900;">else</span><span style="color:#657B83;"> {</span></span>
<span class="line"><span style="color:#657B83;">      </span><span style="color:#268BD2;">result</span><span style="color:#657B83;">[</span><span style="color:#268BD2;">key</span><span style="color:#657B83;">]</span></span>
<span class="line"><span style="color:#657B83;">        </span><span style="color:#859900;">=</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">hasBefore</span><span style="color:#657B83;"> </span><span style="color:#859900;">&amp;&amp;</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">hasAfter</span></span>
<span class="line"><span style="color:#657B83;">          </span><span style="color:#859900;">?</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">beforeVal</span><span style="color:#657B83;"> </span><span style="color:#859900;">!==</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">afterVal</span></span>
<span class="line"><span style="color:#657B83;">            </span><span style="color:#859900;">?</span><span style="color:#657B83;"> { _type: </span><span style="color:#2AA198;">&#39;change&#39;</span><span style="color:#657B83;">, _value: </span><span style="color:#268BD2;">afterVal</span><span style="color:#657B83;"> }</span></span>
<span class="line"><span style="color:#657B83;">            </span><span style="color:#859900;">:</span><span style="color:#657B83;"> </span><span style="color:#B58900;">undefined</span></span>
<span class="line"><span style="color:#657B83;">          </span><span style="color:#859900;">:</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">hasBefore</span></span>
<span class="line"><span style="color:#657B83;">            </span><span style="color:#859900;">?</span><span style="color:#657B83;"> { _type: </span><span style="color:#2AA198;">&#39;delete&#39;</span><span style="color:#657B83;">, _value: </span><span style="color:#268BD2;">beforeVal</span><span style="color:#657B83;"> }</span></span>
<span class="line"><span style="color:#657B83;">            </span><span style="color:#859900;">:</span><span style="color:#657B83;"> { _type: </span><span style="color:#2AA198;">&#39;add&#39;</span><span style="color:#657B83;">, _value: </span><span style="color:#268BD2;">afterVal</span><span style="color:#657B83;"> }</span></span>
<span class="line"><span style="color:#657B83;">    }</span></span>
<span class="line"><span style="color:#657B83;">  }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#657B83;">  </span><span style="color:#859900;">return</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">result</span></span>
<span class="line"><span style="color:#657B83;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br></div></div><h2 id="实现-lodash-get-set-方法" tabindex="-1">实现 lodash get set 方法 <a class="header-anchor" href="#实现-lodash-get-set-方法" aria-label="Permalink to &quot;实现 lodash get set 方法&quot;">​</a></h2><div class="language-js vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki solarized-dark vp-code-dark"><code><span class="line"><span style="color:#93A1A1;font-weight:bold;">function</span><span style="color:#839496;"> </span><span style="color:#268BD2;">_get</span><span style="color:#839496;">(obj, path, defaultVal) {</span></span>
<span class="line"><span style="color:#839496;">  </span><span style="color:#586E75;font-style:italic;">// 统一输入格式 string =&gt; array &#39;a[0].b&#39; =&gt; [a, 0, b]</span></span>
<span class="line"><span style="color:#839496;">  </span><span style="color:#93A1A1;font-weight:bold;">const</span><span style="color:#839496;"> </span><span style="color:#268BD2;">newPath</span><span style="color:#839496;"> </span><span style="color:#859900;">=</span><span style="color:#839496;"> </span><span style="color:#268BD2;">Array</span><span style="color:#839496;">.</span><span style="color:#268BD2;">isArray</span><span style="color:#839496;">(</span><span style="color:#268BD2;">path</span><span style="color:#839496;">) </span><span style="color:#859900;">?</span><span style="color:#839496;"> </span><span style="color:#268BD2;">path</span><span style="color:#839496;"> </span><span style="color:#859900;">:</span><span style="color:#839496;"> </span><span style="color:#268BD2;">path</span><span style="color:#839496;">.</span><span style="color:#268BD2;">match</span><span style="color:#839496;">(</span><span style="color:#DC322F;">/</span><span style="color:#CB4B16;">[</span><span style="color:#859900;">^</span><span style="color:#CB4B16;">\\[\\].]</span><span style="color:#859900;">+</span><span style="color:#DC322F;">/</span><span style="color:#859900;">g</span><span style="color:#839496;">)</span></span>
<span class="line"><span style="color:#839496;">  </span><span style="color:#859900;">return</span><span style="color:#839496;"> (</span></span>
<span class="line"><span style="color:#839496;">    </span><span style="color:#268BD2;">newPath</span><span style="color:#839496;">.</span><span style="color:#268BD2;">reduce</span><span style="color:#839496;">((rlt, cur) </span><span style="color:#93A1A1;font-weight:bold;">=&gt;</span><span style="color:#839496;"> {</span></span>
<span class="line"><span style="color:#839496;">      </span><span style="color:#859900;">return</span><span style="color:#839496;"> (</span><span style="color:#268BD2;">rlt</span><span style="color:#839496;"> </span><span style="color:#859900;">||</span><span style="color:#839496;"> {})[</span><span style="color:#268BD2;">cur</span><span style="color:#839496;">]</span></span>
<span class="line"><span style="color:#839496;">    }, </span><span style="color:#268BD2;">obj</span><span style="color:#839496;">) </span><span style="color:#859900;">??</span><span style="color:#839496;"> defaultVal</span></span>
<span class="line"><span style="color:#839496;">  )</span></span>
<span class="line"><span style="color:#839496;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#93A1A1;font-weight:bold;">function</span><span style="color:#839496;"> </span><span style="color:#268BD2;">_set</span><span style="color:#839496;">(obj, path, val) {</span></span>
<span class="line"><span style="color:#839496;">  </span><span style="color:#93A1A1;font-weight:bold;">const</span><span style="color:#839496;"> </span><span style="color:#268BD2;">newPath</span><span style="color:#839496;"> </span><span style="color:#859900;">=</span><span style="color:#839496;"> </span><span style="color:#268BD2;">Array</span><span style="color:#839496;">.</span><span style="color:#268BD2;">isArray</span><span style="color:#839496;">(</span><span style="color:#268BD2;">path</span><span style="color:#839496;">) </span><span style="color:#859900;">?</span><span style="color:#839496;"> </span><span style="color:#268BD2;">path</span><span style="color:#839496;"> </span><span style="color:#859900;">:</span><span style="color:#839496;"> </span><span style="color:#268BD2;">path</span><span style="color:#839496;">.</span><span style="color:#268BD2;">match</span><span style="color:#839496;">(</span><span style="color:#DC322F;">/</span><span style="color:#CB4B16;">[</span><span style="color:#859900;">^</span><span style="color:#CB4B16;">\\[\\].]</span><span style="color:#859900;">+</span><span style="color:#DC322F;">/</span><span style="color:#859900;">g</span><span style="color:#839496;">)</span></span>
<span class="line"><span style="color:#839496;">  </span><span style="color:#268BD2;">newPath</span><span style="color:#839496;">.</span><span style="color:#268BD2;">reduce</span><span style="color:#839496;">((rlt, cur, index, arr) </span><span style="color:#93A1A1;font-weight:bold;">=&gt;</span><span style="color:#839496;"> {</span></span>
<span class="line"><span style="color:#839496;">    </span><span style="color:#859900;">if</span><span style="color:#839496;"> (</span><span style="color:#268BD2;">index</span><span style="color:#839496;"> </span><span style="color:#859900;">===</span><span style="color:#839496;"> </span><span style="color:#268BD2;">arr</span><span style="color:#839496;">.length </span><span style="color:#859900;">-</span><span style="color:#839496;"> </span><span style="color:#D33682;">1</span><span style="color:#839496;">) {</span></span>
<span class="line"><span style="color:#839496;">      </span><span style="color:#268BD2;">rlt</span><span style="color:#839496;">[</span><span style="color:#268BD2;">cur</span><span style="color:#839496;">] </span><span style="color:#859900;">=</span><span style="color:#839496;"> </span><span style="color:#268BD2;">val</span></span>
<span class="line"><span style="color:#839496;">    }</span></span>
<span class="line"><span style="color:#839496;">    </span><span style="color:#859900;">else</span><span style="color:#839496;"> </span><span style="color:#859900;">if</span><span style="color:#839496;"> (</span><span style="color:#268BD2;">cur</span><span style="color:#839496;"> </span><span style="color:#859900;">in</span><span style="color:#839496;"> </span><span style="color:#268BD2;">rlt</span><span style="color:#839496;">) {</span></span>
<span class="line"><span style="color:#839496;">      </span><span style="color:#859900;">return</span><span style="color:#839496;"> </span><span style="color:#268BD2;">rlt</span><span style="color:#839496;">[</span><span style="color:#268BD2;">cur</span><span style="color:#839496;">]</span></span>
<span class="line"><span style="color:#839496;">    }</span></span>
<span class="line"><span style="color:#839496;">    </span><span style="color:#859900;">else</span><span style="color:#839496;"> {</span></span>
<span class="line"><span style="color:#839496;">      </span><span style="color:#268BD2;">rlt</span><span style="color:#839496;">[</span><span style="color:#268BD2;">cur</span><span style="color:#839496;">] </span><span style="color:#859900;">=</span><span style="color:#DC322F;"> /</span><span style="color:#859900;">^</span><span style="color:#CB4B16;">[0-9]</span><span style="color:#859900;">{1,}$</span><span style="color:#DC322F;">/</span><span style="color:#839496;">.</span><span style="color:#268BD2;">test</span><span style="color:#839496;">(</span><span style="color:#268BD2;">arr</span><span style="color:#839496;">[</span><span style="color:#268BD2;">index</span><span style="color:#839496;"> </span><span style="color:#859900;">+</span><span style="color:#839496;"> </span><span style="color:#D33682;">1</span><span style="color:#839496;">]) </span><span style="color:#859900;">?</span><span style="color:#839496;"> [] </span><span style="color:#859900;">:</span><span style="color:#839496;"> {}</span></span>
<span class="line"><span style="color:#839496;">      </span><span style="color:#859900;">return</span><span style="color:#839496;"> </span><span style="color:#268BD2;">rlt</span><span style="color:#839496;">[</span><span style="color:#268BD2;">cur</span><span style="color:#839496;">]</span></span>
<span class="line"><span style="color:#839496;">    }</span></span>
<span class="line"><span style="color:#839496;">    </span><span style="color:#859900;">return</span><span style="color:#839496;"> </span><span style="color:#268BD2;">rlt</span></span>
<span class="line"><span style="color:#839496;">  }, </span><span style="color:#268BD2;">obj</span><span style="color:#839496;">)</span></span>
<span class="line"><span style="color:#839496;">  </span><span style="color:#859900;">return</span><span style="color:#839496;"> </span><span style="color:#268BD2;">obj</span></span>
<span class="line"><span style="color:#839496;">}</span></span></code></pre><pre class="shiki solarized-light vp-code-light"><code><span class="line"><span style="color:#586E75;font-weight:bold;">function</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">_get</span><span style="color:#657B83;">(obj, path, defaultVal) {</span></span>
<span class="line"><span style="color:#657B83;">  </span><span style="color:#93A1A1;font-style:italic;">// 统一输入格式 string =&gt; array &#39;a[0].b&#39; =&gt; [a, 0, b]</span></span>
<span class="line"><span style="color:#657B83;">  </span><span style="color:#586E75;font-weight:bold;">const</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">newPath</span><span style="color:#657B83;"> </span><span style="color:#859900;">=</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">Array</span><span style="color:#657B83;">.</span><span style="color:#268BD2;">isArray</span><span style="color:#657B83;">(</span><span style="color:#268BD2;">path</span><span style="color:#657B83;">) </span><span style="color:#859900;">?</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">path</span><span style="color:#657B83;"> </span><span style="color:#859900;">:</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">path</span><span style="color:#657B83;">.</span><span style="color:#268BD2;">match</span><span style="color:#657B83;">(</span><span style="color:#DC322F;">/</span><span style="color:#CB4B16;">[</span><span style="color:#859900;">^</span><span style="color:#CB4B16;">\\[\\].]</span><span style="color:#859900;">+</span><span style="color:#DC322F;">/</span><span style="color:#859900;">g</span><span style="color:#657B83;">)</span></span>
<span class="line"><span style="color:#657B83;">  </span><span style="color:#859900;">return</span><span style="color:#657B83;"> (</span></span>
<span class="line"><span style="color:#657B83;">    </span><span style="color:#268BD2;">newPath</span><span style="color:#657B83;">.</span><span style="color:#268BD2;">reduce</span><span style="color:#657B83;">((rlt, cur) </span><span style="color:#586E75;font-weight:bold;">=&gt;</span><span style="color:#657B83;"> {</span></span>
<span class="line"><span style="color:#657B83;">      </span><span style="color:#859900;">return</span><span style="color:#657B83;"> (</span><span style="color:#268BD2;">rlt</span><span style="color:#657B83;"> </span><span style="color:#859900;">||</span><span style="color:#657B83;"> {})[</span><span style="color:#268BD2;">cur</span><span style="color:#657B83;">]</span></span>
<span class="line"><span style="color:#657B83;">    }, </span><span style="color:#268BD2;">obj</span><span style="color:#657B83;">) </span><span style="color:#859900;">??</span><span style="color:#657B83;"> defaultVal</span></span>
<span class="line"><span style="color:#657B83;">  )</span></span>
<span class="line"><span style="color:#657B83;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#586E75;font-weight:bold;">function</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">_set</span><span style="color:#657B83;">(obj, path, val) {</span></span>
<span class="line"><span style="color:#657B83;">  </span><span style="color:#586E75;font-weight:bold;">const</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">newPath</span><span style="color:#657B83;"> </span><span style="color:#859900;">=</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">Array</span><span style="color:#657B83;">.</span><span style="color:#268BD2;">isArray</span><span style="color:#657B83;">(</span><span style="color:#268BD2;">path</span><span style="color:#657B83;">) </span><span style="color:#859900;">?</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">path</span><span style="color:#657B83;"> </span><span style="color:#859900;">:</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">path</span><span style="color:#657B83;">.</span><span style="color:#268BD2;">match</span><span style="color:#657B83;">(</span><span style="color:#DC322F;">/</span><span style="color:#CB4B16;">[</span><span style="color:#859900;">^</span><span style="color:#CB4B16;">\\[\\].]</span><span style="color:#859900;">+</span><span style="color:#DC322F;">/</span><span style="color:#859900;">g</span><span style="color:#657B83;">)</span></span>
<span class="line"><span style="color:#657B83;">  </span><span style="color:#268BD2;">newPath</span><span style="color:#657B83;">.</span><span style="color:#268BD2;">reduce</span><span style="color:#657B83;">((rlt, cur, index, arr) </span><span style="color:#586E75;font-weight:bold;">=&gt;</span><span style="color:#657B83;"> {</span></span>
<span class="line"><span style="color:#657B83;">    </span><span style="color:#859900;">if</span><span style="color:#657B83;"> (</span><span style="color:#268BD2;">index</span><span style="color:#657B83;"> </span><span style="color:#859900;">===</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">arr</span><span style="color:#657B83;">.length </span><span style="color:#859900;">-</span><span style="color:#657B83;"> </span><span style="color:#D33682;">1</span><span style="color:#657B83;">) {</span></span>
<span class="line"><span style="color:#657B83;">      </span><span style="color:#268BD2;">rlt</span><span style="color:#657B83;">[</span><span style="color:#268BD2;">cur</span><span style="color:#657B83;">] </span><span style="color:#859900;">=</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">val</span></span>
<span class="line"><span style="color:#657B83;">    }</span></span>
<span class="line"><span style="color:#657B83;">    </span><span style="color:#859900;">else</span><span style="color:#657B83;"> </span><span style="color:#859900;">if</span><span style="color:#657B83;"> (</span><span style="color:#268BD2;">cur</span><span style="color:#657B83;"> </span><span style="color:#859900;">in</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">rlt</span><span style="color:#657B83;">) {</span></span>
<span class="line"><span style="color:#657B83;">      </span><span style="color:#859900;">return</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">rlt</span><span style="color:#657B83;">[</span><span style="color:#268BD2;">cur</span><span style="color:#657B83;">]</span></span>
<span class="line"><span style="color:#657B83;">    }</span></span>
<span class="line"><span style="color:#657B83;">    </span><span style="color:#859900;">else</span><span style="color:#657B83;"> {</span></span>
<span class="line"><span style="color:#657B83;">      </span><span style="color:#268BD2;">rlt</span><span style="color:#657B83;">[</span><span style="color:#268BD2;">cur</span><span style="color:#657B83;">] </span><span style="color:#859900;">=</span><span style="color:#DC322F;"> /</span><span style="color:#859900;">^</span><span style="color:#CB4B16;">[0-9]</span><span style="color:#859900;">{1,}$</span><span style="color:#DC322F;">/</span><span style="color:#657B83;">.</span><span style="color:#268BD2;">test</span><span style="color:#657B83;">(</span><span style="color:#268BD2;">arr</span><span style="color:#657B83;">[</span><span style="color:#268BD2;">index</span><span style="color:#657B83;"> </span><span style="color:#859900;">+</span><span style="color:#657B83;"> </span><span style="color:#D33682;">1</span><span style="color:#657B83;">]) </span><span style="color:#859900;">?</span><span style="color:#657B83;"> [] </span><span style="color:#859900;">:</span><span style="color:#657B83;"> {}</span></span>
<span class="line"><span style="color:#657B83;">      </span><span style="color:#859900;">return</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">rlt</span><span style="color:#657B83;">[</span><span style="color:#268BD2;">cur</span><span style="color:#657B83;">]</span></span>
<span class="line"><span style="color:#657B83;">    }</span></span>
<span class="line"><span style="color:#657B83;">    </span><span style="color:#859900;">return</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">rlt</span></span>
<span class="line"><span style="color:#657B83;">  }, </span><span style="color:#268BD2;">obj</span><span style="color:#657B83;">)</span></span>
<span class="line"><span style="color:#657B83;">  </span><span style="color:#859900;">return</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">obj</span></span>
<span class="line"><span style="color:#657B83;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br></div></div><h2 id="将列表转为树形结构" tabindex="-1">将列表转为树形结构 <a class="header-anchor" href="#将列表转为树形结构" aria-label="Permalink to &quot;将列表转为树形结构&quot;">​</a></h2><div class="language-js vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki solarized-dark vp-code-dark"><code><span class="line"><span style="color:#93A1A1;font-weight:bold;">function</span><span style="color:#839496;"> </span><span style="color:#268BD2;">listToTree</span><span style="color:#839496;">(list, root </span><span style="color:#859900;">=</span><span style="color:#839496;"> </span><span style="color:#D33682;">0</span><span style="color:#839496;">, key </span><span style="color:#859900;">=</span><span style="color:#839496;"> </span><span style="color:#2AA198;">&#39;id&#39;</span><span style="color:#839496;">, pKey </span><span style="color:#859900;">=</span><span style="color:#839496;"> </span><span style="color:#2AA198;">&#39;pId&#39;</span><span style="color:#839496;">) {</span></span>
<span class="line"><span style="color:#839496;">  </span><span style="color:#586E75;font-style:italic;">// 如果是乱序需要先排序</span></span>
<span class="line"><span style="color:#839496;">  </span><span style="color:#586E75;font-style:italic;">// list.sort((a, b) =&gt; a[key] - b[key])</span></span>
<span class="line"><span style="color:#839496;">  </span><span style="color:#93A1A1;font-weight:bold;">const</span><span style="color:#839496;"> </span><span style="color:#268BD2;">parent</span><span style="color:#839496;"> </span><span style="color:#859900;">=</span><span style="color:#839496;"> {}</span></span>
<span class="line"><span style="color:#839496;">  </span><span style="color:#93A1A1;font-weight:bold;">const</span><span style="color:#839496;"> </span><span style="color:#268BD2;">result</span><span style="color:#839496;"> </span><span style="color:#859900;">=</span><span style="color:#839496;"> []</span></span>
<span class="line"></span>
<span class="line"><span style="color:#839496;">  </span><span style="color:#859900;">for</span><span style="color:#839496;"> (</span><span style="color:#93A1A1;font-weight:bold;">const</span><span style="color:#839496;"> </span><span style="color:#268BD2;">item</span><span style="color:#839496;"> </span><span style="color:#859900;">of</span><span style="color:#839496;"> </span><span style="color:#268BD2;">list</span><span style="color:#839496;">) {</span></span>
<span class="line"><span style="color:#839496;">    </span><span style="color:#586E75;font-style:italic;">// 这里拿到需要的数据然后做处理</span></span>
<span class="line"><span style="color:#839496;">    </span><span style="color:#93A1A1;font-weight:bold;">const</span><span style="color:#839496;"> { [</span><span style="color:#268BD2;">key</span><span style="color:#839496;">]: </span><span style="color:#268BD2;">id</span><span style="color:#839496;">, [</span><span style="color:#268BD2;">pKey</span><span style="color:#839496;">]: </span><span style="color:#268BD2;">pId</span><span style="color:#839496;"> } </span><span style="color:#859900;">=</span><span style="color:#839496;"> </span><span style="color:#268BD2;">item</span></span>
<span class="line"><span style="color:#839496;">    </span><span style="color:#93A1A1;font-weight:bold;">const</span><span style="color:#839496;"> </span><span style="color:#268BD2;">copy</span><span style="color:#839496;"> </span><span style="color:#859900;">=</span><span style="color:#839496;"> { </span><span style="color:#268BD2;">id</span><span style="color:#839496;">, </span><span style="color:#268BD2;">pId</span><span style="color:#839496;"> }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#839496;">    </span><span style="color:#859900;">if</span><span style="color:#839496;"> (</span><span style="color:#268BD2;">parent</span><span style="color:#839496;">[</span><span style="color:#268BD2;">pId</span><span style="color:#839496;">]) {</span></span>
<span class="line"><span style="color:#839496;">      </span><span style="color:#586E75;font-style:italic;">// (parent[pId].children ||= []).push(copy);</span></span>
<span class="line"><span style="color:#839496;">      (</span><span style="color:#268BD2;">parent</span><span style="color:#839496;">[</span><span style="color:#268BD2;">pId</span><span style="color:#839496;">].</span><span style="color:#268BD2;">children</span><span style="color:#839496;"> </span><span style="color:#859900;">||</span><span style="color:#839496;"> (</span><span style="color:#268BD2;">parent</span><span style="color:#839496;">[</span><span style="color:#268BD2;">pId</span><span style="color:#839496;">].</span><span style="color:#268BD2;">children</span><span style="color:#839496;"> </span><span style="color:#859900;">=</span><span style="color:#839496;"> [])).</span><span style="color:#268BD2;">push</span><span style="color:#839496;">(</span><span style="color:#268BD2;">copy</span><span style="color:#839496;">)</span></span>
<span class="line"><span style="color:#839496;">    }</span></span>
<span class="line"><span style="color:#839496;">    </span><span style="color:#268BD2;">parent</span><span style="color:#839496;">[</span><span style="color:#268BD2;">id</span><span style="color:#839496;">] </span><span style="color:#859900;">=</span><span style="color:#839496;"> </span><span style="color:#268BD2;">copy</span></span>
<span class="line"></span>
<span class="line"><span style="color:#839496;">    </span><span style="color:#859900;">if</span><span style="color:#839496;"> (</span><span style="color:#268BD2;">pId</span><span style="color:#839496;"> </span><span style="color:#859900;">===</span><span style="color:#839496;"> </span><span style="color:#268BD2;">root</span><span style="color:#839496;">)</span></span>
<span class="line"><span style="color:#839496;">      </span><span style="color:#268BD2;">result</span><span style="color:#839496;">.</span><span style="color:#268BD2;">push</span><span style="color:#839496;">(</span><span style="color:#268BD2;">copy</span><span style="color:#839496;">)</span></span>
<span class="line"><span style="color:#839496;">  }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#839496;">  </span><span style="color:#859900;">return</span><span style="color:#839496;"> </span><span style="color:#268BD2;">result</span></span>
<span class="line"><span style="color:#839496;">}</span></span></code></pre><pre class="shiki solarized-light vp-code-light"><code><span class="line"><span style="color:#586E75;font-weight:bold;">function</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">listToTree</span><span style="color:#657B83;">(list, root </span><span style="color:#859900;">=</span><span style="color:#657B83;"> </span><span style="color:#D33682;">0</span><span style="color:#657B83;">, key </span><span style="color:#859900;">=</span><span style="color:#657B83;"> </span><span style="color:#2AA198;">&#39;id&#39;</span><span style="color:#657B83;">, pKey </span><span style="color:#859900;">=</span><span style="color:#657B83;"> </span><span style="color:#2AA198;">&#39;pId&#39;</span><span style="color:#657B83;">) {</span></span>
<span class="line"><span style="color:#657B83;">  </span><span style="color:#93A1A1;font-style:italic;">// 如果是乱序需要先排序</span></span>
<span class="line"><span style="color:#657B83;">  </span><span style="color:#93A1A1;font-style:italic;">// list.sort((a, b) =&gt; a[key] - b[key])</span></span>
<span class="line"><span style="color:#657B83;">  </span><span style="color:#586E75;font-weight:bold;">const</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">parent</span><span style="color:#657B83;"> </span><span style="color:#859900;">=</span><span style="color:#657B83;"> {}</span></span>
<span class="line"><span style="color:#657B83;">  </span><span style="color:#586E75;font-weight:bold;">const</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">result</span><span style="color:#657B83;"> </span><span style="color:#859900;">=</span><span style="color:#657B83;"> []</span></span>
<span class="line"></span>
<span class="line"><span style="color:#657B83;">  </span><span style="color:#859900;">for</span><span style="color:#657B83;"> (</span><span style="color:#586E75;font-weight:bold;">const</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">item</span><span style="color:#657B83;"> </span><span style="color:#859900;">of</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">list</span><span style="color:#657B83;">) {</span></span>
<span class="line"><span style="color:#657B83;">    </span><span style="color:#93A1A1;font-style:italic;">// 这里拿到需要的数据然后做处理</span></span>
<span class="line"><span style="color:#657B83;">    </span><span style="color:#586E75;font-weight:bold;">const</span><span style="color:#657B83;"> { [</span><span style="color:#268BD2;">key</span><span style="color:#657B83;">]: </span><span style="color:#268BD2;">id</span><span style="color:#657B83;">, [</span><span style="color:#268BD2;">pKey</span><span style="color:#657B83;">]: </span><span style="color:#268BD2;">pId</span><span style="color:#657B83;"> } </span><span style="color:#859900;">=</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">item</span></span>
<span class="line"><span style="color:#657B83;">    </span><span style="color:#586E75;font-weight:bold;">const</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">copy</span><span style="color:#657B83;"> </span><span style="color:#859900;">=</span><span style="color:#657B83;"> { </span><span style="color:#268BD2;">id</span><span style="color:#657B83;">, </span><span style="color:#268BD2;">pId</span><span style="color:#657B83;"> }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#657B83;">    </span><span style="color:#859900;">if</span><span style="color:#657B83;"> (</span><span style="color:#268BD2;">parent</span><span style="color:#657B83;">[</span><span style="color:#268BD2;">pId</span><span style="color:#657B83;">]) {</span></span>
<span class="line"><span style="color:#657B83;">      </span><span style="color:#93A1A1;font-style:italic;">// (parent[pId].children ||= []).push(copy);</span></span>
<span class="line"><span style="color:#657B83;">      (</span><span style="color:#268BD2;">parent</span><span style="color:#657B83;">[</span><span style="color:#268BD2;">pId</span><span style="color:#657B83;">].</span><span style="color:#268BD2;">children</span><span style="color:#657B83;"> </span><span style="color:#859900;">||</span><span style="color:#657B83;"> (</span><span style="color:#268BD2;">parent</span><span style="color:#657B83;">[</span><span style="color:#268BD2;">pId</span><span style="color:#657B83;">].</span><span style="color:#268BD2;">children</span><span style="color:#657B83;"> </span><span style="color:#859900;">=</span><span style="color:#657B83;"> [])).</span><span style="color:#268BD2;">push</span><span style="color:#657B83;">(</span><span style="color:#268BD2;">copy</span><span style="color:#657B83;">)</span></span>
<span class="line"><span style="color:#657B83;">    }</span></span>
<span class="line"><span style="color:#657B83;">    </span><span style="color:#268BD2;">parent</span><span style="color:#657B83;">[</span><span style="color:#268BD2;">id</span><span style="color:#657B83;">] </span><span style="color:#859900;">=</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">copy</span></span>
<span class="line"></span>
<span class="line"><span style="color:#657B83;">    </span><span style="color:#859900;">if</span><span style="color:#657B83;"> (</span><span style="color:#268BD2;">pId</span><span style="color:#657B83;"> </span><span style="color:#859900;">===</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">root</span><span style="color:#657B83;">)</span></span>
<span class="line"><span style="color:#657B83;">      </span><span style="color:#268BD2;">result</span><span style="color:#657B83;">.</span><span style="color:#268BD2;">push</span><span style="color:#657B83;">(</span><span style="color:#268BD2;">copy</span><span style="color:#657B83;">)</span></span>
<span class="line"><span style="color:#657B83;">  }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#657B83;">  </span><span style="color:#859900;">return</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">result</span></span>
<span class="line"><span style="color:#657B83;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br></div></div><h2 id="call、apply、bind" tabindex="-1">call、apply、bind <a class="header-anchor" href="#call、apply、bind" aria-label="Permalink to &quot;call、apply、bind&quot;">​</a></h2><div class="language-js vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki solarized-dark vp-code-dark"><code><span class="line"><span style="color:#859900;">Function</span><span style="color:#839496;">.prototype.</span><span style="color:#268BD2;">cCall</span><span style="color:#839496;"> </span><span style="color:#859900;">=</span><span style="color:#839496;"> </span><span style="color:#93A1A1;font-weight:bold;">function</span><span style="color:#839496;"> (context, </span><span style="color:#859900;">...</span><span style="color:#839496;">args) {</span></span>
<span class="line"><span style="color:#839496;">  </span><span style="color:#859900;">if</span><span style="color:#839496;"> (</span><span style="color:#859900;">typeof</span><span style="color:#839496;"> </span><span style="color:#268BD2;">this</span><span style="color:#839496;"> </span><span style="color:#859900;">!==</span><span style="color:#839496;"> </span><span style="color:#2AA198;">&#39;function&#39;</span><span style="color:#839496;">)</span></span>
<span class="line"><span style="color:#839496;">    </span><span style="color:#859900;">throw</span><span style="color:#839496;"> </span><span style="color:#859900;">new</span><span style="color:#839496;"> </span><span style="color:#268BD2;">TypeError</span><span style="color:#839496;">(</span><span style="color:#2AA198;">&#39;error&#39;</span><span style="color:#839496;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#839496;">  </span><span style="color:#268BD2;">context</span><span style="color:#839496;"> </span><span style="color:#859900;">=</span><span style="color:#839496;"> </span><span style="color:#268BD2;">context</span><span style="color:#839496;"> </span><span style="color:#859900;">||</span><span style="color:#839496;"> </span><span style="color:#268BD2;">window</span></span>
<span class="line"><span style="color:#839496;">  </span><span style="color:#93A1A1;font-weight:bold;">const</span><span style="color:#839496;"> </span><span style="color:#268BD2;">fn</span><span style="color:#839496;"> </span><span style="color:#859900;">=</span><span style="color:#839496;"> </span><span style="color:#268BD2;">Symbol</span><span style="color:#839496;">(</span><span style="color:#2AA198;">&#39;fn&#39;</span><span style="color:#839496;">)</span></span>
<span class="line"><span style="color:#839496;">  </span><span style="color:#268BD2;">context</span><span style="color:#839496;">[</span><span style="color:#268BD2;">fn</span><span style="color:#839496;">] </span><span style="color:#859900;">=</span><span style="color:#839496;"> </span><span style="color:#268BD2;">this</span></span>
<span class="line"><span style="color:#839496;">  </span><span style="color:#93A1A1;font-weight:bold;">const</span><span style="color:#839496;"> </span><span style="color:#268BD2;">res</span><span style="color:#839496;"> </span><span style="color:#859900;">=</span><span style="color:#839496;"> </span><span style="color:#268BD2;">context</span><span style="color:#839496;">[</span><span style="color:#268BD2;">fn</span><span style="color:#839496;">](</span><span style="color:#859900;">...</span><span style="color:#268BD2;">args</span><span style="color:#839496;">)</span></span>
<span class="line"><span style="color:#839496;">  </span><span style="color:#859900;">delete</span><span style="color:#839496;"> </span><span style="color:#268BD2;">context</span><span style="color:#839496;">[</span><span style="color:#268BD2;">fn</span><span style="color:#839496;">]</span></span>
<span class="line"></span>
<span class="line"><span style="color:#839496;">  </span><span style="color:#859900;">return</span><span style="color:#839496;"> </span><span style="color:#268BD2;">res</span></span>
<span class="line"><span style="color:#839496;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#859900;">Function</span><span style="color:#839496;">.prototype.</span><span style="color:#268BD2;">cApply</span><span style="color:#839496;"> </span><span style="color:#859900;">=</span><span style="color:#839496;"> </span><span style="color:#93A1A1;font-weight:bold;">function</span><span style="color:#839496;"> (context, args) {</span></span>
<span class="line"><span style="color:#839496;">  </span><span style="color:#859900;">if</span><span style="color:#839496;"> (</span><span style="color:#859900;">typeof</span><span style="color:#839496;"> </span><span style="color:#268BD2;">this</span><span style="color:#839496;"> </span><span style="color:#859900;">!==</span><span style="color:#839496;"> </span><span style="color:#2AA198;">&#39;function&#39;</span><span style="color:#839496;">)</span></span>
<span class="line"><span style="color:#839496;">    </span><span style="color:#859900;">throw</span><span style="color:#839496;"> </span><span style="color:#859900;">new</span><span style="color:#839496;"> </span><span style="color:#268BD2;">TypeError</span><span style="color:#839496;">(</span><span style="color:#2AA198;">&#39;error&#39;</span><span style="color:#839496;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#839496;">  </span><span style="color:#268BD2;">context</span><span style="color:#839496;"> </span><span style="color:#859900;">=</span><span style="color:#839496;"> </span><span style="color:#268BD2;">context</span><span style="color:#839496;"> </span><span style="color:#859900;">||</span><span style="color:#839496;"> </span><span style="color:#268BD2;">window</span></span>
<span class="line"><span style="color:#839496;">  </span><span style="color:#93A1A1;font-weight:bold;">const</span><span style="color:#839496;"> </span><span style="color:#268BD2;">fn</span><span style="color:#839496;"> </span><span style="color:#859900;">=</span><span style="color:#839496;"> </span><span style="color:#268BD2;">Symbol</span><span style="color:#839496;">(</span><span style="color:#2AA198;">&#39;fn&#39;</span><span style="color:#839496;">)</span></span>
<span class="line"><span style="color:#839496;">  </span><span style="color:#268BD2;">context</span><span style="color:#839496;">[</span><span style="color:#268BD2;">fn</span><span style="color:#839496;">] </span><span style="color:#859900;">=</span><span style="color:#839496;"> </span><span style="color:#268BD2;">this</span></span>
<span class="line"><span style="color:#839496;">  </span><span style="color:#93A1A1;font-weight:bold;">const</span><span style="color:#839496;"> </span><span style="color:#268BD2;">res</span><span style="color:#839496;"> </span><span style="color:#859900;">=</span><span style="color:#839496;"> </span><span style="color:#268BD2;">context</span><span style="color:#839496;">[</span><span style="color:#268BD2;">fn</span><span style="color:#839496;">](</span><span style="color:#859900;">...</span><span style="color:#268BD2;">args</span><span style="color:#839496;">)</span></span>
<span class="line"><span style="color:#839496;">  </span><span style="color:#859900;">delete</span><span style="color:#839496;"> </span><span style="color:#268BD2;">context</span><span style="color:#839496;">[</span><span style="color:#268BD2;">fn</span><span style="color:#839496;">]</span></span>
<span class="line"></span>
<span class="line"><span style="color:#839496;">  </span><span style="color:#859900;">return</span><span style="color:#839496;"> </span><span style="color:#268BD2;">res</span></span>
<span class="line"><span style="color:#839496;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#859900;">Function</span><span style="color:#839496;">.prototype.</span><span style="color:#268BD2;">cBind</span><span style="color:#839496;"> </span><span style="color:#859900;">=</span><span style="color:#839496;"> </span><span style="color:#93A1A1;font-weight:bold;">function</span><span style="color:#839496;"> (context, </span><span style="color:#859900;">...</span><span style="color:#839496;">args) {</span></span>
<span class="line"><span style="color:#839496;">  </span><span style="color:#586E75;font-style:italic;">// eslint-disable-next-line @typescript-eslint/no-this-alias</span></span>
<span class="line"><span style="color:#839496;">  </span><span style="color:#93A1A1;font-weight:bold;">const</span><span style="color:#839496;"> </span><span style="color:#268BD2;">Fn</span><span style="color:#839496;"> </span><span style="color:#859900;">=</span><span style="color:#839496;"> </span><span style="color:#268BD2;">this</span></span>
<span class="line"></span>
<span class="line"><span style="color:#839496;">  </span><span style="color:#859900;">return</span><span style="color:#839496;"> </span><span style="color:#93A1A1;font-weight:bold;">function</span><span style="color:#839496;"> </span><span style="color:#268BD2;">newFn</span><span style="color:#839496;">() {</span></span>
<span class="line"><span style="color:#839496;">    </span><span style="color:#586E75;font-style:italic;">// eslint-disable-next-line @typescript-eslint/no-invalid-this</span></span>
<span class="line"><span style="color:#839496;">    </span><span style="color:#859900;">if</span><span style="color:#839496;"> (</span><span style="color:#268BD2;">this</span><span style="color:#839496;"> </span><span style="color:#859900;">instanceof</span><span style="color:#839496;"> </span><span style="color:#CB4B16;">newFn</span><span style="color:#839496;">)</span></span>
<span class="line"><span style="color:#839496;">      </span><span style="color:#859900;">return</span><span style="color:#839496;"> </span><span style="color:#859900;">new</span><span style="color:#839496;"> </span><span style="color:#268BD2;">Fn</span><span style="color:#839496;">(</span><span style="color:#859900;">...</span><span style="color:#268BD2;">args</span><span style="color:#839496;">, </span><span style="color:#859900;">...</span><span style="color:#268BD2;">rest</span><span style="color:#839496;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#839496;">    </span><span style="color:#859900;">return</span><span style="color:#839496;"> </span><span style="color:#268BD2;">Fn</span><span style="color:#839496;">.</span><span style="color:#268BD2;">call</span><span style="color:#839496;">(</span><span style="color:#268BD2;">context</span><span style="color:#839496;">, </span><span style="color:#859900;">...</span><span style="color:#268BD2;">args</span><span style="color:#839496;">, </span><span style="color:#859900;">...</span><span style="color:#268BD2;">rest</span><span style="color:#839496;">)</span></span>
<span class="line"><span style="color:#839496;">  }</span></span>
<span class="line"><span style="color:#839496;">}</span></span></code></pre><pre class="shiki solarized-light vp-code-light"><code><span class="line"><span style="color:#859900;">Function</span><span style="color:#657B83;">.prototype.</span><span style="color:#268BD2;">cCall</span><span style="color:#657B83;"> </span><span style="color:#859900;">=</span><span style="color:#657B83;"> </span><span style="color:#586E75;font-weight:bold;">function</span><span style="color:#657B83;"> (context, </span><span style="color:#859900;">...</span><span style="color:#657B83;">args) {</span></span>
<span class="line"><span style="color:#657B83;">  </span><span style="color:#859900;">if</span><span style="color:#657B83;"> (</span><span style="color:#859900;">typeof</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">this</span><span style="color:#657B83;"> </span><span style="color:#859900;">!==</span><span style="color:#657B83;"> </span><span style="color:#2AA198;">&#39;function&#39;</span><span style="color:#657B83;">)</span></span>
<span class="line"><span style="color:#657B83;">    </span><span style="color:#859900;">throw</span><span style="color:#657B83;"> </span><span style="color:#859900;">new</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">TypeError</span><span style="color:#657B83;">(</span><span style="color:#2AA198;">&#39;error&#39;</span><span style="color:#657B83;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#657B83;">  </span><span style="color:#268BD2;">context</span><span style="color:#657B83;"> </span><span style="color:#859900;">=</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">context</span><span style="color:#657B83;"> </span><span style="color:#859900;">||</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">window</span></span>
<span class="line"><span style="color:#657B83;">  </span><span style="color:#586E75;font-weight:bold;">const</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">fn</span><span style="color:#657B83;"> </span><span style="color:#859900;">=</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">Symbol</span><span style="color:#657B83;">(</span><span style="color:#2AA198;">&#39;fn&#39;</span><span style="color:#657B83;">)</span></span>
<span class="line"><span style="color:#657B83;">  </span><span style="color:#268BD2;">context</span><span style="color:#657B83;">[</span><span style="color:#268BD2;">fn</span><span style="color:#657B83;">] </span><span style="color:#859900;">=</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">this</span></span>
<span class="line"><span style="color:#657B83;">  </span><span style="color:#586E75;font-weight:bold;">const</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">res</span><span style="color:#657B83;"> </span><span style="color:#859900;">=</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">context</span><span style="color:#657B83;">[</span><span style="color:#268BD2;">fn</span><span style="color:#657B83;">](</span><span style="color:#859900;">...</span><span style="color:#268BD2;">args</span><span style="color:#657B83;">)</span></span>
<span class="line"><span style="color:#657B83;">  </span><span style="color:#859900;">delete</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">context</span><span style="color:#657B83;">[</span><span style="color:#268BD2;">fn</span><span style="color:#657B83;">]</span></span>
<span class="line"></span>
<span class="line"><span style="color:#657B83;">  </span><span style="color:#859900;">return</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">res</span></span>
<span class="line"><span style="color:#657B83;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#859900;">Function</span><span style="color:#657B83;">.prototype.</span><span style="color:#268BD2;">cApply</span><span style="color:#657B83;"> </span><span style="color:#859900;">=</span><span style="color:#657B83;"> </span><span style="color:#586E75;font-weight:bold;">function</span><span style="color:#657B83;"> (context, args) {</span></span>
<span class="line"><span style="color:#657B83;">  </span><span style="color:#859900;">if</span><span style="color:#657B83;"> (</span><span style="color:#859900;">typeof</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">this</span><span style="color:#657B83;"> </span><span style="color:#859900;">!==</span><span style="color:#657B83;"> </span><span style="color:#2AA198;">&#39;function&#39;</span><span style="color:#657B83;">)</span></span>
<span class="line"><span style="color:#657B83;">    </span><span style="color:#859900;">throw</span><span style="color:#657B83;"> </span><span style="color:#859900;">new</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">TypeError</span><span style="color:#657B83;">(</span><span style="color:#2AA198;">&#39;error&#39;</span><span style="color:#657B83;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#657B83;">  </span><span style="color:#268BD2;">context</span><span style="color:#657B83;"> </span><span style="color:#859900;">=</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">context</span><span style="color:#657B83;"> </span><span style="color:#859900;">||</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">window</span></span>
<span class="line"><span style="color:#657B83;">  </span><span style="color:#586E75;font-weight:bold;">const</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">fn</span><span style="color:#657B83;"> </span><span style="color:#859900;">=</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">Symbol</span><span style="color:#657B83;">(</span><span style="color:#2AA198;">&#39;fn&#39;</span><span style="color:#657B83;">)</span></span>
<span class="line"><span style="color:#657B83;">  </span><span style="color:#268BD2;">context</span><span style="color:#657B83;">[</span><span style="color:#268BD2;">fn</span><span style="color:#657B83;">] </span><span style="color:#859900;">=</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">this</span></span>
<span class="line"><span style="color:#657B83;">  </span><span style="color:#586E75;font-weight:bold;">const</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">res</span><span style="color:#657B83;"> </span><span style="color:#859900;">=</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">context</span><span style="color:#657B83;">[</span><span style="color:#268BD2;">fn</span><span style="color:#657B83;">](</span><span style="color:#859900;">...</span><span style="color:#268BD2;">args</span><span style="color:#657B83;">)</span></span>
<span class="line"><span style="color:#657B83;">  </span><span style="color:#859900;">delete</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">context</span><span style="color:#657B83;">[</span><span style="color:#268BD2;">fn</span><span style="color:#657B83;">]</span></span>
<span class="line"></span>
<span class="line"><span style="color:#657B83;">  </span><span style="color:#859900;">return</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">res</span></span>
<span class="line"><span style="color:#657B83;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#859900;">Function</span><span style="color:#657B83;">.prototype.</span><span style="color:#268BD2;">cBind</span><span style="color:#657B83;"> </span><span style="color:#859900;">=</span><span style="color:#657B83;"> </span><span style="color:#586E75;font-weight:bold;">function</span><span style="color:#657B83;"> (context, </span><span style="color:#859900;">...</span><span style="color:#657B83;">args) {</span></span>
<span class="line"><span style="color:#657B83;">  </span><span style="color:#93A1A1;font-style:italic;">// eslint-disable-next-line @typescript-eslint/no-this-alias</span></span>
<span class="line"><span style="color:#657B83;">  </span><span style="color:#586E75;font-weight:bold;">const</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">Fn</span><span style="color:#657B83;"> </span><span style="color:#859900;">=</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">this</span></span>
<span class="line"></span>
<span class="line"><span style="color:#657B83;">  </span><span style="color:#859900;">return</span><span style="color:#657B83;"> </span><span style="color:#586E75;font-weight:bold;">function</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">newFn</span><span style="color:#657B83;">() {</span></span>
<span class="line"><span style="color:#657B83;">    </span><span style="color:#93A1A1;font-style:italic;">// eslint-disable-next-line @typescript-eslint/no-invalid-this</span></span>
<span class="line"><span style="color:#657B83;">    </span><span style="color:#859900;">if</span><span style="color:#657B83;"> (</span><span style="color:#268BD2;">this</span><span style="color:#657B83;"> </span><span style="color:#859900;">instanceof</span><span style="color:#657B83;"> </span><span style="color:#CB4B16;">newFn</span><span style="color:#657B83;">)</span></span>
<span class="line"><span style="color:#657B83;">      </span><span style="color:#859900;">return</span><span style="color:#657B83;"> </span><span style="color:#859900;">new</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">Fn</span><span style="color:#657B83;">(</span><span style="color:#859900;">...</span><span style="color:#268BD2;">args</span><span style="color:#657B83;">, </span><span style="color:#859900;">...</span><span style="color:#268BD2;">rest</span><span style="color:#657B83;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#657B83;">    </span><span style="color:#859900;">return</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">Fn</span><span style="color:#657B83;">.</span><span style="color:#268BD2;">call</span><span style="color:#657B83;">(</span><span style="color:#268BD2;">context</span><span style="color:#657B83;">, </span><span style="color:#859900;">...</span><span style="color:#268BD2;">args</span><span style="color:#657B83;">, </span><span style="color:#859900;">...</span><span style="color:#268BD2;">rest</span><span style="color:#657B83;">)</span></span>
<span class="line"><span style="color:#657B83;">  }</span></span>
<span class="line"><span style="color:#657B83;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br></div></div><h2 id="实现并发请求限制并发数" tabindex="-1">实现并发请求限制并发数 <a class="header-anchor" href="#实现并发请求限制并发数" aria-label="Permalink to &quot;实现并发请求限制并发数&quot;">​</a></h2><div class="language-js vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki solarized-dark vp-code-dark"><code><span class="line"><span style="color:#93A1A1;font-weight:bold;">function</span><span style="color:#839496;"> </span><span style="color:#268BD2;">delay</span><span style="color:#839496;">(interval) {</span></span>
<span class="line"><span style="color:#839496;">  </span><span style="color:#859900;">return</span><span style="color:#839496;"> </span><span style="color:#859900;">new</span><span style="color:#839496;"> </span><span style="color:#859900;">Promise</span><span style="color:#839496;">((resolve, reject) </span><span style="color:#93A1A1;font-weight:bold;">=&gt;</span><span style="color:#839496;"> {</span></span>
<span class="line"><span style="color:#839496;">    </span><span style="color:#268BD2;">setTimeout</span><span style="color:#839496;">(() </span><span style="color:#93A1A1;font-weight:bold;">=&gt;</span><span style="color:#839496;"> {</span></span>
<span class="line"><span style="color:#839496;">      </span><span style="color:#859900;">if</span><span style="color:#839496;"> (</span><span style="color:#268BD2;">Math</span><span style="color:#839496;">.</span><span style="color:#268BD2;">random</span><span style="color:#839496;">() </span><span style="color:#859900;">&gt;</span><span style="color:#839496;"> </span><span style="color:#D33682;">0.5</span><span style="color:#839496;">)</span></span>
<span class="line"><span style="color:#839496;">        </span><span style="color:#268BD2;">resolve</span><span style="color:#839496;">(</span><span style="color:#268BD2;">interval</span><span style="color:#839496;">)</span></span>
<span class="line"><span style="color:#839496;">      </span><span style="color:#859900;">else</span></span>
<span class="line"><span style="color:#839496;">        </span><span style="color:#268BD2;">reject</span><span style="color:#839496;">(</span><span style="color:#B58900;">null</span><span style="color:#839496;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#839496;">    }, </span><span style="color:#268BD2;">interval</span><span style="color:#839496;">)</span></span>
<span class="line"><span style="color:#839496;">  })</span></span>
<span class="line"><span style="color:#839496;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#93A1A1;font-weight:bold;">const</span><span style="color:#839496;"> </span><span style="color:#268BD2;">tasks</span><span style="color:#839496;"> </span><span style="color:#859900;">=</span><span style="color:#839496;"> [</span></span>
<span class="line"><span style="color:#839496;">  () </span><span style="color:#93A1A1;font-weight:bold;">=&gt;</span><span style="color:#839496;"> {</span></span>
<span class="line"><span style="color:#839496;">    </span><span style="color:#268BD2;">console</span><span style="color:#839496;">.</span><span style="color:#268BD2;">log</span><span style="color:#839496;">(</span><span style="color:#D33682;">1</span><span style="color:#839496;">)</span></span>
<span class="line"><span style="color:#839496;">    </span><span style="color:#859900;">return</span><span style="color:#839496;"> </span><span style="color:#268BD2;">delay</span><span style="color:#839496;">(</span><span style="color:#D33682;">1000</span><span style="color:#839496;">)</span></span>
<span class="line"><span style="color:#839496;">  },</span></span>
<span class="line"><span style="color:#839496;">  () </span><span style="color:#93A1A1;font-weight:bold;">=&gt;</span><span style="color:#839496;"> {</span></span>
<span class="line"><span style="color:#839496;">    </span><span style="color:#268BD2;">console</span><span style="color:#839496;">.</span><span style="color:#268BD2;">log</span><span style="color:#839496;">(</span><span style="color:#D33682;">2</span><span style="color:#839496;">)</span></span>
<span class="line"><span style="color:#839496;">    </span><span style="color:#859900;">return</span><span style="color:#839496;"> </span><span style="color:#268BD2;">delay</span><span style="color:#839496;">(</span><span style="color:#D33682;">1050</span><span style="color:#839496;">)</span></span>
<span class="line"><span style="color:#839496;">  },</span></span>
<span class="line"><span style="color:#839496;">  () </span><span style="color:#93A1A1;font-weight:bold;">=&gt;</span><span style="color:#839496;"> {</span></span>
<span class="line"><span style="color:#839496;">    </span><span style="color:#268BD2;">console</span><span style="color:#839496;">.</span><span style="color:#268BD2;">log</span><span style="color:#839496;">(</span><span style="color:#D33682;">3</span><span style="color:#839496;">)</span></span>
<span class="line"><span style="color:#839496;">    </span><span style="color:#859900;">return</span><span style="color:#839496;"> </span><span style="color:#268BD2;">delay</span><span style="color:#839496;">(</span><span style="color:#D33682;">2000</span><span style="color:#839496;">)</span></span>
<span class="line"><span style="color:#839496;">  },</span></span>
<span class="line"><span style="color:#839496;">  () </span><span style="color:#93A1A1;font-weight:bold;">=&gt;</span><span style="color:#839496;"> {</span></span>
<span class="line"><span style="color:#839496;">    </span><span style="color:#268BD2;">console</span><span style="color:#839496;">.</span><span style="color:#268BD2;">log</span><span style="color:#839496;">(</span><span style="color:#D33682;">4</span><span style="color:#839496;">)</span></span>
<span class="line"><span style="color:#839496;">    </span><span style="color:#859900;">return</span><span style="color:#839496;"> </span><span style="color:#268BD2;">delay</span><span style="color:#839496;">(</span><span style="color:#D33682;">2050</span><span style="color:#839496;">)</span></span>
<span class="line"><span style="color:#839496;">  },</span></span>
<span class="line"><span style="color:#839496;">  () </span><span style="color:#93A1A1;font-weight:bold;">=&gt;</span><span style="color:#839496;"> {</span></span>
<span class="line"><span style="color:#839496;">    </span><span style="color:#268BD2;">console</span><span style="color:#839496;">.</span><span style="color:#268BD2;">log</span><span style="color:#839496;">(</span><span style="color:#D33682;">5</span><span style="color:#839496;">)</span></span>
<span class="line"><span style="color:#839496;">    </span><span style="color:#859900;">return</span><span style="color:#839496;"> </span><span style="color:#268BD2;">delay</span><span style="color:#839496;">(</span><span style="color:#D33682;">3000</span><span style="color:#839496;">)</span></span>
<span class="line"><span style="color:#839496;">  },</span></span>
<span class="line"><span style="color:#839496;">  () </span><span style="color:#93A1A1;font-weight:bold;">=&gt;</span><span style="color:#839496;"> {</span></span>
<span class="line"><span style="color:#839496;">    </span><span style="color:#268BD2;">console</span><span style="color:#839496;">.</span><span style="color:#268BD2;">log</span><span style="color:#839496;">(</span><span style="color:#D33682;">6</span><span style="color:#839496;">)</span></span>
<span class="line"><span style="color:#839496;">    </span><span style="color:#859900;">return</span><span style="color:#839496;"> </span><span style="color:#268BD2;">delay</span><span style="color:#839496;">(</span><span style="color:#D33682;">4000</span><span style="color:#839496;">)</span></span>
<span class="line"><span style="color:#839496;">  },</span></span>
<span class="line"><span style="color:#839496;">]</span></span>
<span class="line"></span>
<span class="line"><span style="color:#93A1A1;font-weight:bold;">function</span><span style="color:#839496;"> </span><span style="color:#268BD2;">sendRequest</span><span style="color:#839496;">(tasks, max, callBack) {</span></span>
<span class="line"><span style="color:#839496;">  </span><span style="color:#93A1A1;font-weight:bold;">let</span><span style="color:#839496;"> </span><span style="color:#268BD2;">index</span><span style="color:#839496;"> </span><span style="color:#859900;">=</span><span style="color:#839496;"> </span><span style="color:#D33682;">0</span></span>
<span class="line"><span style="color:#839496;">  </span><span style="color:#93A1A1;font-weight:bold;">let</span><span style="color:#839496;"> </span><span style="color:#268BD2;">together</span><span style="color:#839496;"> </span><span style="color:#859900;">=</span><span style="color:#839496;"> </span><span style="color:#268BD2;">Array</span><span style="color:#839496;">(</span><span style="color:#268BD2;">max</span><span style="color:#839496;">).</span><span style="color:#268BD2;">fill</span><span style="color:#839496;">(</span><span style="color:#B58900;">null</span><span style="color:#839496;">)</span></span>
<span class="line"><span style="color:#839496;">  </span><span style="color:#93A1A1;font-weight:bold;">const</span><span style="color:#839496;"> </span><span style="color:#268BD2;">result</span><span style="color:#839496;"> </span><span style="color:#859900;">=</span><span style="color:#839496;"> []</span></span>
<span class="line"></span>
<span class="line"><span style="color:#839496;">  </span><span style="color:#268BD2;">together</span><span style="color:#839496;"> </span><span style="color:#859900;">=</span><span style="color:#839496;"> </span><span style="color:#268BD2;">together</span><span style="color:#839496;">.</span><span style="color:#268BD2;">map</span><span style="color:#839496;">(() </span><span style="color:#93A1A1;font-weight:bold;">=&gt;</span><span style="color:#839496;"> {</span></span>
<span class="line"><span style="color:#839496;">    </span><span style="color:#859900;">return</span><span style="color:#839496;"> </span><span style="color:#859900;">new</span><span style="color:#839496;"> </span><span style="color:#859900;">Promise</span><span style="color:#839496;">((resolve) </span><span style="color:#93A1A1;font-weight:bold;">=&gt;</span><span style="color:#839496;"> {</span></span>
<span class="line"><span style="color:#839496;">      </span><span style="color:#93A1A1;font-weight:bold;">const</span><span style="color:#839496;"> </span><span style="color:#268BD2;">run</span><span style="color:#839496;"> </span><span style="color:#859900;">=</span><span style="color:#839496;"> () </span><span style="color:#93A1A1;font-weight:bold;">=&gt;</span><span style="color:#839496;"> {</span></span>
<span class="line"><span style="color:#839496;">        </span><span style="color:#859900;">if</span><span style="color:#839496;"> (</span><span style="color:#268BD2;">index</span><span style="color:#839496;"> </span><span style="color:#859900;">&gt;=</span><span style="color:#839496;"> </span><span style="color:#268BD2;">tasks</span><span style="color:#839496;">.length) {</span></span>
<span class="line"><span style="color:#839496;">          </span><span style="color:#268BD2;">resolve</span><span style="color:#839496;">()</span></span>
<span class="line"><span style="color:#839496;">          </span><span style="color:#859900;">return</span></span>
<span class="line"><span style="color:#839496;">        }</span></span>
<span class="line"><span style="color:#839496;">        </span><span style="color:#93A1A1;font-weight:bold;">const</span><span style="color:#839496;"> </span><span style="color:#268BD2;">cur</span><span style="color:#839496;"> </span><span style="color:#859900;">=</span><span style="color:#839496;"> </span><span style="color:#268BD2;">index</span></span>
<span class="line"><span style="color:#839496;">        </span><span style="color:#93A1A1;font-weight:bold;">const</span><span style="color:#839496;"> </span><span style="color:#268BD2;">task</span><span style="color:#839496;"> </span><span style="color:#859900;">=</span><span style="color:#839496;"> </span><span style="color:#268BD2;">tasks</span><span style="color:#839496;">[</span><span style="color:#268BD2;">index</span><span style="color:#859900;">++</span><span style="color:#839496;">]</span></span>
<span class="line"><span style="color:#839496;">        </span><span style="color:#268BD2;">task</span><span style="color:#839496;">()</span></span>
<span class="line"><span style="color:#839496;">          .</span><span style="color:#268BD2;">then</span><span style="color:#839496;">((res) </span><span style="color:#93A1A1;font-weight:bold;">=&gt;</span><span style="color:#839496;"> {</span></span>
<span class="line"><span style="color:#839496;">            </span><span style="color:#268BD2;">result</span><span style="color:#839496;">[</span><span style="color:#268BD2;">cur</span><span style="color:#839496;">] </span><span style="color:#859900;">=</span><span style="color:#839496;"> </span><span style="color:#268BD2;">res</span></span>
<span class="line"><span style="color:#839496;">            </span><span style="color:#268BD2;">run</span><span style="color:#839496;">()</span></span>
<span class="line"><span style="color:#839496;">          })</span></span>
<span class="line"><span style="color:#839496;">          .</span><span style="color:#268BD2;">catch</span><span style="color:#839496;">((err) </span><span style="color:#93A1A1;font-weight:bold;">=&gt;</span><span style="color:#839496;"> {</span></span>
<span class="line"><span style="color:#839496;">            </span><span style="color:#268BD2;">result</span><span style="color:#839496;">[</span><span style="color:#268BD2;">cur</span><span style="color:#839496;">] </span><span style="color:#859900;">=</span><span style="color:#839496;"> </span><span style="color:#268BD2;">err</span></span>
<span class="line"><span style="color:#839496;">            </span><span style="color:#268BD2;">run</span><span style="color:#839496;">()</span></span>
<span class="line"><span style="color:#839496;">            </span><span style="color:#586E75;font-style:italic;">// reject(err);</span></span>
<span class="line"><span style="color:#839496;">          })</span></span>
<span class="line"><span style="color:#839496;">      }</span></span>
<span class="line"><span style="color:#839496;">      </span><span style="color:#268BD2;">run</span><span style="color:#839496;">()</span></span>
<span class="line"><span style="color:#839496;">    })</span></span>
<span class="line"><span style="color:#839496;">  })</span></span>
<span class="line"><span style="color:#839496;">  </span><span style="color:#859900;">Promise</span><span style="color:#839496;">.</span><span style="color:#268BD2;">all</span><span style="color:#839496;">(</span><span style="color:#268BD2;">together</span><span style="color:#839496;">).</span><span style="color:#268BD2;">then</span><span style="color:#839496;">(() </span><span style="color:#93A1A1;font-weight:bold;">=&gt;</span><span style="color:#839496;"> </span><span style="color:#268BD2;">callBack</span><span style="color:#839496;">(</span><span style="color:#268BD2;">result</span><span style="color:#839496;">))</span></span>
<span class="line"><span style="color:#839496;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#268BD2;">sendRequest</span><span style="color:#839496;">(</span><span style="color:#268BD2;">tasks</span><span style="color:#839496;">, </span><span style="color:#D33682;">2</span><span style="color:#839496;">, (res) </span><span style="color:#93A1A1;font-weight:bold;">=&gt;</span><span style="color:#839496;"> {</span></span>
<span class="line"><span style="color:#839496;">  </span><span style="color:#268BD2;">console</span><span style="color:#839496;">.</span><span style="color:#268BD2;">log</span><span style="color:#839496;">(</span><span style="color:#268BD2;">res</span><span style="color:#839496;">)</span></span>
<span class="line"><span style="color:#839496;">})</span></span></code></pre><pre class="shiki solarized-light vp-code-light"><code><span class="line"><span style="color:#586E75;font-weight:bold;">function</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">delay</span><span style="color:#657B83;">(interval) {</span></span>
<span class="line"><span style="color:#657B83;">  </span><span style="color:#859900;">return</span><span style="color:#657B83;"> </span><span style="color:#859900;">new</span><span style="color:#657B83;"> </span><span style="color:#859900;">Promise</span><span style="color:#657B83;">((resolve, reject) </span><span style="color:#586E75;font-weight:bold;">=&gt;</span><span style="color:#657B83;"> {</span></span>
<span class="line"><span style="color:#657B83;">    </span><span style="color:#268BD2;">setTimeout</span><span style="color:#657B83;">(() </span><span style="color:#586E75;font-weight:bold;">=&gt;</span><span style="color:#657B83;"> {</span></span>
<span class="line"><span style="color:#657B83;">      </span><span style="color:#859900;">if</span><span style="color:#657B83;"> (</span><span style="color:#268BD2;">Math</span><span style="color:#657B83;">.</span><span style="color:#268BD2;">random</span><span style="color:#657B83;">() </span><span style="color:#859900;">&gt;</span><span style="color:#657B83;"> </span><span style="color:#D33682;">0.5</span><span style="color:#657B83;">)</span></span>
<span class="line"><span style="color:#657B83;">        </span><span style="color:#268BD2;">resolve</span><span style="color:#657B83;">(</span><span style="color:#268BD2;">interval</span><span style="color:#657B83;">)</span></span>
<span class="line"><span style="color:#657B83;">      </span><span style="color:#859900;">else</span></span>
<span class="line"><span style="color:#657B83;">        </span><span style="color:#268BD2;">reject</span><span style="color:#657B83;">(</span><span style="color:#B58900;">null</span><span style="color:#657B83;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#657B83;">    }, </span><span style="color:#268BD2;">interval</span><span style="color:#657B83;">)</span></span>
<span class="line"><span style="color:#657B83;">  })</span></span>
<span class="line"><span style="color:#657B83;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#586E75;font-weight:bold;">const</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">tasks</span><span style="color:#657B83;"> </span><span style="color:#859900;">=</span><span style="color:#657B83;"> [</span></span>
<span class="line"><span style="color:#657B83;">  () </span><span style="color:#586E75;font-weight:bold;">=&gt;</span><span style="color:#657B83;"> {</span></span>
<span class="line"><span style="color:#657B83;">    </span><span style="color:#268BD2;">console</span><span style="color:#657B83;">.</span><span style="color:#268BD2;">log</span><span style="color:#657B83;">(</span><span style="color:#D33682;">1</span><span style="color:#657B83;">)</span></span>
<span class="line"><span style="color:#657B83;">    </span><span style="color:#859900;">return</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">delay</span><span style="color:#657B83;">(</span><span style="color:#D33682;">1000</span><span style="color:#657B83;">)</span></span>
<span class="line"><span style="color:#657B83;">  },</span></span>
<span class="line"><span style="color:#657B83;">  () </span><span style="color:#586E75;font-weight:bold;">=&gt;</span><span style="color:#657B83;"> {</span></span>
<span class="line"><span style="color:#657B83;">    </span><span style="color:#268BD2;">console</span><span style="color:#657B83;">.</span><span style="color:#268BD2;">log</span><span style="color:#657B83;">(</span><span style="color:#D33682;">2</span><span style="color:#657B83;">)</span></span>
<span class="line"><span style="color:#657B83;">    </span><span style="color:#859900;">return</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">delay</span><span style="color:#657B83;">(</span><span style="color:#D33682;">1050</span><span style="color:#657B83;">)</span></span>
<span class="line"><span style="color:#657B83;">  },</span></span>
<span class="line"><span style="color:#657B83;">  () </span><span style="color:#586E75;font-weight:bold;">=&gt;</span><span style="color:#657B83;"> {</span></span>
<span class="line"><span style="color:#657B83;">    </span><span style="color:#268BD2;">console</span><span style="color:#657B83;">.</span><span style="color:#268BD2;">log</span><span style="color:#657B83;">(</span><span style="color:#D33682;">3</span><span style="color:#657B83;">)</span></span>
<span class="line"><span style="color:#657B83;">    </span><span style="color:#859900;">return</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">delay</span><span style="color:#657B83;">(</span><span style="color:#D33682;">2000</span><span style="color:#657B83;">)</span></span>
<span class="line"><span style="color:#657B83;">  },</span></span>
<span class="line"><span style="color:#657B83;">  () </span><span style="color:#586E75;font-weight:bold;">=&gt;</span><span style="color:#657B83;"> {</span></span>
<span class="line"><span style="color:#657B83;">    </span><span style="color:#268BD2;">console</span><span style="color:#657B83;">.</span><span style="color:#268BD2;">log</span><span style="color:#657B83;">(</span><span style="color:#D33682;">4</span><span style="color:#657B83;">)</span></span>
<span class="line"><span style="color:#657B83;">    </span><span style="color:#859900;">return</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">delay</span><span style="color:#657B83;">(</span><span style="color:#D33682;">2050</span><span style="color:#657B83;">)</span></span>
<span class="line"><span style="color:#657B83;">  },</span></span>
<span class="line"><span style="color:#657B83;">  () </span><span style="color:#586E75;font-weight:bold;">=&gt;</span><span style="color:#657B83;"> {</span></span>
<span class="line"><span style="color:#657B83;">    </span><span style="color:#268BD2;">console</span><span style="color:#657B83;">.</span><span style="color:#268BD2;">log</span><span style="color:#657B83;">(</span><span style="color:#D33682;">5</span><span style="color:#657B83;">)</span></span>
<span class="line"><span style="color:#657B83;">    </span><span style="color:#859900;">return</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">delay</span><span style="color:#657B83;">(</span><span style="color:#D33682;">3000</span><span style="color:#657B83;">)</span></span>
<span class="line"><span style="color:#657B83;">  },</span></span>
<span class="line"><span style="color:#657B83;">  () </span><span style="color:#586E75;font-weight:bold;">=&gt;</span><span style="color:#657B83;"> {</span></span>
<span class="line"><span style="color:#657B83;">    </span><span style="color:#268BD2;">console</span><span style="color:#657B83;">.</span><span style="color:#268BD2;">log</span><span style="color:#657B83;">(</span><span style="color:#D33682;">6</span><span style="color:#657B83;">)</span></span>
<span class="line"><span style="color:#657B83;">    </span><span style="color:#859900;">return</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">delay</span><span style="color:#657B83;">(</span><span style="color:#D33682;">4000</span><span style="color:#657B83;">)</span></span>
<span class="line"><span style="color:#657B83;">  },</span></span>
<span class="line"><span style="color:#657B83;">]</span></span>
<span class="line"></span>
<span class="line"><span style="color:#586E75;font-weight:bold;">function</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">sendRequest</span><span style="color:#657B83;">(tasks, max, callBack) {</span></span>
<span class="line"><span style="color:#657B83;">  </span><span style="color:#586E75;font-weight:bold;">let</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">index</span><span style="color:#657B83;"> </span><span style="color:#859900;">=</span><span style="color:#657B83;"> </span><span style="color:#D33682;">0</span></span>
<span class="line"><span style="color:#657B83;">  </span><span style="color:#586E75;font-weight:bold;">let</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">together</span><span style="color:#657B83;"> </span><span style="color:#859900;">=</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">Array</span><span style="color:#657B83;">(</span><span style="color:#268BD2;">max</span><span style="color:#657B83;">).</span><span style="color:#268BD2;">fill</span><span style="color:#657B83;">(</span><span style="color:#B58900;">null</span><span style="color:#657B83;">)</span></span>
<span class="line"><span style="color:#657B83;">  </span><span style="color:#586E75;font-weight:bold;">const</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">result</span><span style="color:#657B83;"> </span><span style="color:#859900;">=</span><span style="color:#657B83;"> []</span></span>
<span class="line"></span>
<span class="line"><span style="color:#657B83;">  </span><span style="color:#268BD2;">together</span><span style="color:#657B83;"> </span><span style="color:#859900;">=</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">together</span><span style="color:#657B83;">.</span><span style="color:#268BD2;">map</span><span style="color:#657B83;">(() </span><span style="color:#586E75;font-weight:bold;">=&gt;</span><span style="color:#657B83;"> {</span></span>
<span class="line"><span style="color:#657B83;">    </span><span style="color:#859900;">return</span><span style="color:#657B83;"> </span><span style="color:#859900;">new</span><span style="color:#657B83;"> </span><span style="color:#859900;">Promise</span><span style="color:#657B83;">((resolve) </span><span style="color:#586E75;font-weight:bold;">=&gt;</span><span style="color:#657B83;"> {</span></span>
<span class="line"><span style="color:#657B83;">      </span><span style="color:#586E75;font-weight:bold;">const</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">run</span><span style="color:#657B83;"> </span><span style="color:#859900;">=</span><span style="color:#657B83;"> () </span><span style="color:#586E75;font-weight:bold;">=&gt;</span><span style="color:#657B83;"> {</span></span>
<span class="line"><span style="color:#657B83;">        </span><span style="color:#859900;">if</span><span style="color:#657B83;"> (</span><span style="color:#268BD2;">index</span><span style="color:#657B83;"> </span><span style="color:#859900;">&gt;=</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">tasks</span><span style="color:#657B83;">.length) {</span></span>
<span class="line"><span style="color:#657B83;">          </span><span style="color:#268BD2;">resolve</span><span style="color:#657B83;">()</span></span>
<span class="line"><span style="color:#657B83;">          </span><span style="color:#859900;">return</span></span>
<span class="line"><span style="color:#657B83;">        }</span></span>
<span class="line"><span style="color:#657B83;">        </span><span style="color:#586E75;font-weight:bold;">const</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">cur</span><span style="color:#657B83;"> </span><span style="color:#859900;">=</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">index</span></span>
<span class="line"><span style="color:#657B83;">        </span><span style="color:#586E75;font-weight:bold;">const</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">task</span><span style="color:#657B83;"> </span><span style="color:#859900;">=</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">tasks</span><span style="color:#657B83;">[</span><span style="color:#268BD2;">index</span><span style="color:#859900;">++</span><span style="color:#657B83;">]</span></span>
<span class="line"><span style="color:#657B83;">        </span><span style="color:#268BD2;">task</span><span style="color:#657B83;">()</span></span>
<span class="line"><span style="color:#657B83;">          .</span><span style="color:#268BD2;">then</span><span style="color:#657B83;">((res) </span><span style="color:#586E75;font-weight:bold;">=&gt;</span><span style="color:#657B83;"> {</span></span>
<span class="line"><span style="color:#657B83;">            </span><span style="color:#268BD2;">result</span><span style="color:#657B83;">[</span><span style="color:#268BD2;">cur</span><span style="color:#657B83;">] </span><span style="color:#859900;">=</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">res</span></span>
<span class="line"><span style="color:#657B83;">            </span><span style="color:#268BD2;">run</span><span style="color:#657B83;">()</span></span>
<span class="line"><span style="color:#657B83;">          })</span></span>
<span class="line"><span style="color:#657B83;">          .</span><span style="color:#268BD2;">catch</span><span style="color:#657B83;">((err) </span><span style="color:#586E75;font-weight:bold;">=&gt;</span><span style="color:#657B83;"> {</span></span>
<span class="line"><span style="color:#657B83;">            </span><span style="color:#268BD2;">result</span><span style="color:#657B83;">[</span><span style="color:#268BD2;">cur</span><span style="color:#657B83;">] </span><span style="color:#859900;">=</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">err</span></span>
<span class="line"><span style="color:#657B83;">            </span><span style="color:#268BD2;">run</span><span style="color:#657B83;">()</span></span>
<span class="line"><span style="color:#657B83;">            </span><span style="color:#93A1A1;font-style:italic;">// reject(err);</span></span>
<span class="line"><span style="color:#657B83;">          })</span></span>
<span class="line"><span style="color:#657B83;">      }</span></span>
<span class="line"><span style="color:#657B83;">      </span><span style="color:#268BD2;">run</span><span style="color:#657B83;">()</span></span>
<span class="line"><span style="color:#657B83;">    })</span></span>
<span class="line"><span style="color:#657B83;">  })</span></span>
<span class="line"><span style="color:#657B83;">  </span><span style="color:#859900;">Promise</span><span style="color:#657B83;">.</span><span style="color:#268BD2;">all</span><span style="color:#657B83;">(</span><span style="color:#268BD2;">together</span><span style="color:#657B83;">).</span><span style="color:#268BD2;">then</span><span style="color:#657B83;">(() </span><span style="color:#586E75;font-weight:bold;">=&gt;</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">callBack</span><span style="color:#657B83;">(</span><span style="color:#268BD2;">result</span><span style="color:#657B83;">))</span></span>
<span class="line"><span style="color:#657B83;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#268BD2;">sendRequest</span><span style="color:#657B83;">(</span><span style="color:#268BD2;">tasks</span><span style="color:#657B83;">, </span><span style="color:#D33682;">2</span><span style="color:#657B83;">, (res) </span><span style="color:#586E75;font-weight:bold;">=&gt;</span><span style="color:#657B83;"> {</span></span>
<span class="line"><span style="color:#657B83;">  </span><span style="color:#268BD2;">console</span><span style="color:#657B83;">.</span><span style="color:#268BD2;">log</span><span style="color:#657B83;">(</span><span style="color:#268BD2;">res</span><span style="color:#657B83;">)</span></span>
<span class="line"><span style="color:#657B83;">})</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br><span class="line-number">48</span><br><span class="line-number">49</span><br><span class="line-number">50</span><br><span class="line-number">51</span><br><span class="line-number">52</span><br><span class="line-number">53</span><br><span class="line-number">54</span><br><span class="line-number">55</span><br><span class="line-number">56</span><br><span class="line-number">57</span><br><span class="line-number">58</span><br><span class="line-number">59</span><br><span class="line-number">60</span><br><span class="line-number">61</span><br><span class="line-number">62</span><br><span class="line-number">63</span><br><span class="line-number">64</span><br><span class="line-number">65</span><br><span class="line-number">66</span><br><span class="line-number">67</span><br><span class="line-number">68</span><br><span class="line-number">69</span><br><span class="line-number">70</span><br><span class="line-number">71</span><br><span class="line-number">72</span><br><span class="line-number">73</span><br></div></div>`,21),e=[o];function c(r,t,y,B,i,b){return n(),a("div",null,e)}const d=s(p,[["render",c]]);export{u as __pageData,d as default};
