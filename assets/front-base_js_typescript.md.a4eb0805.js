import{_ as e,E as t,o as c,c as r,k as l,a as s,J as p,w as o,S as n}from"./chunks/framework.a6b0411f.js";const v=JSON.parse('{"title":"TypeScript","description":"","frontmatter":{},"headers":[],"relativePath":"front-base/js/typescript.md","filePath":"front-base/js/typescript.md","lastUpdated":1692612622000}'),y={name:"front-base/js/typescript.md"},i=n(`<h1 id="typescript" tabindex="-1">TypeScript <a class="header-anchor" href="#typescript" aria-label="Permalink to &quot;TypeScript&quot;">​</a></h1><h2 id="typescript-基础类型" tabindex="-1">TypeScript 基础类型 <a class="header-anchor" href="#typescript-基础类型" aria-label="Permalink to &quot;TypeScript 基础类型&quot;">​</a></h2><h3 id="boolean-类型" tabindex="-1">Boolean 类型 <a class="header-anchor" href="#boolean-类型" aria-label="Permalink to &quot;Boolean 类型&quot;">​</a></h3><div class="language-ts vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki solarized-dark vp-code-dark"><code><span class="line"><span style="color:#93A1A1;font-weight:bold;">const</span><span style="color:#839496;"> </span><span style="color:#268BD2;">isBoolean</span><span style="color:#859900;">:</span><span style="color:#839496;"> </span><span style="color:#859900;">boolean</span><span style="color:#839496;"> </span><span style="color:#859900;">=</span><span style="color:#839496;"> </span><span style="color:#B58900;">true</span></span></code></pre><pre class="shiki solarized-light vp-code-light"><code><span class="line"><span style="color:#586E75;font-weight:bold;">const</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">isBoolean</span><span style="color:#859900;">:</span><span style="color:#657B83;"> </span><span style="color:#859900;">boolean</span><span style="color:#657B83;"> </span><span style="color:#859900;">=</span><span style="color:#657B83;"> </span><span style="color:#B58900;">true</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><h3 id="string-类型" tabindex="-1">String 类型 <a class="header-anchor" href="#string-类型" aria-label="Permalink to &quot;String 类型&quot;">​</a></h3><div class="language-ts vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki solarized-dark vp-code-dark"><code><span class="line"><span style="color:#93A1A1;font-weight:bold;">const</span><span style="color:#839496;"> </span><span style="color:#268BD2;">str</span><span style="color:#859900;">:</span><span style="color:#839496;"> </span><span style="color:#859900;">string</span><span style="color:#839496;"> </span><span style="color:#859900;">=</span><span style="color:#839496;"> </span><span style="color:#2AA198;">&#39;TypeScript&#39;</span></span></code></pre><pre class="shiki solarized-light vp-code-light"><code><span class="line"><span style="color:#586E75;font-weight:bold;">const</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">str</span><span style="color:#859900;">:</span><span style="color:#657B83;"> </span><span style="color:#859900;">string</span><span style="color:#657B83;"> </span><span style="color:#859900;">=</span><span style="color:#657B83;"> </span><span style="color:#2AA198;">&#39;TypeScript&#39;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><h3 id="number-类型" tabindex="-1">Number 类型 <a class="header-anchor" href="#number-类型" aria-label="Permalink to &quot;Number 类型&quot;">​</a></h3><div class="language-ts vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki solarized-dark vp-code-dark"><code><span class="line"><span style="color:#93A1A1;font-weight:bold;">const</span><span style="color:#839496;"> </span><span style="color:#268BD2;">num</span><span style="color:#859900;">:</span><span style="color:#839496;"> </span><span style="color:#859900;">number</span><span style="color:#839496;"> </span><span style="color:#859900;">=</span><span style="color:#839496;"> </span><span style="color:#D33682;">123</span></span></code></pre><pre class="shiki solarized-light vp-code-light"><code><span class="line"><span style="color:#586E75;font-weight:bold;">const</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">num</span><span style="color:#859900;">:</span><span style="color:#657B83;"> </span><span style="color:#859900;">number</span><span style="color:#657B83;"> </span><span style="color:#859900;">=</span><span style="color:#657B83;"> </span><span style="color:#D33682;">123</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><h3 id="enum-类型" tabindex="-1">Enum 类型 <a class="header-anchor" href="#enum-类型" aria-label="Permalink to &quot;Enum 类型&quot;">​</a></h3><ul><li>基础用法</li></ul><div class="language-ts vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki solarized-dark vp-code-dark"><code><span class="line"><span style="color:#93A1A1;font-weight:bold;">enum</span><span style="color:#839496;"> </span><span style="color:#CB4B16;">FrontLanguage</span><span style="color:#839496;"> {</span></span>
<span class="line"><span style="color:#839496;">  </span><span style="color:#268BD2;">JAVASCRIPT</span><span style="color:#839496;">,</span></span>
<span class="line"><span style="color:#839496;">  </span><span style="color:#268BD2;">TYPESCRIPT</span><span style="color:#839496;">,</span></span>
<span class="line"><span style="color:#839496;">  </span><span style="color:#268BD2;">VUE</span><span style="color:#839496;">,</span></span>
<span class="line"><span style="color:#839496;">  </span><span style="color:#268BD2;">REACT</span><span style="color:#839496;">,</span></span>
<span class="line"><span style="color:#839496;">  </span><span style="color:#268BD2;">CSS</span><span style="color:#839496;">,</span></span>
<span class="line"><span style="color:#839496;">  </span><span style="color:#268BD2;">HTML</span><span style="color:#839496;">,</span></span>
<span class="line"><span style="color:#839496;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#93A1A1;font-weight:bold;">const</span><span style="color:#839496;"> </span><span style="color:#268BD2;">lang</span><span style="color:#859900;">:</span><span style="color:#839496;"> </span><span style="color:#CB4B16;">FrontLanguage</span><span style="color:#839496;"> </span><span style="color:#859900;">=</span><span style="color:#839496;"> </span><span style="color:#268BD2;">FrontLanguage</span><span style="color:#839496;">.</span><span style="color:#268BD2;">JAVASCRIPT</span></span>
<span class="line"><span style="color:#268BD2;">console</span><span style="color:#839496;">.</span><span style="color:#268BD2;">log</span><span style="color:#839496;">(</span><span style="color:#268BD2;">lang</span><span style="color:#839496;">) </span><span style="color:#586E75;font-style:italic;">// 0</span></span></code></pre><pre class="shiki solarized-light vp-code-light"><code><span class="line"><span style="color:#586E75;font-weight:bold;">enum</span><span style="color:#657B83;"> </span><span style="color:#CB4B16;">FrontLanguage</span><span style="color:#657B83;"> {</span></span>
<span class="line"><span style="color:#657B83;">  </span><span style="color:#268BD2;">JAVASCRIPT</span><span style="color:#657B83;">,</span></span>
<span class="line"><span style="color:#657B83;">  </span><span style="color:#268BD2;">TYPESCRIPT</span><span style="color:#657B83;">,</span></span>
<span class="line"><span style="color:#657B83;">  </span><span style="color:#268BD2;">VUE</span><span style="color:#657B83;">,</span></span>
<span class="line"><span style="color:#657B83;">  </span><span style="color:#268BD2;">REACT</span><span style="color:#657B83;">,</span></span>
<span class="line"><span style="color:#657B83;">  </span><span style="color:#268BD2;">CSS</span><span style="color:#657B83;">,</span></span>
<span class="line"><span style="color:#657B83;">  </span><span style="color:#268BD2;">HTML</span><span style="color:#657B83;">,</span></span>
<span class="line"><span style="color:#657B83;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#586E75;font-weight:bold;">const</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">lang</span><span style="color:#859900;">:</span><span style="color:#657B83;"> </span><span style="color:#CB4B16;">FrontLanguage</span><span style="color:#657B83;"> </span><span style="color:#859900;">=</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">FrontLanguage</span><span style="color:#657B83;">.</span><span style="color:#268BD2;">JAVASCRIPT</span></span>
<span class="line"><span style="color:#268BD2;">console</span><span style="color:#657B83;">.</span><span style="color:#268BD2;">log</span><span style="color:#657B83;">(</span><span style="color:#268BD2;">lang</span><span style="color:#657B83;">) </span><span style="color:#93A1A1;font-style:italic;">// 0</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br></div></div><ul><li>设置默认值</li></ul><div class="language-ts vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki solarized-dark vp-code-dark"><code><span class="line"><span style="color:#93A1A1;font-weight:bold;">enum</span><span style="color:#839496;"> </span><span style="color:#CB4B16;">FrontLanguage</span><span style="color:#839496;"> {</span></span>
<span class="line"><span style="color:#839496;">  </span><span style="color:#268BD2;">JAVASCRIPT</span><span style="color:#839496;"> </span><span style="color:#859900;">=</span><span style="color:#839496;"> </span><span style="color:#2AA198;">&#39;js&#39;</span><span style="color:#839496;">,</span></span>
<span class="line"><span style="color:#839496;">  </span><span style="color:#268BD2;">TYPESCRIPT</span><span style="color:#839496;"> </span><span style="color:#859900;">=</span><span style="color:#839496;"> </span><span style="color:#2AA198;">&#39;ts&#39;</span><span style="color:#839496;">,</span></span>
<span class="line"><span style="color:#839496;">  </span><span style="color:#268BD2;">VUE</span><span style="color:#839496;"> </span><span style="color:#859900;">=</span><span style="color:#839496;"> </span><span style="color:#2AA198;">&#39;vue&#39;</span><span style="color:#839496;">,</span></span>
<span class="line"><span style="color:#839496;">  </span><span style="color:#268BD2;">REACT</span><span style="color:#839496;"> </span><span style="color:#859900;">=</span><span style="color:#839496;"> </span><span style="color:#2AA198;">&#39;react&#39;</span><span style="color:#839496;">,</span></span>
<span class="line"><span style="color:#839496;">  </span><span style="color:#268BD2;">CSS</span><span style="color:#839496;"> </span><span style="color:#859900;">=</span><span style="color:#839496;"> </span><span style="color:#2AA198;">&#39;css&#39;</span><span style="color:#839496;">,</span></span>
<span class="line"><span style="color:#839496;">  </span><span style="color:#268BD2;">HTML</span><span style="color:#839496;"> </span><span style="color:#859900;">=</span><span style="color:#839496;"> </span><span style="color:#2AA198;">&#39;html&#39;</span><span style="color:#839496;">,</span></span>
<span class="line"><span style="color:#839496;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#93A1A1;font-weight:bold;">const</span><span style="color:#839496;"> </span><span style="color:#268BD2;">lang</span><span style="color:#859900;">:</span><span style="color:#839496;"> </span><span style="color:#CB4B16;">FrontLanguage</span><span style="color:#839496;"> </span><span style="color:#859900;">=</span><span style="color:#839496;"> </span><span style="color:#268BD2;">FrontLanguage</span><span style="color:#839496;">.</span><span style="color:#268BD2;">JAVASCRIPT</span></span>
<span class="line"><span style="color:#268BD2;">console</span><span style="color:#839496;">.</span><span style="color:#268BD2;">log</span><span style="color:#839496;">(</span><span style="color:#268BD2;">lang</span><span style="color:#839496;">) </span><span style="color:#586E75;font-style:italic;">// js</span></span></code></pre><pre class="shiki solarized-light vp-code-light"><code><span class="line"><span style="color:#586E75;font-weight:bold;">enum</span><span style="color:#657B83;"> </span><span style="color:#CB4B16;">FrontLanguage</span><span style="color:#657B83;"> {</span></span>
<span class="line"><span style="color:#657B83;">  </span><span style="color:#268BD2;">JAVASCRIPT</span><span style="color:#657B83;"> </span><span style="color:#859900;">=</span><span style="color:#657B83;"> </span><span style="color:#2AA198;">&#39;js&#39;</span><span style="color:#657B83;">,</span></span>
<span class="line"><span style="color:#657B83;">  </span><span style="color:#268BD2;">TYPESCRIPT</span><span style="color:#657B83;"> </span><span style="color:#859900;">=</span><span style="color:#657B83;"> </span><span style="color:#2AA198;">&#39;ts&#39;</span><span style="color:#657B83;">,</span></span>
<span class="line"><span style="color:#657B83;">  </span><span style="color:#268BD2;">VUE</span><span style="color:#657B83;"> </span><span style="color:#859900;">=</span><span style="color:#657B83;"> </span><span style="color:#2AA198;">&#39;vue&#39;</span><span style="color:#657B83;">,</span></span>
<span class="line"><span style="color:#657B83;">  </span><span style="color:#268BD2;">REACT</span><span style="color:#657B83;"> </span><span style="color:#859900;">=</span><span style="color:#657B83;"> </span><span style="color:#2AA198;">&#39;react&#39;</span><span style="color:#657B83;">,</span></span>
<span class="line"><span style="color:#657B83;">  </span><span style="color:#268BD2;">CSS</span><span style="color:#657B83;"> </span><span style="color:#859900;">=</span><span style="color:#657B83;"> </span><span style="color:#2AA198;">&#39;css&#39;</span><span style="color:#657B83;">,</span></span>
<span class="line"><span style="color:#657B83;">  </span><span style="color:#268BD2;">HTML</span><span style="color:#657B83;"> </span><span style="color:#859900;">=</span><span style="color:#657B83;"> </span><span style="color:#2AA198;">&#39;html&#39;</span><span style="color:#657B83;">,</span></span>
<span class="line"><span style="color:#657B83;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#586E75;font-weight:bold;">const</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">lang</span><span style="color:#859900;">:</span><span style="color:#657B83;"> </span><span style="color:#CB4B16;">FrontLanguage</span><span style="color:#657B83;"> </span><span style="color:#859900;">=</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">FrontLanguage</span><span style="color:#657B83;">.</span><span style="color:#268BD2;">JAVASCRIPT</span></span>
<span class="line"><span style="color:#268BD2;">console</span><span style="color:#657B83;">.</span><span style="color:#268BD2;">log</span><span style="color:#657B83;">(</span><span style="color:#268BD2;">lang</span><span style="color:#657B83;">) </span><span style="color:#93A1A1;font-style:italic;">// js</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br></div></div><h3 id="array-类型" tabindex="-1">Array 类型 <a class="header-anchor" href="#array-类型" aria-label="Permalink to &quot;Array 类型&quot;">​</a></h3><div class="language-ts vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki solarized-dark vp-code-dark"><code><span class="line"><span style="color:#93A1A1;font-weight:bold;">const</span><span style="color:#839496;"> </span><span style="color:#268BD2;">arr</span><span style="color:#859900;">:</span><span style="color:#839496;"> </span><span style="color:#859900;">any</span><span style="color:#839496;">[] </span><span style="color:#859900;">=</span><span style="color:#839496;"> [</span><span style="color:#D33682;">1</span><span style="color:#839496;">, </span><span style="color:#2AA198;">&#39;2&#39;</span><span style="color:#839496;">, {}]</span></span>
<span class="line"><span style="color:#93A1A1;font-weight:bold;">const</span><span style="color:#839496;"> </span><span style="color:#268BD2;">arr1</span><span style="color:#859900;">:</span><span style="color:#839496;"> </span><span style="color:#CB4B16;">Array</span><span style="color:#839496;">&lt;</span><span style="color:#859900;">any</span><span style="color:#839496;">&gt; </span><span style="color:#859900;">=</span><span style="color:#839496;"> [</span><span style="color:#D33682;">1</span><span style="color:#839496;">, </span><span style="color:#2AA198;">&#39;2&#39;</span><span style="color:#839496;">, {}]</span></span></code></pre><pre class="shiki solarized-light vp-code-light"><code><span class="line"><span style="color:#586E75;font-weight:bold;">const</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">arr</span><span style="color:#859900;">:</span><span style="color:#657B83;"> </span><span style="color:#859900;">any</span><span style="color:#657B83;">[] </span><span style="color:#859900;">=</span><span style="color:#657B83;"> [</span><span style="color:#D33682;">1</span><span style="color:#657B83;">, </span><span style="color:#2AA198;">&#39;2&#39;</span><span style="color:#657B83;">, {}]</span></span>
<span class="line"><span style="color:#586E75;font-weight:bold;">const</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">arr1</span><span style="color:#859900;">:</span><span style="color:#657B83;"> </span><span style="color:#CB4B16;">Array</span><span style="color:#657B83;">&lt;</span><span style="color:#859900;">any</span><span style="color:#657B83;">&gt; </span><span style="color:#859900;">=</span><span style="color:#657B83;"> [</span><span style="color:#D33682;">1</span><span style="color:#657B83;">, </span><span style="color:#2AA198;">&#39;2&#39;</span><span style="color:#657B83;">, {}]</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><h3 id="tuple-类型" tabindex="-1">Tuple 类型 <a class="header-anchor" href="#tuple-类型" aria-label="Permalink to &quot;Tuple 类型&quot;">​</a></h3><p>元组（ Tuple ）表示一个已知数量和类型的数组,可以理解为它是一种特殊的数组</p><div class="language-ts vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki solarized-dark vp-code-dark"><code><span class="line"><span style="color:#93A1A1;font-weight:bold;">const</span><span style="color:#839496;"> </span><span style="color:#268BD2;">tuple</span><span style="color:#859900;">:</span><span style="color:#839496;"> [</span><span style="color:#859900;">number</span><span style="color:#839496;">, </span><span style="color:#859900;">string</span><span style="color:#839496;">] </span><span style="color:#859900;">=</span><span style="color:#839496;"> [</span><span style="color:#D33682;">1</span><span style="color:#839496;">, </span><span style="color:#2AA198;">&#39;&#39;</span><span style="color:#839496;">]</span></span></code></pre><pre class="shiki solarized-light vp-code-light"><code><span class="line"><span style="color:#586E75;font-weight:bold;">const</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">tuple</span><span style="color:#859900;">:</span><span style="color:#657B83;"> [</span><span style="color:#859900;">number</span><span style="color:#657B83;">, </span><span style="color:#859900;">string</span><span style="color:#657B83;">] </span><span style="color:#859900;">=</span><span style="color:#657B83;"> [</span><span style="color:#D33682;">1</span><span style="color:#657B83;">, </span><span style="color:#2AA198;">&#39;&#39;</span><span style="color:#657B83;">]</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><blockquote><p>需要注意的是，元组类型只能表示一个已知元素数量和类型的数组，长度已指定，越界访问会提示错误。例如，一个数组中可能有多种类型，数量和类型都不确定，那就直接any[]。</p></blockquote><h3 id="undefined-and-null-类型" tabindex="-1">Undefined and Null 类型 <a class="header-anchor" href="#undefined-and-null-类型" aria-label="Permalink to &quot;Undefined and Null 类型&quot;">​</a></h3><p>默认情况下 null 和 undefined 是所有类型的子类型。 也就是说你可以把 null 和 undefined 赋值给其他类型。</p><div class="language-ts vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki solarized-dark vp-code-dark"><code><span class="line"><span style="color:#93A1A1;font-weight:bold;">const</span><span style="color:#839496;"> </span><span style="color:#268BD2;">a</span><span style="color:#859900;">:</span><span style="color:#839496;"> </span><span style="color:#859900;">undefined</span></span>
<span class="line"><span style="color:#93A1A1;font-weight:bold;">const</span><span style="color:#839496;"> </span><span style="color:#268BD2;">b</span><span style="color:#859900;">:</span><span style="color:#839496;"> </span><span style="color:#859900;">null</span><span style="color:#839496;"> </span><span style="color:#859900;">=</span><span style="color:#839496;"> </span><span style="color:#B58900;">null</span></span>
<span class="line"><span style="color:#93A1A1;font-weight:bold;">let</span><span style="color:#839496;"> </span><span style="color:#268BD2;">str</span><span style="color:#859900;">:</span><span style="color:#839496;"> </span><span style="color:#859900;">string</span><span style="color:#839496;"> </span><span style="color:#859900;">=</span><span style="color:#839496;"> </span><span style="color:#2AA198;">&#39;ts&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#268BD2;">str</span><span style="color:#839496;"> </span><span style="color:#859900;">=</span><span style="color:#839496;"> </span><span style="color:#B58900;">null</span></span>
<span class="line"><span style="color:#268BD2;">str</span><span style="color:#839496;"> </span><span style="color:#859900;">=</span><span style="color:#839496;"> </span><span style="color:#B58900;">undefined</span></span></code></pre><pre class="shiki solarized-light vp-code-light"><code><span class="line"><span style="color:#586E75;font-weight:bold;">const</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">a</span><span style="color:#859900;">:</span><span style="color:#657B83;"> </span><span style="color:#859900;">undefined</span></span>
<span class="line"><span style="color:#586E75;font-weight:bold;">const</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">b</span><span style="color:#859900;">:</span><span style="color:#657B83;"> </span><span style="color:#859900;">null</span><span style="color:#657B83;"> </span><span style="color:#859900;">=</span><span style="color:#657B83;"> </span><span style="color:#B58900;">null</span></span>
<span class="line"><span style="color:#586E75;font-weight:bold;">let</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">str</span><span style="color:#859900;">:</span><span style="color:#657B83;"> </span><span style="color:#859900;">string</span><span style="color:#657B83;"> </span><span style="color:#859900;">=</span><span style="color:#657B83;"> </span><span style="color:#2AA198;">&#39;ts&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#268BD2;">str</span><span style="color:#657B83;"> </span><span style="color:#859900;">=</span><span style="color:#657B83;"> </span><span style="color:#B58900;">null</span></span>
<span class="line"><span style="color:#268BD2;">str</span><span style="color:#657B83;"> </span><span style="color:#859900;">=</span><span style="color:#657B83;"> </span><span style="color:#B58900;">undefined</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><p>如果你在tsconfig.json指定了&quot;strictNullChecks&quot;:true。<em><strong>null 和 undefined 只能赋值给 void 和它们各自的类型。</strong></em></p><div class="language-ts vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki solarized-dark vp-code-dark"><code><span class="line"><span style="color:#586E75;font-style:italic;">// 启用 --strictNullChecks</span></span>
<span class="line"><span style="color:#93A1A1;font-weight:bold;">let</span><span style="color:#839496;"> </span><span style="color:#268BD2;">x</span><span style="color:#859900;">:</span><span style="color:#839496;"> </span><span style="color:#859900;">number</span></span>
<span class="line"><span style="color:#268BD2;">x</span><span style="color:#839496;"> </span><span style="color:#859900;">=</span><span style="color:#839496;"> </span><span style="color:#D33682;">1</span><span style="color:#839496;"> </span><span style="color:#586E75;font-style:italic;">// ✅</span></span>
<span class="line"><span style="color:#268BD2;">x</span><span style="color:#839496;"> </span><span style="color:#859900;">=</span><span style="color:#839496;"> </span><span style="color:#B58900;">undefined</span><span style="color:#839496;"> </span><span style="color:#586E75;font-style:italic;">// ❌</span></span>
<span class="line"><span style="color:#268BD2;">x</span><span style="color:#839496;"> </span><span style="color:#859900;">=</span><span style="color:#839496;"> </span><span style="color:#B58900;">null</span><span style="color:#839496;"> </span><span style="color:#586E75;font-style:italic;">// ❌</span></span>
<span class="line"></span>
<span class="line"><span style="color:#93A1A1;font-weight:bold;">const</span><span style="color:#839496;"> </span><span style="color:#268BD2;">c</span><span style="color:#859900;">:</span><span style="color:#839496;"> </span><span style="color:#859900;">void</span><span style="color:#839496;"> </span><span style="color:#859900;">=</span><span style="color:#839496;"> </span><span style="color:#B58900;">undefined</span><span style="color:#839496;"> </span><span style="color:#586E75;font-style:italic;">// ✅</span></span>
<span class="line"><span style="color:#93A1A1;font-weight:bold;">const</span><span style="color:#839496;"> </span><span style="color:#268BD2;">d</span><span style="color:#859900;">:</span><span style="color:#839496;"> </span><span style="color:#859900;">void</span><span style="color:#839496;"> </span><span style="color:#859900;">=</span><span style="color:#839496;"> </span><span style="color:#B58900;">null</span><span style="color:#839496;"> </span><span style="color:#586E75;font-style:italic;">// ❌</span></span></code></pre><pre class="shiki solarized-light vp-code-light"><code><span class="line"><span style="color:#93A1A1;font-style:italic;">// 启用 --strictNullChecks</span></span>
<span class="line"><span style="color:#586E75;font-weight:bold;">let</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">x</span><span style="color:#859900;">:</span><span style="color:#657B83;"> </span><span style="color:#859900;">number</span></span>
<span class="line"><span style="color:#268BD2;">x</span><span style="color:#657B83;"> </span><span style="color:#859900;">=</span><span style="color:#657B83;"> </span><span style="color:#D33682;">1</span><span style="color:#657B83;"> </span><span style="color:#93A1A1;font-style:italic;">// ✅</span></span>
<span class="line"><span style="color:#268BD2;">x</span><span style="color:#657B83;"> </span><span style="color:#859900;">=</span><span style="color:#657B83;"> </span><span style="color:#B58900;">undefined</span><span style="color:#657B83;"> </span><span style="color:#93A1A1;font-style:italic;">// ❌</span></span>
<span class="line"><span style="color:#268BD2;">x</span><span style="color:#657B83;"> </span><span style="color:#859900;">=</span><span style="color:#657B83;"> </span><span style="color:#B58900;">null</span><span style="color:#657B83;"> </span><span style="color:#93A1A1;font-style:italic;">// ❌</span></span>
<span class="line"></span>
<span class="line"><span style="color:#586E75;font-weight:bold;">const</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">c</span><span style="color:#859900;">:</span><span style="color:#657B83;"> </span><span style="color:#859900;">void</span><span style="color:#657B83;"> </span><span style="color:#859900;">=</span><span style="color:#657B83;"> </span><span style="color:#B58900;">undefined</span><span style="color:#657B83;"> </span><span style="color:#93A1A1;font-style:italic;">// ✅</span></span>
<span class="line"><span style="color:#586E75;font-weight:bold;">const</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">d</span><span style="color:#859900;">:</span><span style="color:#657B83;"> </span><span style="color:#859900;">void</span><span style="color:#657B83;"> </span><span style="color:#859900;">=</span><span style="color:#657B83;"> </span><span style="color:#B58900;">null</span><span style="color:#657B83;"> </span><span style="color:#93A1A1;font-style:italic;">// ❌</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div><h3 id="any-and-unknown-类型" tabindex="-1">Any and Unknown 类型 <a class="header-anchor" href="#any-and-unknown-类型" aria-label="Permalink to &quot;Any and Unknown 类型&quot;">​</a></h3><div class="language-ts vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki solarized-dark vp-code-dark"><code><span class="line"><span style="color:#586E75;font-style:italic;">// let x: any</span></span>
<span class="line"><span style="color:#93A1A1;font-weight:bold;">let</span><span style="color:#839496;"> </span><span style="color:#268BD2;">x</span><span style="color:#859900;">:</span><span style="color:#839496;"> </span><span style="color:#859900;">unknown</span><span style="color:#839496;"> </span><span style="color:#859900;">=</span><span style="color:#839496;"> </span><span style="color:#D33682;">1</span></span>
<span class="line"><span style="color:#268BD2;">x</span><span style="color:#839496;"> </span><span style="color:#859900;">=</span><span style="color:#839496;"> </span><span style="color:#2AA198;">&#39;ts&#39;</span></span>
<span class="line"><span style="color:#268BD2;">x</span><span style="color:#839496;"> </span><span style="color:#859900;">=</span><span style="color:#839496;"> </span><span style="color:#D33682;">123</span></span></code></pre><pre class="shiki solarized-light vp-code-light"><code><span class="line"><span style="color:#93A1A1;font-style:italic;">// let x: any</span></span>
<span class="line"><span style="color:#586E75;font-weight:bold;">let</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">x</span><span style="color:#859900;">:</span><span style="color:#657B83;"> </span><span style="color:#859900;">unknown</span><span style="color:#657B83;"> </span><span style="color:#859900;">=</span><span style="color:#657B83;"> </span><span style="color:#D33682;">1</span></span>
<span class="line"><span style="color:#268BD2;">x</span><span style="color:#657B83;"> </span><span style="color:#859900;">=</span><span style="color:#657B83;"> </span><span style="color:#2AA198;">&#39;ts&#39;</span></span>
<span class="line"><span style="color:#268BD2;">x</span><span style="color:#657B83;"> </span><span style="color:#859900;">=</span><span style="color:#657B83;"> </span><span style="color:#D33682;">123</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><p>any 和 unknown 的区别</p><blockquote><p>任何类型的值可以赋值给any，同时any类型的值也可以赋值给任何类型。unknown 任何类型的值都可以赋值给它，但它只能赋值给unknown和any</p></blockquote><h3 id="void-类型" tabindex="-1">Void 类型 <a class="header-anchor" href="#void-类型" aria-label="Permalink to &quot;Void 类型&quot;">​</a></h3><p>void 意思就是无效的, 一般只用在函数上，表示这个函数没有返回值。</p><div class="language-ts vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki solarized-dark vp-code-dark"><code><span class="line"><span style="color:#93A1A1;font-weight:bold;">function</span><span style="color:#839496;"> </span><span style="color:#268BD2;">test</span><span style="color:#839496;">()</span><span style="color:#859900;">:</span><span style="color:#839496;"> </span><span style="color:#859900;">void</span><span style="color:#839496;"> {</span></span>
<span class="line"><span style="color:#839496;">  </span><span style="color:#268BD2;">console</span><span style="color:#839496;">.</span><span style="color:#268BD2;">log</span><span style="color:#839496;">(</span><span style="color:#2AA198;">&#39;ts&#39;</span><span style="color:#839496;">)</span></span>
<span class="line"><span style="color:#839496;">}</span></span></code></pre><pre class="shiki solarized-light vp-code-light"><code><span class="line"><span style="color:#586E75;font-weight:bold;">function</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">test</span><span style="color:#657B83;">()</span><span style="color:#859900;">:</span><span style="color:#657B83;"> </span><span style="color:#859900;">void</span><span style="color:#657B83;"> {</span></span>
<span class="line"><span style="color:#657B83;">  </span><span style="color:#268BD2;">console</span><span style="color:#657B83;">.</span><span style="color:#268BD2;">log</span><span style="color:#657B83;">(</span><span style="color:#2AA198;">&#39;ts&#39;</span><span style="color:#657B83;">)</span></span>
<span class="line"><span style="color:#657B83;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><h3 id="never-类型" tabindex="-1">Never 类型 <a class="header-anchor" href="#never-类型" aria-label="Permalink to &quot;Never 类型&quot;">​</a></h3><p>never 类型表示的是那些永不存在的值的类型。 例如never 类型是那些总是会抛出异常或根本就不会有返回值的函数表达式或箭头函数表达式的返回值类型</p><div class="language-ts vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki solarized-dark vp-code-dark"><code><span class="line"><span style="color:#586E75;font-style:italic;">// 异常</span></span>
<span class="line"><span style="color:#93A1A1;font-weight:bold;">function</span><span style="color:#839496;"> </span><span style="color:#268BD2;">error</span><span style="color:#839496;">(msg</span><span style="color:#859900;">:</span><span style="color:#839496;"> </span><span style="color:#859900;">string</span><span style="color:#839496;">)</span><span style="color:#859900;">:</span><span style="color:#839496;"> </span><span style="color:#859900;">never</span><span style="color:#839496;"> {</span></span>
<span class="line"><span style="color:#839496;">  </span><span style="color:#859900;">throw</span><span style="color:#839496;"> </span><span style="color:#859900;">new</span><span style="color:#839496;"> </span><span style="color:#268BD2;">Error</span><span style="color:#839496;">(</span><span style="color:#268BD2;">msg</span><span style="color:#839496;">)</span></span>
<span class="line"><span style="color:#839496;">}</span></span></code></pre><pre class="shiki solarized-light vp-code-light"><code><span class="line"><span style="color:#93A1A1;font-style:italic;">// 异常</span></span>
<span class="line"><span style="color:#586E75;font-weight:bold;">function</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">error</span><span style="color:#657B83;">(msg</span><span style="color:#859900;">:</span><span style="color:#657B83;"> </span><span style="color:#859900;">string</span><span style="color:#657B83;">)</span><span style="color:#859900;">:</span><span style="color:#657B83;"> </span><span style="color:#859900;">never</span><span style="color:#657B83;"> {</span></span>
<span class="line"><span style="color:#657B83;">  </span><span style="color:#859900;">throw</span><span style="color:#657B83;"> </span><span style="color:#859900;">new</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">Error</span><span style="color:#657B83;">(</span><span style="color:#268BD2;">msg</span><span style="color:#657B83;">)</span></span>
<span class="line"><span style="color:#657B83;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><h2 id="联合类型" tabindex="-1">联合类型 <a class="header-anchor" href="#联合类型" aria-label="Permalink to &quot;联合类型&quot;">​</a></h2>`,35),B=n(`<div class="language-ts vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki solarized-dark vp-code-dark"><code><span class="line"><span style="color:#93A1A1;font-weight:bold;">const</span><span style="color:#839496;"> </span><span style="color:#268BD2;">x</span><span style="color:#859900;">:</span><span style="color:#839496;"> </span><span style="color:#859900;">number</span><span style="color:#839496;"> </span><span style="color:#859900;">|</span><span style="color:#839496;"> </span><span style="color:#859900;">string</span></span></code></pre><pre class="shiki solarized-light vp-code-light"><code><span class="line"><span style="color:#586E75;font-weight:bold;">const</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">x</span><span style="color:#859900;">:</span><span style="color:#657B83;"> </span><span style="color:#859900;">number</span><span style="color:#657B83;"> </span><span style="color:#859900;">|</span><span style="color:#657B83;"> </span><span style="color:#859900;">string</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><h2 id="类型别名" tabindex="-1">类型别名 <a class="header-anchor" href="#类型别名" aria-label="Permalink to &quot;类型别名&quot;">​</a></h2><p>类型别名用来给一个类型起个新名字。它只是起了一个新名字，并没有创建新类型。类型别名常用于联合类型。</p><div class="language-ts vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki solarized-dark vp-code-dark"><code><span class="line"><span style="color:#93A1A1;font-weight:bold;">type</span><span style="color:#839496;"> </span><span style="color:#CB4B16;">TCount</span><span style="color:#839496;"> </span><span style="color:#859900;">=</span><span style="color:#839496;"> </span><span style="color:#859900;">number</span><span style="color:#839496;"> </span><span style="color:#859900;">|</span><span style="color:#839496;"> </span><span style="color:#859900;">number</span><span style="color:#839496;">[]</span></span>
<span class="line"><span style="color:#93A1A1;font-weight:bold;">function</span><span style="color:#839496;"> </span><span style="color:#268BD2;">getCount</span><span style="color:#839496;">(count</span><span style="color:#859900;">:</span><span style="color:#839496;"> </span><span style="color:#CB4B16;">TCount</span><span style="color:#839496;">)</span><span style="color:#859900;">:</span><span style="color:#839496;"> </span><span style="color:#859900;">number</span><span style="color:#839496;"> {</span></span>
<span class="line"><span style="color:#839496;">  </span><span style="color:#859900;">if</span><span style="color:#839496;"> (</span><span style="color:#268BD2;">Array</span><span style="color:#839496;">.</span><span style="color:#268BD2;">isArray</span><span style="color:#839496;">(</span><span style="color:#268BD2;">count</span><span style="color:#839496;">))</span></span>
<span class="line"><span style="color:#839496;">    </span><span style="color:#859900;">return</span><span style="color:#839496;"> </span><span style="color:#268BD2;">count</span><span style="color:#839496;">.</span><span style="color:#268BD2;">reduce</span><span style="color:#839496;">((acc, cur) </span><span style="color:#93A1A1;font-weight:bold;">=&gt;</span><span style="color:#839496;"> </span><span style="color:#268BD2;">acc</span><span style="color:#839496;"> </span><span style="color:#859900;">+</span><span style="color:#839496;"> </span><span style="color:#268BD2;">cur</span><span style="color:#839496;">, </span><span style="color:#D33682;">0</span><span style="color:#839496;">)</span></span>
<span class="line"><span style="color:#839496;">  </span><span style="color:#859900;">return</span><span style="color:#839496;"> </span><span style="color:#268BD2;">count</span></span>
<span class="line"><span style="color:#839496;">}</span></span></code></pre><pre class="shiki solarized-light vp-code-light"><code><span class="line"><span style="color:#586E75;font-weight:bold;">type</span><span style="color:#657B83;"> </span><span style="color:#CB4B16;">TCount</span><span style="color:#657B83;"> </span><span style="color:#859900;">=</span><span style="color:#657B83;"> </span><span style="color:#859900;">number</span><span style="color:#657B83;"> </span><span style="color:#859900;">|</span><span style="color:#657B83;"> </span><span style="color:#859900;">number</span><span style="color:#657B83;">[]</span></span>
<span class="line"><span style="color:#586E75;font-weight:bold;">function</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">getCount</span><span style="color:#657B83;">(count</span><span style="color:#859900;">:</span><span style="color:#657B83;"> </span><span style="color:#CB4B16;">TCount</span><span style="color:#657B83;">)</span><span style="color:#859900;">:</span><span style="color:#657B83;"> </span><span style="color:#859900;">number</span><span style="color:#657B83;"> {</span></span>
<span class="line"><span style="color:#657B83;">  </span><span style="color:#859900;">if</span><span style="color:#657B83;"> (</span><span style="color:#268BD2;">Array</span><span style="color:#657B83;">.</span><span style="color:#268BD2;">isArray</span><span style="color:#657B83;">(</span><span style="color:#268BD2;">count</span><span style="color:#657B83;">))</span></span>
<span class="line"><span style="color:#657B83;">    </span><span style="color:#859900;">return</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">count</span><span style="color:#657B83;">.</span><span style="color:#268BD2;">reduce</span><span style="color:#657B83;">((acc, cur) </span><span style="color:#586E75;font-weight:bold;">=&gt;</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">acc</span><span style="color:#657B83;"> </span><span style="color:#859900;">+</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">cur</span><span style="color:#657B83;">, </span><span style="color:#D33682;">0</span><span style="color:#657B83;">)</span></span>
<span class="line"><span style="color:#657B83;">  </span><span style="color:#859900;">return</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">count</span></span>
<span class="line"><span style="color:#657B83;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><h2 id="交叉类型" tabindex="-1">交叉类型 <a class="header-anchor" href="#交叉类型" aria-label="Permalink to &quot;交叉类型&quot;">​</a></h2>`,5),u=n(`<div class="language-ts vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki solarized-dark vp-code-dark"><code><span class="line"><span style="color:#93A1A1;font-weight:bold;">interface</span><span style="color:#839496;"> </span><span style="color:#CB4B16;">IOption</span><span style="color:#839496;"> {</span></span>
<span class="line"><span style="color:#839496;">  label</span><span style="color:#859900;">:</span><span style="color:#839496;"> </span><span style="color:#859900;">string</span></span>
<span class="line"><span style="color:#839496;">  value</span><span style="color:#859900;">:</span><span style="color:#839496;"> </span><span style="color:#859900;">string</span></span>
<span class="line"><span style="color:#839496;">}</span></span>
<span class="line"><span style="color:#93A1A1;font-weight:bold;">interface</span><span style="color:#839496;"> </span><span style="color:#CB4B16;">IState</span><span style="color:#839496;"> {</span></span>
<span class="line"><span style="color:#839496;">  disabled</span><span style="color:#859900;">?:</span><span style="color:#839496;"> </span><span style="color:#859900;">boolean</span></span>
<span class="line"><span style="color:#839496;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#93A1A1;font-weight:bold;">const</span><span style="color:#839496;"> </span><span style="color:#268BD2;">item</span><span style="color:#859900;">:</span><span style="color:#839496;"> </span><span style="color:#CB4B16;">IOption</span><span style="color:#839496;"> </span><span style="color:#859900;">&amp;</span><span style="color:#839496;"> </span><span style="color:#CB4B16;">IState</span><span style="color:#839496;"> </span><span style="color:#859900;">=</span><span style="color:#839496;"> {</span></span>
<span class="line"><span style="color:#839496;">  label: </span><span style="color:#2AA198;">&#39;ts&#39;</span><span style="color:#839496;">,</span></span>
<span class="line"><span style="color:#839496;">  value: </span><span style="color:#2AA198;">&#39;ts&#39;</span><span style="color:#839496;">,</span></span>
<span class="line"><span style="color:#839496;">}</span></span></code></pre><pre class="shiki solarized-light vp-code-light"><code><span class="line"><span style="color:#586E75;font-weight:bold;">interface</span><span style="color:#657B83;"> </span><span style="color:#CB4B16;">IOption</span><span style="color:#657B83;"> {</span></span>
<span class="line"><span style="color:#657B83;">  label</span><span style="color:#859900;">:</span><span style="color:#657B83;"> </span><span style="color:#859900;">string</span></span>
<span class="line"><span style="color:#657B83;">  value</span><span style="color:#859900;">:</span><span style="color:#657B83;"> </span><span style="color:#859900;">string</span></span>
<span class="line"><span style="color:#657B83;">}</span></span>
<span class="line"><span style="color:#586E75;font-weight:bold;">interface</span><span style="color:#657B83;"> </span><span style="color:#CB4B16;">IState</span><span style="color:#657B83;"> {</span></span>
<span class="line"><span style="color:#657B83;">  disabled</span><span style="color:#859900;">?:</span><span style="color:#657B83;"> </span><span style="color:#859900;">boolean</span></span>
<span class="line"><span style="color:#657B83;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#586E75;font-weight:bold;">const</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">item</span><span style="color:#859900;">:</span><span style="color:#657B83;"> </span><span style="color:#CB4B16;">IOption</span><span style="color:#657B83;"> </span><span style="color:#859900;">&amp;</span><span style="color:#657B83;"> </span><span style="color:#CB4B16;">IState</span><span style="color:#657B83;"> </span><span style="color:#859900;">=</span><span style="color:#657B83;"> {</span></span>
<span class="line"><span style="color:#657B83;">  label: </span><span style="color:#2AA198;">&#39;ts&#39;</span><span style="color:#657B83;">,</span></span>
<span class="line"><span style="color:#657B83;">  value: </span><span style="color:#2AA198;">&#39;ts&#39;</span><span style="color:#657B83;">,</span></span>
<span class="line"><span style="color:#657B83;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br></div></div><h2 id="类型断言" tabindex="-1">类型断言 <a class="header-anchor" href="#类型断言" aria-label="Permalink to &quot;类型断言&quot;">​</a></h2><p>某些情况下我们可能比 <code>typescript</code> 更加清楚的知道某个变量的类型，所以我们可能希望手动指定一个值的类型</p><p>类型断言有两种方式</p><div class="language-ts vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki solarized-dark vp-code-dark"><code><span class="line"><span style="color:#93A1A1;font-weight:bold;">const</span><span style="color:#839496;"> </span><span style="color:#268BD2;">str</span><span style="color:#859900;">:</span><span style="color:#839496;"> </span><span style="color:#859900;">any</span><span style="color:#839496;"> </span><span style="color:#859900;">=</span><span style="color:#839496;"> </span><span style="color:#2AA198;">&#39;ts&#39;</span></span>
<span class="line"><span style="color:#586E75;font-style:italic;">// 方式一</span></span>
<span class="line"><span style="color:#93A1A1;font-weight:bold;">const</span><span style="color:#839496;"> </span><span style="color:#268BD2;">strLen</span><span style="color:#859900;">:</span><span style="color:#839496;"> </span><span style="color:#859900;">number</span><span style="color:#839496;"> </span><span style="color:#859900;">=</span><span style="color:#839496;"> (&lt;</span><span style="color:#859900;">string</span><span style="color:#839496;">&gt;</span><span style="color:#268BD2;">str</span><span style="color:#839496;">).length</span></span>
<span class="line"><span style="color:#586E75;font-style:italic;">// 方式二</span></span>
<span class="line"><span style="color:#93A1A1;font-weight:bold;">const</span><span style="color:#839496;"> </span><span style="color:#268BD2;">len</span><span style="color:#859900;">:</span><span style="color:#839496;"> </span><span style="color:#859900;">number</span><span style="color:#839496;"> </span><span style="color:#859900;">=</span><span style="color:#839496;"> (</span><span style="color:#268BD2;">str</span><span style="color:#839496;"> </span><span style="color:#859900;">as</span><span style="color:#839496;"> </span><span style="color:#859900;">string</span><span style="color:#839496;">).length</span></span></code></pre><pre class="shiki solarized-light vp-code-light"><code><span class="line"><span style="color:#586E75;font-weight:bold;">const</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">str</span><span style="color:#859900;">:</span><span style="color:#657B83;"> </span><span style="color:#859900;">any</span><span style="color:#657B83;"> </span><span style="color:#859900;">=</span><span style="color:#657B83;"> </span><span style="color:#2AA198;">&#39;ts&#39;</span></span>
<span class="line"><span style="color:#93A1A1;font-style:italic;">// 方式一</span></span>
<span class="line"><span style="color:#586E75;font-weight:bold;">const</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">strLen</span><span style="color:#859900;">:</span><span style="color:#657B83;"> </span><span style="color:#859900;">number</span><span style="color:#657B83;"> </span><span style="color:#859900;">=</span><span style="color:#657B83;"> (&lt;</span><span style="color:#859900;">string</span><span style="color:#657B83;">&gt;</span><span style="color:#268BD2;">str</span><span style="color:#657B83;">).length</span></span>
<span class="line"><span style="color:#93A1A1;font-style:italic;">// 方式二</span></span>
<span class="line"><span style="color:#586E75;font-weight:bold;">const</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">len</span><span style="color:#859900;">:</span><span style="color:#657B83;"> </span><span style="color:#859900;">number</span><span style="color:#657B83;"> </span><span style="color:#859900;">=</span><span style="color:#657B83;"> (</span><span style="color:#268BD2;">str</span><span style="color:#657B83;"> </span><span style="color:#859900;">as</span><span style="color:#657B83;"> </span><span style="color:#859900;">string</span><span style="color:#657B83;">).length</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><h2 id="泛型" tabindex="-1">泛型 <a class="header-anchor" href="#泛型" aria-label="Permalink to &quot;泛型&quot;">​</a></h2><h3 id="泛型工具类型" tabindex="-1">泛型工具类型 <a class="header-anchor" href="#泛型工具类型" aria-label="Permalink to &quot;泛型工具类型&quot;">​</a></h3><ul><li>typeof</li></ul><p>类型推导</p><div class="language-ts vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki solarized-dark vp-code-dark"><code><span class="line"><span style="color:#93A1A1;font-weight:bold;">const</span><span style="color:#839496;"> </span><span style="color:#268BD2;">info</span><span style="color:#839496;"> </span><span style="color:#859900;">=</span><span style="color:#839496;"> {</span></span>
<span class="line"><span style="color:#839496;">  lang: </span><span style="color:#2AA198;">&#39;ts&#39;</span><span style="color:#839496;">,</span></span>
<span class="line"><span style="color:#839496;">  type: </span><span style="color:#2AA198;">&#39;md&#39;</span></span>
<span class="line"><span style="color:#839496;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#93A1A1;font-weight:bold;">type</span><span style="color:#839496;"> </span><span style="color:#CB4B16;">TInfo</span><span style="color:#839496;"> </span><span style="color:#859900;">=</span><span style="color:#839496;"> </span><span style="color:#859900;">typeof</span><span style="color:#839496;"> </span><span style="color:#268BD2;">info</span></span>
<span class="line"><span style="color:#93A1A1;font-weight:bold;">function</span><span style="color:#839496;"> </span><span style="color:#268BD2;">getInfo</span><span style="color:#839496;">(info</span><span style="color:#859900;">:</span><span style="color:#839496;"> </span><span style="color:#CB4B16;">TInfo</span><span style="color:#839496;">)</span><span style="color:#859900;">:</span><span style="color:#839496;"> </span><span style="color:#859900;">string</span><span style="color:#839496;"> {</span></span>
<span class="line"><span style="color:#839496;">  </span><span style="color:#859900;">return</span><span style="color:#839496;"> </span><span style="color:#268BD2;">info</span><span style="color:#839496;">.</span><span style="color:#268BD2;">lang</span></span>
<span class="line"><span style="color:#839496;">}</span></span></code></pre><pre class="shiki solarized-light vp-code-light"><code><span class="line"><span style="color:#586E75;font-weight:bold;">const</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">info</span><span style="color:#657B83;"> </span><span style="color:#859900;">=</span><span style="color:#657B83;"> {</span></span>
<span class="line"><span style="color:#657B83;">  lang: </span><span style="color:#2AA198;">&#39;ts&#39;</span><span style="color:#657B83;">,</span></span>
<span class="line"><span style="color:#657B83;">  type: </span><span style="color:#2AA198;">&#39;md&#39;</span></span>
<span class="line"><span style="color:#657B83;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#586E75;font-weight:bold;">type</span><span style="color:#657B83;"> </span><span style="color:#CB4B16;">TInfo</span><span style="color:#657B83;"> </span><span style="color:#859900;">=</span><span style="color:#657B83;"> </span><span style="color:#859900;">typeof</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">info</span></span>
<span class="line"><span style="color:#586E75;font-weight:bold;">function</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">getInfo</span><span style="color:#657B83;">(info</span><span style="color:#859900;">:</span><span style="color:#657B83;"> </span><span style="color:#CB4B16;">TInfo</span><span style="color:#657B83;">)</span><span style="color:#859900;">:</span><span style="color:#657B83;"> </span><span style="color:#859900;">string</span><span style="color:#657B83;"> {</span></span>
<span class="line"><span style="color:#657B83;">  </span><span style="color:#859900;">return</span><span style="color:#657B83;"> </span><span style="color:#268BD2;">info</span><span style="color:#657B83;">.</span><span style="color:#268BD2;">lang</span></span>
<span class="line"><span style="color:#657B83;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br></div></div><ul><li>keyof</li></ul><p>获取一个对象接口中的所有 key 值</p><div class="language-ts vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki solarized-dark vp-code-dark"><code><span class="line"><span style="color:#93A1A1;font-weight:bold;">interface</span><span style="color:#839496;"> </span><span style="color:#CB4B16;">TInfo</span><span style="color:#839496;"> {</span></span>
<span class="line"><span style="color:#839496;">  lang</span><span style="color:#859900;">:</span><span style="color:#839496;"> </span><span style="color:#2AA198;">&#39;ts&#39;</span><span style="color:#839496;"> </span><span style="color:#859900;">|</span><span style="color:#839496;"> </span><span style="color:#2AA198;">&#39;js&#39;</span></span>
<span class="line"><span style="color:#839496;">  type</span><span style="color:#859900;">:</span><span style="color:#839496;"> </span><span style="color:#859900;">string</span></span>
<span class="line"><span style="color:#839496;">}</span></span>
<span class="line"><span style="color:#93A1A1;font-weight:bold;">type</span><span style="color:#839496;"> </span><span style="color:#CB4B16;">TInfoKey</span><span style="color:#839496;"> </span><span style="color:#859900;">=</span><span style="color:#839496;"> </span><span style="color:#859900;">keyof</span><span style="color:#839496;"> </span><span style="color:#CB4B16;">TInfo</span><span style="color:#839496;"> </span><span style="color:#586E75;font-style:italic;">// &quot;lang&quot; | &quot;type&quot;</span></span></code></pre><pre class="shiki solarized-light vp-code-light"><code><span class="line"><span style="color:#586E75;font-weight:bold;">interface</span><span style="color:#657B83;"> </span><span style="color:#CB4B16;">TInfo</span><span style="color:#657B83;"> {</span></span>
<span class="line"><span style="color:#657B83;">  lang</span><span style="color:#859900;">:</span><span style="color:#657B83;"> </span><span style="color:#2AA198;">&#39;ts&#39;</span><span style="color:#657B83;"> </span><span style="color:#859900;">|</span><span style="color:#657B83;"> </span><span style="color:#2AA198;">&#39;js&#39;</span></span>
<span class="line"><span style="color:#657B83;">  type</span><span style="color:#859900;">:</span><span style="color:#657B83;"> </span><span style="color:#859900;">string</span></span>
<span class="line"><span style="color:#657B83;">}</span></span>
<span class="line"><span style="color:#586E75;font-weight:bold;">type</span><span style="color:#657B83;"> </span><span style="color:#CB4B16;">TInfoKey</span><span style="color:#657B83;"> </span><span style="color:#859900;">=</span><span style="color:#657B83;"> </span><span style="color:#859900;">keyof</span><span style="color:#657B83;"> </span><span style="color:#CB4B16;">TInfo</span><span style="color:#657B83;"> </span><span style="color:#93A1A1;font-style:italic;">// &quot;lang&quot; | &quot;type&quot;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><ul><li>in</li></ul><p>用来遍历枚举类型</p><div class="language-ts vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki solarized-dark vp-code-dark"><code><span class="line"><span style="color:#93A1A1;font-weight:bold;">type</span><span style="color:#839496;"> </span><span style="color:#CB4B16;">TKey</span><span style="color:#839496;"> </span><span style="color:#859900;">=</span><span style="color:#839496;"> </span><span style="color:#2AA198;">&#39;lang&#39;</span><span style="color:#839496;"> </span><span style="color:#859900;">|</span><span style="color:#839496;"> </span><span style="color:#2AA198;">&#39;type&#39;</span><span style="color:#839496;"> </span><span style="color:#859900;">|</span><span style="color:#839496;"> </span><span style="color:#2AA198;">&#39;author&#39;</span></span>
<span class="line"><span style="color:#93A1A1;font-weight:bold;">type</span><span style="color:#839496;"> </span><span style="color:#CB4B16;">TInfo</span><span style="color:#839496;"> </span><span style="color:#859900;">=</span><span style="color:#839496;"> {</span></span>
<span class="line"><span style="color:#839496;">  [</span><span style="color:#CB4B16;">K</span><span style="color:#839496;"> </span><span style="color:#859900;">in</span><span style="color:#839496;"> </span><span style="color:#CB4B16;">TKey</span><span style="color:#839496;">]</span><span style="color:#859900;">:</span><span style="color:#839496;"> </span><span style="color:#CB4B16;">K</span><span style="color:#839496;"> </span><span style="color:#93A1A1;font-weight:bold;">extends</span><span style="color:#839496;"> </span><span style="color:#2AA198;">&#39;lang&#39;</span><span style="color:#839496;"> </span><span style="color:#859900;">?</span><span style="color:#839496;"> </span><span style="color:#2AA198;">&#39;ts&#39;</span><span style="color:#839496;"> </span><span style="color:#859900;">|</span><span style="color:#839496;"> </span><span style="color:#2AA198;">&#39;js&#39;</span><span style="color:#839496;"> </span><span style="color:#859900;">:</span><span style="color:#839496;"> </span><span style="color:#859900;">string</span></span>
<span class="line"><span style="color:#839496;">}</span></span></code></pre><pre class="shiki solarized-light vp-code-light"><code><span class="line"><span style="color:#586E75;font-weight:bold;">type</span><span style="color:#657B83;"> </span><span style="color:#CB4B16;">TKey</span><span style="color:#657B83;"> </span><span style="color:#859900;">=</span><span style="color:#657B83;"> </span><span style="color:#2AA198;">&#39;lang&#39;</span><span style="color:#657B83;"> </span><span style="color:#859900;">|</span><span style="color:#657B83;"> </span><span style="color:#2AA198;">&#39;type&#39;</span><span style="color:#657B83;"> </span><span style="color:#859900;">|</span><span style="color:#657B83;"> </span><span style="color:#2AA198;">&#39;author&#39;</span></span>
<span class="line"><span style="color:#586E75;font-weight:bold;">type</span><span style="color:#657B83;"> </span><span style="color:#CB4B16;">TInfo</span><span style="color:#657B83;"> </span><span style="color:#859900;">=</span><span style="color:#657B83;"> {</span></span>
<span class="line"><span style="color:#657B83;">  [</span><span style="color:#CB4B16;">K</span><span style="color:#657B83;"> </span><span style="color:#859900;">in</span><span style="color:#657B83;"> </span><span style="color:#CB4B16;">TKey</span><span style="color:#657B83;">]</span><span style="color:#859900;">:</span><span style="color:#657B83;"> </span><span style="color:#CB4B16;">K</span><span style="color:#657B83;"> </span><span style="color:#586E75;font-weight:bold;">extends</span><span style="color:#657B83;"> </span><span style="color:#2AA198;">&#39;lang&#39;</span><span style="color:#657B83;"> </span><span style="color:#859900;">?</span><span style="color:#657B83;"> </span><span style="color:#2AA198;">&#39;ts&#39;</span><span style="color:#657B83;"> </span><span style="color:#859900;">|</span><span style="color:#657B83;"> </span><span style="color:#2AA198;">&#39;js&#39;</span><span style="color:#657B83;"> </span><span style="color:#859900;">:</span><span style="color:#657B83;"> </span><span style="color:#859900;">string</span></span>
<span class="line"><span style="color:#657B83;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><ul><li>infer</li></ul><p>在条件类型语句中，可以用 <code>infer</code> 声明一个类型变量并且对它进行使用。</p><ol><li><code>infer</code> 只能在条件类型的 <code>extends</code> 子句中使用</li><li><code>infer</code> 得到的类型只能在 <code>true</code> 语句中使用</li></ol><div class="language-ts vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki solarized-dark vp-code-dark"><code><span class="line"><span style="color:#93A1A1;font-weight:bold;">type</span><span style="color:#839496;"> </span><span style="color:#CB4B16;">InferArray</span><span style="color:#839496;">&lt;</span><span style="color:#CB4B16;">T</span><span style="color:#839496;">&gt; </span><span style="color:#859900;">=</span><span style="color:#839496;"> </span><span style="color:#CB4B16;">T</span><span style="color:#839496;"> </span><span style="color:#93A1A1;font-weight:bold;">extends</span><span style="color:#839496;"> (</span><span style="color:#859900;">infer</span><span style="color:#839496;"> </span><span style="color:#CB4B16;">U</span><span style="color:#839496;">)[] </span><span style="color:#859900;">?</span><span style="color:#839496;"> </span><span style="color:#CB4B16;">U</span><span style="color:#839496;"> </span><span style="color:#859900;">:</span><span style="color:#839496;"> </span><span style="color:#859900;">never</span></span>
<span class="line"><span style="color:#93A1A1;font-weight:bold;">type</span><span style="color:#839496;"> </span><span style="color:#CB4B16;">InferFirst</span><span style="color:#839496;">&lt;</span><span style="color:#CB4B16;">T</span><span style="color:#839496;"> </span><span style="color:#93A1A1;font-weight:bold;">extends</span><span style="color:#839496;"> </span><span style="color:#859900;">unknown</span><span style="color:#839496;">[]&gt; </span><span style="color:#859900;">=</span><span style="color:#839496;"> </span><span style="color:#CB4B16;">T</span><span style="color:#839496;"> </span><span style="color:#93A1A1;font-weight:bold;">extends</span><span style="color:#839496;"> [</span><span style="color:#859900;">infer</span><span style="color:#839496;"> </span><span style="color:#CB4B16;">F</span><span style="color:#839496;">, </span><span style="color:#859900;">...infer</span><span style="color:#839496;"> </span><span style="color:#CB4B16;">_</span><span style="color:#839496;">] </span><span style="color:#859900;">?</span><span style="color:#839496;"> </span><span style="color:#CB4B16;">P</span><span style="color:#839496;"> </span><span style="color:#859900;">:</span><span style="color:#839496;"> </span><span style="color:#859900;">never</span></span>
<span class="line"><span style="color:#93A1A1;font-weight:bold;">type</span><span style="color:#839496;"> </span><span style="color:#CB4B16;">ReturnType</span><span style="color:#839496;">&lt;</span><span style="color:#CB4B16;">T</span><span style="color:#839496;">&gt; </span><span style="color:#859900;">=</span><span style="color:#839496;"> </span><span style="color:#CB4B16;">T</span><span style="color:#839496;"> </span><span style="color:#93A1A1;font-weight:bold;">extends</span><span style="color:#839496;"> (</span><span style="color:#859900;">...</span><span style="color:#839496;">arg</span><span style="color:#859900;">:</span><span style="color:#839496;"> </span><span style="color:#859900;">any</span><span style="color:#839496;">[]) </span><span style="color:#93A1A1;font-weight:bold;">=&gt;</span><span style="color:#839496;"> </span><span style="color:#859900;">infer</span><span style="color:#839496;"> </span><span style="color:#CB4B16;">R</span><span style="color:#839496;"> </span><span style="color:#859900;">?</span><span style="color:#839496;"> </span><span style="color:#CB4B16;">R</span><span style="color:#839496;"> </span><span style="color:#859900;">:</span><span style="color:#839496;"> </span><span style="color:#859900;">any</span></span>
<span class="line"><span style="color:#93A1A1;font-weight:bold;">type</span><span style="color:#839496;"> </span><span style="color:#CB4B16;">InferString</span><span style="color:#839496;">&lt;</span><span style="color:#CB4B16;">T</span><span style="color:#839496;"> </span><span style="color:#93A1A1;font-weight:bold;">extends</span><span style="color:#839496;"> </span><span style="color:#859900;">string</span><span style="color:#839496;">&gt; </span><span style="color:#859900;">=</span><span style="color:#839496;"> </span><span style="color:#CB4B16;">T</span><span style="color:#839496;"> </span><span style="color:#93A1A1;font-weight:bold;">extends</span><span style="color:#839496;"> </span><span style="color:#2AA198;">\`\${</span><span style="color:#859900;">infer</span><span style="color:#839496;"> </span><span style="color:#CB4B16;">F</span><span style="color:#2AA198;">}\${</span><span style="color:#859900;">infer</span><span style="color:#839496;"> </span><span style="color:#CB4B16;">_</span><span style="color:#2AA198;">}\`</span><span style="color:#839496;"> </span><span style="color:#859900;">?</span><span style="color:#839496;"> </span><span style="color:#CB4B16;">F</span><span style="color:#839496;"> </span><span style="color:#859900;">:</span><span style="color:#839496;"> []</span></span>
<span class="line"><span style="color:#93A1A1;font-weight:bold;">type</span><span style="color:#839496;"> </span><span style="color:#CB4B16;">StringToUnion</span><span style="color:#839496;">&lt;</span><span style="color:#CB4B16;">T</span><span style="color:#839496;"> </span><span style="color:#93A1A1;font-weight:bold;">extends</span><span style="color:#839496;"> </span><span style="color:#859900;">string</span><span style="color:#839496;">, </span><span style="color:#CB4B16;">U</span><span style="color:#839496;"> </span><span style="color:#859900;">=</span><span style="color:#839496;"> </span><span style="color:#859900;">never</span><span style="color:#839496;">&gt; </span><span style="color:#859900;">=</span><span style="color:#839496;"> </span><span style="color:#CB4B16;">T</span><span style="color:#839496;"> </span><span style="color:#93A1A1;font-weight:bold;">extends</span><span style="color:#839496;"> </span><span style="color:#2AA198;">&#39;&#39;</span></span>
<span class="line"><span style="color:#839496;">  </span><span style="color:#859900;">?</span><span style="color:#839496;"> </span><span style="color:#CB4B16;">U</span></span>
<span class="line"><span style="color:#839496;">  </span><span style="color:#859900;">:</span><span style="color:#839496;"> </span><span style="color:#CB4B16;">T</span><span style="color:#839496;"> </span><span style="color:#93A1A1;font-weight:bold;">extends</span><span style="color:#839496;"> </span><span style="color:#2AA198;">\`\${</span><span style="color:#859900;">infer</span><span style="color:#839496;"> </span><span style="color:#CB4B16;">L</span><span style="color:#2AA198;">}\${</span><span style="color:#859900;">infer</span><span style="color:#839496;"> </span><span style="color:#CB4B16;">R</span><span style="color:#2AA198;">}\`</span></span>
<span class="line"><span style="color:#839496;">    </span><span style="color:#859900;">?</span><span style="color:#839496;"> </span><span style="color:#CB4B16;">StringToUnion</span><span style="color:#839496;">&lt;</span><span style="color:#CB4B16;">R</span><span style="color:#839496;">, </span><span style="color:#CB4B16;">U</span><span style="color:#839496;"> </span><span style="color:#859900;">|</span><span style="color:#839496;"> </span><span style="color:#CB4B16;">L</span><span style="color:#839496;">&gt;</span></span>
<span class="line"><span style="color:#839496;">    </span><span style="color:#859900;">:</span><span style="color:#839496;"> </span><span style="color:#CB4B16;">U</span></span></code></pre><pre class="shiki solarized-light vp-code-light"><code><span class="line"><span style="color:#586E75;font-weight:bold;">type</span><span style="color:#657B83;"> </span><span style="color:#CB4B16;">InferArray</span><span style="color:#657B83;">&lt;</span><span style="color:#CB4B16;">T</span><span style="color:#657B83;">&gt; </span><span style="color:#859900;">=</span><span style="color:#657B83;"> </span><span style="color:#CB4B16;">T</span><span style="color:#657B83;"> </span><span style="color:#586E75;font-weight:bold;">extends</span><span style="color:#657B83;"> (</span><span style="color:#859900;">infer</span><span style="color:#657B83;"> </span><span style="color:#CB4B16;">U</span><span style="color:#657B83;">)[] </span><span style="color:#859900;">?</span><span style="color:#657B83;"> </span><span style="color:#CB4B16;">U</span><span style="color:#657B83;"> </span><span style="color:#859900;">:</span><span style="color:#657B83;"> </span><span style="color:#859900;">never</span></span>
<span class="line"><span style="color:#586E75;font-weight:bold;">type</span><span style="color:#657B83;"> </span><span style="color:#CB4B16;">InferFirst</span><span style="color:#657B83;">&lt;</span><span style="color:#CB4B16;">T</span><span style="color:#657B83;"> </span><span style="color:#586E75;font-weight:bold;">extends</span><span style="color:#657B83;"> </span><span style="color:#859900;">unknown</span><span style="color:#657B83;">[]&gt; </span><span style="color:#859900;">=</span><span style="color:#657B83;"> </span><span style="color:#CB4B16;">T</span><span style="color:#657B83;"> </span><span style="color:#586E75;font-weight:bold;">extends</span><span style="color:#657B83;"> [</span><span style="color:#859900;">infer</span><span style="color:#657B83;"> </span><span style="color:#CB4B16;">F</span><span style="color:#657B83;">, </span><span style="color:#859900;">...infer</span><span style="color:#657B83;"> </span><span style="color:#CB4B16;">_</span><span style="color:#657B83;">] </span><span style="color:#859900;">?</span><span style="color:#657B83;"> </span><span style="color:#CB4B16;">P</span><span style="color:#657B83;"> </span><span style="color:#859900;">:</span><span style="color:#657B83;"> </span><span style="color:#859900;">never</span></span>
<span class="line"><span style="color:#586E75;font-weight:bold;">type</span><span style="color:#657B83;"> </span><span style="color:#CB4B16;">ReturnType</span><span style="color:#657B83;">&lt;</span><span style="color:#CB4B16;">T</span><span style="color:#657B83;">&gt; </span><span style="color:#859900;">=</span><span style="color:#657B83;"> </span><span style="color:#CB4B16;">T</span><span style="color:#657B83;"> </span><span style="color:#586E75;font-weight:bold;">extends</span><span style="color:#657B83;"> (</span><span style="color:#859900;">...</span><span style="color:#657B83;">arg</span><span style="color:#859900;">:</span><span style="color:#657B83;"> </span><span style="color:#859900;">any</span><span style="color:#657B83;">[]) </span><span style="color:#586E75;font-weight:bold;">=&gt;</span><span style="color:#657B83;"> </span><span style="color:#859900;">infer</span><span style="color:#657B83;"> </span><span style="color:#CB4B16;">R</span><span style="color:#657B83;"> </span><span style="color:#859900;">?</span><span style="color:#657B83;"> </span><span style="color:#CB4B16;">R</span><span style="color:#657B83;"> </span><span style="color:#859900;">:</span><span style="color:#657B83;"> </span><span style="color:#859900;">any</span></span>
<span class="line"><span style="color:#586E75;font-weight:bold;">type</span><span style="color:#657B83;"> </span><span style="color:#CB4B16;">InferString</span><span style="color:#657B83;">&lt;</span><span style="color:#CB4B16;">T</span><span style="color:#657B83;"> </span><span style="color:#586E75;font-weight:bold;">extends</span><span style="color:#657B83;"> </span><span style="color:#859900;">string</span><span style="color:#657B83;">&gt; </span><span style="color:#859900;">=</span><span style="color:#657B83;"> </span><span style="color:#CB4B16;">T</span><span style="color:#657B83;"> </span><span style="color:#586E75;font-weight:bold;">extends</span><span style="color:#657B83;"> </span><span style="color:#2AA198;">\`\${</span><span style="color:#859900;">infer</span><span style="color:#657B83;"> </span><span style="color:#CB4B16;">F</span><span style="color:#2AA198;">}\${</span><span style="color:#859900;">infer</span><span style="color:#657B83;"> </span><span style="color:#CB4B16;">_</span><span style="color:#2AA198;">}\`</span><span style="color:#657B83;"> </span><span style="color:#859900;">?</span><span style="color:#657B83;"> </span><span style="color:#CB4B16;">F</span><span style="color:#657B83;"> </span><span style="color:#859900;">:</span><span style="color:#657B83;"> []</span></span>
<span class="line"><span style="color:#586E75;font-weight:bold;">type</span><span style="color:#657B83;"> </span><span style="color:#CB4B16;">StringToUnion</span><span style="color:#657B83;">&lt;</span><span style="color:#CB4B16;">T</span><span style="color:#657B83;"> </span><span style="color:#586E75;font-weight:bold;">extends</span><span style="color:#657B83;"> </span><span style="color:#859900;">string</span><span style="color:#657B83;">, </span><span style="color:#CB4B16;">U</span><span style="color:#657B83;"> </span><span style="color:#859900;">=</span><span style="color:#657B83;"> </span><span style="color:#859900;">never</span><span style="color:#657B83;">&gt; </span><span style="color:#859900;">=</span><span style="color:#657B83;"> </span><span style="color:#CB4B16;">T</span><span style="color:#657B83;"> </span><span style="color:#586E75;font-weight:bold;">extends</span><span style="color:#657B83;"> </span><span style="color:#2AA198;">&#39;&#39;</span></span>
<span class="line"><span style="color:#657B83;">  </span><span style="color:#859900;">?</span><span style="color:#657B83;"> </span><span style="color:#CB4B16;">U</span></span>
<span class="line"><span style="color:#657B83;">  </span><span style="color:#859900;">:</span><span style="color:#657B83;"> </span><span style="color:#CB4B16;">T</span><span style="color:#657B83;"> </span><span style="color:#586E75;font-weight:bold;">extends</span><span style="color:#657B83;"> </span><span style="color:#2AA198;">\`\${</span><span style="color:#859900;">infer</span><span style="color:#657B83;"> </span><span style="color:#CB4B16;">L</span><span style="color:#2AA198;">}\${</span><span style="color:#859900;">infer</span><span style="color:#657B83;"> </span><span style="color:#CB4B16;">R</span><span style="color:#2AA198;">}\`</span></span>
<span class="line"><span style="color:#657B83;">    </span><span style="color:#859900;">?</span><span style="color:#657B83;"> </span><span style="color:#CB4B16;">StringToUnion</span><span style="color:#657B83;">&lt;</span><span style="color:#CB4B16;">R</span><span style="color:#657B83;">, </span><span style="color:#CB4B16;">U</span><span style="color:#657B83;"> </span><span style="color:#859900;">|</span><span style="color:#657B83;"> </span><span style="color:#CB4B16;">L</span><span style="color:#657B83;">&gt;</span></span>
<span class="line"><span style="color:#657B83;">    </span><span style="color:#859900;">:</span><span style="color:#657B83;"> </span><span style="color:#CB4B16;">U</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br></div></div><ul><li>[] 索引访问操作符</li></ul><div class="language-ts vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki solarized-dark vp-code-dark"><code><span class="line"><span style="color:#93A1A1;font-weight:bold;">interface</span><span style="color:#839496;"> </span><span style="color:#CB4B16;">TInfo</span><span style="color:#839496;"> {</span></span>
<span class="line"><span style="color:#839496;">  lang</span><span style="color:#859900;">:</span><span style="color:#839496;"> </span><span style="color:#2AA198;">&#39;ts&#39;</span><span style="color:#839496;"> </span><span style="color:#859900;">|</span><span style="color:#839496;"> </span><span style="color:#2AA198;">&#39;js&#39;</span></span>
<span class="line"><span style="color:#839496;">  type</span><span style="color:#859900;">:</span><span style="color:#839496;"> </span><span style="color:#859900;">string</span></span>
<span class="line"><span style="color:#839496;">}</span></span>
<span class="line"><span style="color:#93A1A1;font-weight:bold;">type</span><span style="color:#839496;"> </span><span style="color:#CB4B16;">TLang</span><span style="color:#839496;"> </span><span style="color:#859900;">=</span><span style="color:#839496;"> </span><span style="color:#CB4B16;">TInfo</span><span style="color:#839496;">[</span><span style="color:#2AA198;">&#39;lang&#39;</span><span style="color:#839496;">] </span><span style="color:#586E75;font-style:italic;">// &#39;ts&#39; | &#39;js&#39;</span></span></code></pre><pre class="shiki solarized-light vp-code-light"><code><span class="line"><span style="color:#586E75;font-weight:bold;">interface</span><span style="color:#657B83;"> </span><span style="color:#CB4B16;">TInfo</span><span style="color:#657B83;"> {</span></span>
<span class="line"><span style="color:#657B83;">  lang</span><span style="color:#859900;">:</span><span style="color:#657B83;"> </span><span style="color:#2AA198;">&#39;ts&#39;</span><span style="color:#657B83;"> </span><span style="color:#859900;">|</span><span style="color:#657B83;"> </span><span style="color:#2AA198;">&#39;js&#39;</span></span>
<span class="line"><span style="color:#657B83;">  type</span><span style="color:#859900;">:</span><span style="color:#657B83;"> </span><span style="color:#859900;">string</span></span>
<span class="line"><span style="color:#657B83;">}</span></span>
<span class="line"><span style="color:#586E75;font-weight:bold;">type</span><span style="color:#657B83;"> </span><span style="color:#CB4B16;">TLang</span><span style="color:#657B83;"> </span><span style="color:#859900;">=</span><span style="color:#657B83;"> </span><span style="color:#CB4B16;">TInfo</span><span style="color:#657B83;">[</span><span style="color:#2AA198;">&#39;lang&#39;</span><span style="color:#657B83;">] </span><span style="color:#93A1A1;font-style:italic;">// &#39;ts&#39; | &#39;js&#39;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><h2 id="tsconfig-json" tabindex="-1">tsconfig.json <a class="header-anchor" href="#tsconfig-json" aria-label="Permalink to &quot;tsconfig.json&quot;">​</a></h2><div class="language-json vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki solarized-dark vp-code-dark"><code><span class="line"><span style="color:#839496;">{</span></span>
<span class="line"><span style="color:#839496;">  </span><span style="color:#859900;">&quot;compilerOptions&quot;</span><span style="color:#839496;">: {</span></span>
<span class="line"><span style="color:#839496;">    </span><span style="color:#586E75;font-style:italic;">/* 基本选项 */</span></span>
<span class="line"><span style="color:#839496;">    </span><span style="color:#859900;">&quot;target&quot;</span><span style="color:#839496;">: </span><span style="color:#2AA198;">&quot;es5&quot;</span><span style="color:#839496;">,                       </span><span style="color:#586E75;font-style:italic;">// 指定 ECMAScript 目标版本: &#39;ES3&#39; (default), &#39;ES5&#39;, &#39;ES6&#39;/&#39;ES2015&#39;, &#39;ES2016&#39;, &#39;ES2017&#39;, or &#39;ESNEXT&#39;</span></span>
<span class="line"><span style="color:#839496;">    </span><span style="color:#859900;">&quot;module&quot;</span><span style="color:#839496;">: </span><span style="color:#2AA198;">&quot;commonjs&quot;</span><span style="color:#839496;">,                  </span><span style="color:#586E75;font-style:italic;">// 指定使用模块: &#39;commonjs&#39;, &#39;amd&#39;, &#39;system&#39;, &#39;umd&#39; or &#39;es2015&#39;</span></span>
<span class="line"><span style="color:#839496;">    </span><span style="color:#859900;">&quot;lib&quot;</span><span style="color:#839496;">: [],                             </span><span style="color:#586E75;font-style:italic;">// 指定要包含在编译中的库文件</span></span>
<span class="line"><span style="color:#839496;">    </span><span style="color:#859900;">&quot;allowJs&quot;</span><span style="color:#839496;">: </span><span style="color:#B58900;">true</span><span style="color:#839496;">,                       </span><span style="color:#586E75;font-style:italic;">// 允许编译 javascript 文件</span></span>
<span class="line"><span style="color:#839496;">    </span><span style="color:#859900;">&quot;checkJs&quot;</span><span style="color:#839496;">: </span><span style="color:#B58900;">true</span><span style="color:#839496;">,                       </span><span style="color:#586E75;font-style:italic;">// 报告 javascript 文件中的错误</span></span>
<span class="line"><span style="color:#839496;">    </span><span style="color:#859900;">&quot;jsx&quot;</span><span style="color:#839496;">: </span><span style="color:#2AA198;">&quot;preserve&quot;</span><span style="color:#839496;">,                     </span><span style="color:#586E75;font-style:italic;">// 指定 jsx 代码的生成: &#39;preserve&#39;, &#39;react-native&#39;, or &#39;react&#39;</span></span>
<span class="line"><span style="color:#839496;">    </span><span style="color:#859900;">&quot;declaration&quot;</span><span style="color:#839496;">: </span><span style="color:#B58900;">true</span><span style="color:#839496;">,                   </span><span style="color:#586E75;font-style:italic;">// 生成相应的 &#39;.d.ts&#39; 文件</span></span>
<span class="line"><span style="color:#839496;">    </span><span style="color:#859900;">&quot;sourceMap&quot;</span><span style="color:#839496;">: </span><span style="color:#B58900;">true</span><span style="color:#839496;">,                     </span><span style="color:#586E75;font-style:italic;">// 生成相应的 &#39;.map&#39; 文件</span></span>
<span class="line"><span style="color:#839496;">    </span><span style="color:#859900;">&quot;outFile&quot;</span><span style="color:#839496;">: </span><span style="color:#2AA198;">&quot;./&quot;</span><span style="color:#839496;">,                       </span><span style="color:#586E75;font-style:italic;">// 将输出文件合并为一个文件</span></span>
<span class="line"><span style="color:#839496;">    </span><span style="color:#859900;">&quot;outDir&quot;</span><span style="color:#839496;">: </span><span style="color:#2AA198;">&quot;./&quot;</span><span style="color:#839496;">,                        </span><span style="color:#586E75;font-style:italic;">// 指定输出目录</span></span>
<span class="line"><span style="color:#839496;">    </span><span style="color:#859900;">&quot;rootDir&quot;</span><span style="color:#839496;">: </span><span style="color:#2AA198;">&quot;./&quot;</span><span style="color:#839496;">,                       </span><span style="color:#586E75;font-style:italic;">// 用来控制输出目录结构 --outDir.</span></span>
<span class="line"><span style="color:#839496;">    </span><span style="color:#859900;">&quot;removeComments&quot;</span><span style="color:#839496;">: </span><span style="color:#B58900;">true</span><span style="color:#839496;">,                </span><span style="color:#586E75;font-style:italic;">// 删除编译后的所有的注释</span></span>
<span class="line"><span style="color:#839496;">    </span><span style="color:#859900;">&quot;noEmit&quot;</span><span style="color:#839496;">: </span><span style="color:#B58900;">true</span><span style="color:#839496;">,                        </span><span style="color:#586E75;font-style:italic;">// 不生成输出文件</span></span>
<span class="line"><span style="color:#839496;">    </span><span style="color:#859900;">&quot;importHelpers&quot;</span><span style="color:#839496;">: </span><span style="color:#B58900;">true</span><span style="color:#839496;">,                 </span><span style="color:#586E75;font-style:italic;">// 从 tslib 导入辅助工具函数</span></span>
<span class="line"><span style="color:#839496;">    </span><span style="color:#859900;">&quot;isolatedModules&quot;</span><span style="color:#839496;">: </span><span style="color:#B58900;">true</span><span style="color:#839496;">,               </span><span style="color:#586E75;font-style:italic;">// 将每个文件做为单独的模块 （与 &#39;ts.transpileModule&#39; 类似）.</span></span>
<span class="line"></span>
<span class="line"><span style="color:#839496;">    </span><span style="color:#586E75;font-style:italic;">/* 严格的类型检查选项 */</span></span>
<span class="line"><span style="color:#839496;">    </span><span style="color:#859900;">&quot;strict&quot;</span><span style="color:#839496;">: </span><span style="color:#B58900;">true</span><span style="color:#839496;">,                        </span><span style="color:#586E75;font-style:italic;">// 启用所有严格类型检查选项</span></span>
<span class="line"><span style="color:#839496;">    </span><span style="color:#859900;">&quot;noImplicitAny&quot;</span><span style="color:#839496;">: </span><span style="color:#B58900;">true</span><span style="color:#839496;">,                 </span><span style="color:#586E75;font-style:italic;">// 在表达式和声明上有隐含的 any类型时报错</span></span>
<span class="line"><span style="color:#839496;">    </span><span style="color:#859900;">&quot;strictNullChecks&quot;</span><span style="color:#839496;">: </span><span style="color:#B58900;">true</span><span style="color:#839496;">,              </span><span style="color:#586E75;font-style:italic;">// 启用严格的 null 检查</span></span>
<span class="line"><span style="color:#839496;">    </span><span style="color:#859900;">&quot;noImplicitThis&quot;</span><span style="color:#839496;">: </span><span style="color:#B58900;">true</span><span style="color:#839496;">,                </span><span style="color:#586E75;font-style:italic;">// 当 this 表达式值为 any 类型的时候，生成一个错误</span></span>
<span class="line"><span style="color:#839496;">    </span><span style="color:#859900;">&quot;alwaysStrict&quot;</span><span style="color:#839496;">: </span><span style="color:#B58900;">true</span><span style="color:#839496;">,                  </span><span style="color:#586E75;font-style:italic;">// 以严格模式检查每个模块，并在每个文件里加入 &#39;use strict&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#839496;">    </span><span style="color:#586E75;font-style:italic;">/* 额外的检查 */</span></span>
<span class="line"><span style="color:#839496;">    </span><span style="color:#859900;">&quot;noUnusedLocals&quot;</span><span style="color:#839496;">: </span><span style="color:#B58900;">true</span><span style="color:#839496;">,                </span><span style="color:#586E75;font-style:italic;">// 有未使用的变量时，抛出错误</span></span>
<span class="line"><span style="color:#839496;">    </span><span style="color:#859900;">&quot;noUnusedParameters&quot;</span><span style="color:#839496;">: </span><span style="color:#B58900;">true</span><span style="color:#839496;">,            </span><span style="color:#586E75;font-style:italic;">// 有未使用的参数时，抛出错误</span></span>
<span class="line"><span style="color:#839496;">    </span><span style="color:#859900;">&quot;noImplicitReturns&quot;</span><span style="color:#839496;">: </span><span style="color:#B58900;">true</span><span style="color:#839496;">,             </span><span style="color:#586E75;font-style:italic;">// 并不是所有函数里的代码都有返回值时，抛出错误</span></span>
<span class="line"><span style="color:#839496;">    </span><span style="color:#859900;">&quot;noFallthroughCasesInSwitch&quot;</span><span style="color:#839496;">: </span><span style="color:#B58900;">true</span><span style="color:#839496;">,    </span><span style="color:#586E75;font-style:italic;">// 报告 switch 语句的 fallthrough 错误。（即，不允许 switch 的 case 语句贯穿）</span></span>
<span class="line"></span>
<span class="line"><span style="color:#839496;">    </span><span style="color:#586E75;font-style:italic;">/* 模块解析选项 */</span></span>
<span class="line"><span style="color:#839496;">    </span><span style="color:#859900;">&quot;moduleResolution&quot;</span><span style="color:#839496;">: </span><span style="color:#2AA198;">&quot;node&quot;</span><span style="color:#839496;">,            </span><span style="color:#586E75;font-style:italic;">// 选择模块解析策略： &#39;node&#39; (Node.js) or &#39;classic&#39; (TypeScript pre-1.6)</span></span>
<span class="line"><span style="color:#839496;">    </span><span style="color:#859900;">&quot;baseUrl&quot;</span><span style="color:#839496;">: </span><span style="color:#2AA198;">&quot;./&quot;</span><span style="color:#839496;">,                       </span><span style="color:#586E75;font-style:italic;">// 用于解析非相对模块名称的基目录</span></span>
<span class="line"><span style="color:#839496;">    </span><span style="color:#859900;">&quot;paths&quot;</span><span style="color:#839496;">: {},                           </span><span style="color:#586E75;font-style:italic;">// 模块名到基于 baseUrl 的路径映射的列表</span></span>
<span class="line"><span style="color:#839496;">    </span><span style="color:#859900;">&quot;rootDirs&quot;</span><span style="color:#839496;">: [],                        </span><span style="color:#586E75;font-style:italic;">// 根文件夹列表，其组合内容表示项目运行时的结构内容</span></span>
<span class="line"><span style="color:#839496;">    </span><span style="color:#859900;">&quot;typeRoots&quot;</span><span style="color:#839496;">: [],                       </span><span style="color:#586E75;font-style:italic;">// 包含类型声明的文件列表</span></span>
<span class="line"><span style="color:#839496;">    </span><span style="color:#859900;">&quot;types&quot;</span><span style="color:#839496;">: [],                           </span><span style="color:#586E75;font-style:italic;">// 需要包含的类型声明文件名列表</span></span>
<span class="line"><span style="color:#839496;">    </span><span style="color:#859900;">&quot;allowSyntheticDefaultImports&quot;</span><span style="color:#839496;">: </span><span style="color:#B58900;">true</span><span style="color:#839496;">,  </span><span style="color:#586E75;font-style:italic;">// 允许从没有设置默认导出的模块中默认导入。</span></span>
<span class="line"></span>
<span class="line"><span style="color:#839496;">    </span><span style="color:#586E75;font-style:italic;">/* Source Map Options */</span></span>
<span class="line"><span style="color:#839496;">    </span><span style="color:#859900;">&quot;sourceRoot&quot;</span><span style="color:#839496;">: </span><span style="color:#2AA198;">&quot;./&quot;</span><span style="color:#839496;">,                    </span><span style="color:#586E75;font-style:italic;">// 指定调试器应该找到 TypeScript 文件而不是源文件的位置</span></span>
<span class="line"><span style="color:#839496;">    </span><span style="color:#859900;">&quot;mapRoot&quot;</span><span style="color:#839496;">: </span><span style="color:#2AA198;">&quot;./&quot;</span><span style="color:#839496;">,                       </span><span style="color:#586E75;font-style:italic;">// 指定调试器应该找到映射文件而不是生成文件的位置</span></span>
<span class="line"><span style="color:#839496;">    </span><span style="color:#859900;">&quot;inlineSourceMap&quot;</span><span style="color:#839496;">: </span><span style="color:#B58900;">true</span><span style="color:#839496;">,               </span><span style="color:#586E75;font-style:italic;">// 生成单个 soucemaps 文件，而不是将 sourcemaps 生成不同的文件</span></span>
<span class="line"><span style="color:#839496;">    </span><span style="color:#859900;">&quot;inlineSources&quot;</span><span style="color:#839496;">: </span><span style="color:#B58900;">true</span><span style="color:#839496;">,                 </span><span style="color:#586E75;font-style:italic;">// 将代码与 sourcemaps 生成到一个文件中，要求同时设置了 --inlineSourceMap 或 --sourceMap 属性</span></span>
<span class="line"></span>
<span class="line"><span style="color:#839496;">    </span><span style="color:#586E75;font-style:italic;">/* 其他选项 */</span></span>
<span class="line"><span style="color:#839496;">    </span><span style="color:#859900;">&quot;experimentalDecorators&quot;</span><span style="color:#839496;">: </span><span style="color:#B58900;">true</span><span style="color:#839496;">,        </span><span style="color:#586E75;font-style:italic;">// 启用装饰器</span></span>
<span class="line"><span style="color:#839496;">    </span><span style="color:#859900;">&quot;emitDecoratorMetadata&quot;</span><span style="color:#839496;">: </span><span style="color:#B58900;">true</span><span style="color:#839496;">          </span><span style="color:#586E75;font-style:italic;">// 为装饰器提供元数据的支持</span></span>
<span class="line"><span style="color:#839496;">  }</span></span>
<span class="line"><span style="color:#839496;">}</span></span></code></pre><pre class="shiki solarized-light vp-code-light"><code><span class="line"><span style="color:#657B83;">{</span></span>
<span class="line"><span style="color:#657B83;">  </span><span style="color:#859900;">&quot;compilerOptions&quot;</span><span style="color:#657B83;">: {</span></span>
<span class="line"><span style="color:#657B83;">    </span><span style="color:#93A1A1;font-style:italic;">/* 基本选项 */</span></span>
<span class="line"><span style="color:#657B83;">    </span><span style="color:#859900;">&quot;target&quot;</span><span style="color:#657B83;">: </span><span style="color:#2AA198;">&quot;es5&quot;</span><span style="color:#657B83;">,                       </span><span style="color:#93A1A1;font-style:italic;">// 指定 ECMAScript 目标版本: &#39;ES3&#39; (default), &#39;ES5&#39;, &#39;ES6&#39;/&#39;ES2015&#39;, &#39;ES2016&#39;, &#39;ES2017&#39;, or &#39;ESNEXT&#39;</span></span>
<span class="line"><span style="color:#657B83;">    </span><span style="color:#859900;">&quot;module&quot;</span><span style="color:#657B83;">: </span><span style="color:#2AA198;">&quot;commonjs&quot;</span><span style="color:#657B83;">,                  </span><span style="color:#93A1A1;font-style:italic;">// 指定使用模块: &#39;commonjs&#39;, &#39;amd&#39;, &#39;system&#39;, &#39;umd&#39; or &#39;es2015&#39;</span></span>
<span class="line"><span style="color:#657B83;">    </span><span style="color:#859900;">&quot;lib&quot;</span><span style="color:#657B83;">: [],                             </span><span style="color:#93A1A1;font-style:italic;">// 指定要包含在编译中的库文件</span></span>
<span class="line"><span style="color:#657B83;">    </span><span style="color:#859900;">&quot;allowJs&quot;</span><span style="color:#657B83;">: </span><span style="color:#B58900;">true</span><span style="color:#657B83;">,                       </span><span style="color:#93A1A1;font-style:italic;">// 允许编译 javascript 文件</span></span>
<span class="line"><span style="color:#657B83;">    </span><span style="color:#859900;">&quot;checkJs&quot;</span><span style="color:#657B83;">: </span><span style="color:#B58900;">true</span><span style="color:#657B83;">,                       </span><span style="color:#93A1A1;font-style:italic;">// 报告 javascript 文件中的错误</span></span>
<span class="line"><span style="color:#657B83;">    </span><span style="color:#859900;">&quot;jsx&quot;</span><span style="color:#657B83;">: </span><span style="color:#2AA198;">&quot;preserve&quot;</span><span style="color:#657B83;">,                     </span><span style="color:#93A1A1;font-style:italic;">// 指定 jsx 代码的生成: &#39;preserve&#39;, &#39;react-native&#39;, or &#39;react&#39;</span></span>
<span class="line"><span style="color:#657B83;">    </span><span style="color:#859900;">&quot;declaration&quot;</span><span style="color:#657B83;">: </span><span style="color:#B58900;">true</span><span style="color:#657B83;">,                   </span><span style="color:#93A1A1;font-style:italic;">// 生成相应的 &#39;.d.ts&#39; 文件</span></span>
<span class="line"><span style="color:#657B83;">    </span><span style="color:#859900;">&quot;sourceMap&quot;</span><span style="color:#657B83;">: </span><span style="color:#B58900;">true</span><span style="color:#657B83;">,                     </span><span style="color:#93A1A1;font-style:italic;">// 生成相应的 &#39;.map&#39; 文件</span></span>
<span class="line"><span style="color:#657B83;">    </span><span style="color:#859900;">&quot;outFile&quot;</span><span style="color:#657B83;">: </span><span style="color:#2AA198;">&quot;./&quot;</span><span style="color:#657B83;">,                       </span><span style="color:#93A1A1;font-style:italic;">// 将输出文件合并为一个文件</span></span>
<span class="line"><span style="color:#657B83;">    </span><span style="color:#859900;">&quot;outDir&quot;</span><span style="color:#657B83;">: </span><span style="color:#2AA198;">&quot;./&quot;</span><span style="color:#657B83;">,                        </span><span style="color:#93A1A1;font-style:italic;">// 指定输出目录</span></span>
<span class="line"><span style="color:#657B83;">    </span><span style="color:#859900;">&quot;rootDir&quot;</span><span style="color:#657B83;">: </span><span style="color:#2AA198;">&quot;./&quot;</span><span style="color:#657B83;">,                       </span><span style="color:#93A1A1;font-style:italic;">// 用来控制输出目录结构 --outDir.</span></span>
<span class="line"><span style="color:#657B83;">    </span><span style="color:#859900;">&quot;removeComments&quot;</span><span style="color:#657B83;">: </span><span style="color:#B58900;">true</span><span style="color:#657B83;">,                </span><span style="color:#93A1A1;font-style:italic;">// 删除编译后的所有的注释</span></span>
<span class="line"><span style="color:#657B83;">    </span><span style="color:#859900;">&quot;noEmit&quot;</span><span style="color:#657B83;">: </span><span style="color:#B58900;">true</span><span style="color:#657B83;">,                        </span><span style="color:#93A1A1;font-style:italic;">// 不生成输出文件</span></span>
<span class="line"><span style="color:#657B83;">    </span><span style="color:#859900;">&quot;importHelpers&quot;</span><span style="color:#657B83;">: </span><span style="color:#B58900;">true</span><span style="color:#657B83;">,                 </span><span style="color:#93A1A1;font-style:italic;">// 从 tslib 导入辅助工具函数</span></span>
<span class="line"><span style="color:#657B83;">    </span><span style="color:#859900;">&quot;isolatedModules&quot;</span><span style="color:#657B83;">: </span><span style="color:#B58900;">true</span><span style="color:#657B83;">,               </span><span style="color:#93A1A1;font-style:italic;">// 将每个文件做为单独的模块 （与 &#39;ts.transpileModule&#39; 类似）.</span></span>
<span class="line"></span>
<span class="line"><span style="color:#657B83;">    </span><span style="color:#93A1A1;font-style:italic;">/* 严格的类型检查选项 */</span></span>
<span class="line"><span style="color:#657B83;">    </span><span style="color:#859900;">&quot;strict&quot;</span><span style="color:#657B83;">: </span><span style="color:#B58900;">true</span><span style="color:#657B83;">,                        </span><span style="color:#93A1A1;font-style:italic;">// 启用所有严格类型检查选项</span></span>
<span class="line"><span style="color:#657B83;">    </span><span style="color:#859900;">&quot;noImplicitAny&quot;</span><span style="color:#657B83;">: </span><span style="color:#B58900;">true</span><span style="color:#657B83;">,                 </span><span style="color:#93A1A1;font-style:italic;">// 在表达式和声明上有隐含的 any类型时报错</span></span>
<span class="line"><span style="color:#657B83;">    </span><span style="color:#859900;">&quot;strictNullChecks&quot;</span><span style="color:#657B83;">: </span><span style="color:#B58900;">true</span><span style="color:#657B83;">,              </span><span style="color:#93A1A1;font-style:italic;">// 启用严格的 null 检查</span></span>
<span class="line"><span style="color:#657B83;">    </span><span style="color:#859900;">&quot;noImplicitThis&quot;</span><span style="color:#657B83;">: </span><span style="color:#B58900;">true</span><span style="color:#657B83;">,                </span><span style="color:#93A1A1;font-style:italic;">// 当 this 表达式值为 any 类型的时候，生成一个错误</span></span>
<span class="line"><span style="color:#657B83;">    </span><span style="color:#859900;">&quot;alwaysStrict&quot;</span><span style="color:#657B83;">: </span><span style="color:#B58900;">true</span><span style="color:#657B83;">,                  </span><span style="color:#93A1A1;font-style:italic;">// 以严格模式检查每个模块，并在每个文件里加入 &#39;use strict&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#657B83;">    </span><span style="color:#93A1A1;font-style:italic;">/* 额外的检查 */</span></span>
<span class="line"><span style="color:#657B83;">    </span><span style="color:#859900;">&quot;noUnusedLocals&quot;</span><span style="color:#657B83;">: </span><span style="color:#B58900;">true</span><span style="color:#657B83;">,                </span><span style="color:#93A1A1;font-style:italic;">// 有未使用的变量时，抛出错误</span></span>
<span class="line"><span style="color:#657B83;">    </span><span style="color:#859900;">&quot;noUnusedParameters&quot;</span><span style="color:#657B83;">: </span><span style="color:#B58900;">true</span><span style="color:#657B83;">,            </span><span style="color:#93A1A1;font-style:italic;">// 有未使用的参数时，抛出错误</span></span>
<span class="line"><span style="color:#657B83;">    </span><span style="color:#859900;">&quot;noImplicitReturns&quot;</span><span style="color:#657B83;">: </span><span style="color:#B58900;">true</span><span style="color:#657B83;">,             </span><span style="color:#93A1A1;font-style:italic;">// 并不是所有函数里的代码都有返回值时，抛出错误</span></span>
<span class="line"><span style="color:#657B83;">    </span><span style="color:#859900;">&quot;noFallthroughCasesInSwitch&quot;</span><span style="color:#657B83;">: </span><span style="color:#B58900;">true</span><span style="color:#657B83;">,    </span><span style="color:#93A1A1;font-style:italic;">// 报告 switch 语句的 fallthrough 错误。（即，不允许 switch 的 case 语句贯穿）</span></span>
<span class="line"></span>
<span class="line"><span style="color:#657B83;">    </span><span style="color:#93A1A1;font-style:italic;">/* 模块解析选项 */</span></span>
<span class="line"><span style="color:#657B83;">    </span><span style="color:#859900;">&quot;moduleResolution&quot;</span><span style="color:#657B83;">: </span><span style="color:#2AA198;">&quot;node&quot;</span><span style="color:#657B83;">,            </span><span style="color:#93A1A1;font-style:italic;">// 选择模块解析策略： &#39;node&#39; (Node.js) or &#39;classic&#39; (TypeScript pre-1.6)</span></span>
<span class="line"><span style="color:#657B83;">    </span><span style="color:#859900;">&quot;baseUrl&quot;</span><span style="color:#657B83;">: </span><span style="color:#2AA198;">&quot;./&quot;</span><span style="color:#657B83;">,                       </span><span style="color:#93A1A1;font-style:italic;">// 用于解析非相对模块名称的基目录</span></span>
<span class="line"><span style="color:#657B83;">    </span><span style="color:#859900;">&quot;paths&quot;</span><span style="color:#657B83;">: {},                           </span><span style="color:#93A1A1;font-style:italic;">// 模块名到基于 baseUrl 的路径映射的列表</span></span>
<span class="line"><span style="color:#657B83;">    </span><span style="color:#859900;">&quot;rootDirs&quot;</span><span style="color:#657B83;">: [],                        </span><span style="color:#93A1A1;font-style:italic;">// 根文件夹列表，其组合内容表示项目运行时的结构内容</span></span>
<span class="line"><span style="color:#657B83;">    </span><span style="color:#859900;">&quot;typeRoots&quot;</span><span style="color:#657B83;">: [],                       </span><span style="color:#93A1A1;font-style:italic;">// 包含类型声明的文件列表</span></span>
<span class="line"><span style="color:#657B83;">    </span><span style="color:#859900;">&quot;types&quot;</span><span style="color:#657B83;">: [],                           </span><span style="color:#93A1A1;font-style:italic;">// 需要包含的类型声明文件名列表</span></span>
<span class="line"><span style="color:#657B83;">    </span><span style="color:#859900;">&quot;allowSyntheticDefaultImports&quot;</span><span style="color:#657B83;">: </span><span style="color:#B58900;">true</span><span style="color:#657B83;">,  </span><span style="color:#93A1A1;font-style:italic;">// 允许从没有设置默认导出的模块中默认导入。</span></span>
<span class="line"></span>
<span class="line"><span style="color:#657B83;">    </span><span style="color:#93A1A1;font-style:italic;">/* Source Map Options */</span></span>
<span class="line"><span style="color:#657B83;">    </span><span style="color:#859900;">&quot;sourceRoot&quot;</span><span style="color:#657B83;">: </span><span style="color:#2AA198;">&quot;./&quot;</span><span style="color:#657B83;">,                    </span><span style="color:#93A1A1;font-style:italic;">// 指定调试器应该找到 TypeScript 文件而不是源文件的位置</span></span>
<span class="line"><span style="color:#657B83;">    </span><span style="color:#859900;">&quot;mapRoot&quot;</span><span style="color:#657B83;">: </span><span style="color:#2AA198;">&quot;./&quot;</span><span style="color:#657B83;">,                       </span><span style="color:#93A1A1;font-style:italic;">// 指定调试器应该找到映射文件而不是生成文件的位置</span></span>
<span class="line"><span style="color:#657B83;">    </span><span style="color:#859900;">&quot;inlineSourceMap&quot;</span><span style="color:#657B83;">: </span><span style="color:#B58900;">true</span><span style="color:#657B83;">,               </span><span style="color:#93A1A1;font-style:italic;">// 生成单个 soucemaps 文件，而不是将 sourcemaps 生成不同的文件</span></span>
<span class="line"><span style="color:#657B83;">    </span><span style="color:#859900;">&quot;inlineSources&quot;</span><span style="color:#657B83;">: </span><span style="color:#B58900;">true</span><span style="color:#657B83;">,                 </span><span style="color:#93A1A1;font-style:italic;">// 将代码与 sourcemaps 生成到一个文件中，要求同时设置了 --inlineSourceMap 或 --sourceMap 属性</span></span>
<span class="line"></span>
<span class="line"><span style="color:#657B83;">    </span><span style="color:#93A1A1;font-style:italic;">/* 其他选项 */</span></span>
<span class="line"><span style="color:#657B83;">    </span><span style="color:#859900;">&quot;experimentalDecorators&quot;</span><span style="color:#657B83;">: </span><span style="color:#B58900;">true</span><span style="color:#657B83;">,        </span><span style="color:#93A1A1;font-style:italic;">// 启用装饰器</span></span>
<span class="line"><span style="color:#657B83;">    </span><span style="color:#859900;">&quot;emitDecoratorMetadata&quot;</span><span style="color:#657B83;">: </span><span style="color:#B58900;">true</span><span style="color:#657B83;">          </span><span style="color:#93A1A1;font-style:italic;">// 为装饰器提供元数据的支持</span></span>
<span class="line"><span style="color:#657B83;">  }</span></span>
<span class="line"><span style="color:#657B83;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br><span class="line-number">48</span><br><span class="line-number">49</span><br><span class="line-number">50</span><br><span class="line-number">51</span><br><span class="line-number">52</span><br></div></div>`,24);function d(b,A,h,m,g,f){const a=t("font");return c(),r("div",null,[i,l("p",null,[s("联合类型用"),p(a,{color:"#f5222d"},{default:o(()=>[s(" | ")]),_:1}),s("分隔，表示取值可以为多种类型中的一种")]),B,l("p",null,[s("交叉类型就是跟联合类型相反，用"),p(a,{color:"#f5222d"},{default:o(()=>[s(" & ")]),_:1}),s("操作符表示，交叉类型就是两个类型必须存在")]),u])}const C=e(y,[["render",d]]);export{v as __pageData,C as default};
